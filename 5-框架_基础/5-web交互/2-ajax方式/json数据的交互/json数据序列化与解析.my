<h1>json 数据传递的编码解码</h1>

<pre>
encodeURIComponent 有空研究一下！</pre>

<h2>前端编码</h2>

<p>function generateInvoice_all(){<br />
    var params = {};<br />
    params.orderEndtime = $("#orderEndtime_ordersearch").val();<br />
        $.ajax({<br />
            url: "manage/invoice/addInvoices.do",<br />
            dataType: "json",<br />
            type: "post",<br />
            traditional: true, //数组格式转换 加上这个就可以了<br />
            data: {"datas":<strong>JSON.stringify</strong>({"flag":"all","params":{"params":params}})}, // 参数对象<br />
            success: function(data)<br />
            {<br />
                if(data.status == "success")<br />
                {<br />
                    showSuccessOrErrorModal(data.msg, "success");<br />
                    orderListTable.draw(false);<br />
                }<br />
                else if(data.status == "fail")<br />
                {<br />
                    showSuccessOrErrorModal(data.msg, "error");<br />
                }<br />
                else<br />
                {<br />
                    showSuccessOrErrorModal(data.msg, "error");<br />
                }<br />
            },<br />
            error: function(data)<br />
            {<br />
                showSuccessOrErrorModal(data.msg, "error");<br />
            }<br />
        });<br />
}</p>

<p> </p>

<h2>后端解码：</h2>

<p>        JSONObject jb = JSONObject.fromObject(arrayStr2jsonStr);<br />
        JSONArray ja = jb.getJSONArray("arrayStr");</p>

<p>注意，这里的JSONObject必须是net包下面的那个，其他的JSONObject下可能没有fromObject这个方法。如怕jar包冲突，可以直接像下面这样写。</p>

<p>net.sf.json.JSONObject.fromObject();</p>

<h2>特例处理：</h2>

<p>如果是一个对象数组的字符串，直接用fromObject是不可以的。此时可以绕一下。</p>

<p>        String jsonArrayStr = "[{\"id\":\"41607db143ba43ddb7516df0d13bc2e1\"},{\"id\":\"db7516df0d13bc2e1adczcz51341\"}]";</p>

<p>原有的方式：        </p>

<p>        SONObject jb = JSONObject.fromObject(jsonArrayStr ); //这样写会报错！</p>

<p>换一个方式：</p>

<p>        Map map = new HashMap();<br />
        map.put("arrayStr", ArrayString);<br />
        String arrayStr2jsonStr = map.toString();<br />
        JSONObject jb = JSONObject.fromObject(arrayStr2jsonStr);<br />
        JSONArray ja = jb.getJSONArray("arrayStr");</p>
