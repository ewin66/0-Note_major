<h1>tomcat添加跨域访问功能-Access-Control-Allow-Origin:*</h1>

<p>目标：tomcat服务器提供的接口，不能在其他域中访问的时候，需要增 Access-Control-Allow-Origin:* </p>

<p>直接配置的方法很多，但是我一个没有成功过，所以只能自己写拦截器了。</p>

<h2>1.　编写拦截器代码</h2>

<p>　　新建一个类，实现Filter接口，代码如下</p>

<p>package com.itxc.filter;</p>

<p>import javax.servlet.*;<br />
import javax.servlet.http.HttpServletResponse;<br />
import java.io.IOException;</p>

<p>public class CORSFilter implements Filter {<br />
    @Override<br />
    public void init(FilterConfig filterConfig) throws ServletException {</p>

<p>    }</p>

<p>    @Override<br />
    public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain) throws IOException, ServletException {<br />
        HttpServletResponse httpResponse = (HttpServletResponse) servletResponse;<br />
        httpResponse.addHeader("Access-Control-Allow-Origin", "*");<br />
        filterChain.doFilter(servletRequest, servletResponse);<br />
    }</p>

<p>    @Override<br />
    public void destroy() {</p>

<p>    }<br />
}</p>

<h2>2.　配置web.xml</h2>

<p><filter><br />
    <filter-name>CorsFilter</filter-name><br />
    <filter-class>com.itxc.filter.CORSFilter</filter-class><br />
</filter></p>

<p><filter-mapping><br />
    <filter-name>CorsFilter</filter-name><br />
    <url-pattern>/*</url-pattern><br />
</filter-mapping></p>

<h2>3. 删除你之前为了这个功能配置的乱起八糟的配置吧</h2>
