<h1>tomcat环境配置</h1>

<p>在电脑上安装tomcat后，要加上好几个配置。</p>

<p>CATALINA_BASE：  D:\suning\server\tomcat6</p>

<p>CATALINA_HOME：D:\suning\server\tomcat6</p>

<p>TOMCAT_HOME：  D:\suning\server\tomcat6</p>

<p>CLASS_PATH：        + ;%TOMCAT_HOME%\bin</p>

<p> </p>

<h2><a href="http://www.csdn.net/tag/java" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_tag']);" target="_blank">java</a><a href="http://www.csdn.net/tag/Tomcat" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_tag']);" target="_blank">Tomcat</a><a href="http://www.csdn.net/tag/%e5%a4%9a%e5%ae%9e%e4%be%8b%e5%88%9b%e5%bb%ba" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_tag']);" target="_blank">多实例创建</a> </h2>

<h2><a href="http://blog.csdn.net/jiaotuwoaini/article/details/51455829">Tomcat解惑 之 CATALINA_HOME与CATALINA_BASE</a></h2>

<p>标签： <a href="http://www.csdn.net/tag/java" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_tag']);" target="_blank">java</a><a href="http://www.csdn.net/tag/Tomcat" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_tag']);" target="_blank">Tomcat</a><a href="http://www.csdn.net/tag/%e5%a4%9a%e5%ae%9e%e4%be%8b%e5%88%9b%e5%bb%ba" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_tag']);" target="_blank">多实例创建</a></p>

<p>看Tomcat源码一段时间一直很好奇为什么有CATALINA_HOME和CATALINA_BASE区别：</p>

<p>分CATALINA_HOME和CATALINA_BASE概念是为了解决这样的场景：</p>

<p>你需要在一台机器上面部署多个Tomcat实例，但是你又不想创建多个Tomcat的副本，换句话说就是让这些Tomcat副本拥有自己的工作目录但是共享Tomcat的代码。</p>

<p>关于CATALINA_HOME和CATALINA_BASE<a href="https://tomcat.apache.org/tomcat-8.5-doc/introduction.html" target="_blank">官方文档</a>上面是这样解释的：</p>

<ol start="1">
<li>Throughout the docs, you'll notice there are numerous references to $CATALINA_HOME. This represents the root of your Tomcat installation. When we say, "This information can be found in your $CATALINA_HOME/README.txt file" we mean to look at the README.txt file at the root of your Tomcat install. Optionally, Tomcat may be configured for multiple instances by defining $CATALINA_BASE for each instance. If multiple instances are not configured, $CATALINA_BASE is the same as $CATALINA_HOME.  </li>
</ol>

<p><br />
翻译过来就是CATALINA_HOME是Tomcat的安装目录，CATALINA_BASE是Tomcat的工作目录</p>

<p> </p>

<p> </p>

<p>CATALINA_BASE是和每个Tomcat实例相关的，接下来我们来一起玩一下上面描述的那个场景</p>

<p>先下一个Tomcat的zip发布版本可以在这里下载：<a href="http://archive.apache.org/dist/tomcat/tomcat-7/v7.0.69/bin/" target="_blank">http://archive.apache.org/dist/tomcat/tomcat-7/v7.0.69/bin/</a></p>

<p>解压到F盘，然后新建两个目录 分别为tomcat ins1和tomcat ins2</p>

<p><img alt="" src="http://img.blog.csdn.net/20160519181326484" /></p>

<p> </p>

<p>把Tomcat的共享文件夹分别拷贝到tomcat ins1和tomcat ins2中，有</p>

<p><img alt="" src="http://img.blog.csdn.net/20160519181516597" /></p>

<p>然后在</p>

<p>然后在tomcat ins1的文件夹下创建startup.bat</p>

<p>文件内容如下：</p>

<ol start="1">
<li>set "CATALINA_BASE=%cd%"  （cd表示当前目录）</li>
<li>set "CATALINA_HOME=F:\apache-tomcat-7.0.69"  </li>
<li>set "EXECUTABLE=%CATALINA_HOME%\bin\catalina.bat"  </li>
<li> </li>
<li>call "%EXECUTABLE%" start   </li>
</ol>

<p><br />
然后我们可以在tomcat ins1下的conf中的server.xml中修改http端口号分别为7070</p>

<p>tomcat ins2的做法和tomcat ins1一样只不过端口号改为9090</p>

<p>分别双击startup.bat</p>

<p>然后访问Tomcat你会看到：</p>

<p><img alt="" src="http://img.blog.csdn.net/20160519182041179" /></p>

<p><img alt="" src="http://img.blog.csdn.net/20160519182046181" />\</p>
