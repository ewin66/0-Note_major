<h1>在linux下安装配置rabbitMQ详细教程</h1>

<h3>安装Erlang</h3>

<p>由于RabbitMQ依赖Erlang， 所以需要先安装Erlang。</p>

<p>Erlang的安装方式大概有两种：</p>

<ol>
<li>
<p>从Erlang Solution安装(<strong>推荐</strong>)</p>

<pre>
<code> # 添加erlang solutions源
$ wget https://packages.erlang-solutions.com/erlang-solutions-1.0-1.noarch.rpm
$ sudo rpm -Uvh erlang-solutions-1.0-1.noarch.rpm

$ sudo yum install erlang
</code></pre>
</li>
<li>
<p>从EPEL源安装(这种方式安装的Erlang版本可能不是最新的，有时候不能满足RabbitMQ需要的最低版本)</p>

<pre>
<code> # 启动EPEL源
$ sudo yum install epel-release 
# 安装erlang
$ sudo yum install erlang </code></pre>
</li>
</ol>

<p><strong>完成后安装RabbitMQ</strong>：</p>

<p>先下载rpm：</p>

<pre>
wget http://www.rabbitmq.com/releases/rabbitmq-server/v3.6.6/rabbitmq-server-3.6.6-1.el7.noarch.rpm</pre>

<p>下载完成后安装：</p>

<pre>
yum install rabbitmq-server-3.6.6-1.el7.noarch.rpm 
</pre>

<p>安装时如果遇到下面的依赖错误</p>

<pre>
<code>Error: Package: socat-1.7.2.3-1.el6.x86_64 (epel)
Requires: libreadline.so.5()(64bit)
</code></pre>

<p>可以尝试先执行</p>

<pre>
<code>$ sudo yum install socat
</code></pre>

<h3>关于RabbitMQ的一些基本操作</h3>

<pre>
<code>$ sudo chkconfig rabbitmq-server on # 添加开机启动RabbitMQ服务
$ sudo /sbin/service rabbitmq-server start # 启动服务
$ sudo /sbin/service rabbitmq-server status # 查看服务状态
$ sudo /sbin/service rabbitmq-server stop # 停止服务

# 查看当前所有用户
$ sudo rabbitmqctl list_users

# 查看默认guest用户的权限
$ sudo rabbitmqctl list_user_permissions guest

# 由于RabbitMQ默认的账号用户名和密码都是guest。为了安全起见, 先删掉默认用户
$ sudo rabbitmqctl delete_user guest

# 添加新用户
$ sudo rabbitmqctl add_user username password

# 设置用户tag
$ sudo rabbitmqctl set_user_tags username administrator

# 赋予用户默认vhost的全部操作权限
$ sudo rabbitmqctl set_permissions -p / username ".*" ".*" ".*"

# 查看用户的权限
$ sudo rabbitmqctl list_user_permissions username
</code></pre>

<p>更多关于<code>rabbitmqctl</code>的使用，可以参考<a href="https://link.jianshu.com/?t=https://www.rabbitmq.com/man/rabbitmqctl.1.man.html" target="_blank">帮助手册</a>。</p>

<h3>开启web管理接口</h3>

<p>如果只从命令行操作RabbitMQ，多少有点不方便。幸好RabbitMQ自带了web管理界面，只需要启动插件便可以使用。</p>

<pre>
<code>$ sudo rabbitmq-plugins enable rabbitmq_management
</code></pre>

<p>然后通过浏览器访问</p>

<p><a href="https://link.jianshu.com/?t=http://localhost:15672" target="_blank">http://localhost:15672</a></p>

<p>输入用户名和密码访问web管理界面了。</p>

<h3>配置RabbitMQ</h3>

<p>关于RabbitMQ的配置，可以下载RabbitMQ的<a href="https://link.jianshu.com/?t=https://raw.githubusercontent.com/rabbitmq/rabbitmq-server/stable/docs/rabbitmq.config.example" target="_blank">配置文件模板</a>到<code>/etc/rabbitmq/rabbitmq.config</code>, 然后按照需求更改即可。<br />
关于每个配置项的具体作用，可以参考<a href="https://link.jianshu.com/?t=https://www.rabbitmq.com/configure.html" target="_blank">官方文档</a>。<br />
更新配置后，别忘了重启服务哦！</p>

<h3>开启用户远程访问</h3>

<p>默认情况下，RabbitMQ的默认的<code>guest</code>用户只允许本机访问， 如果想让<code>guest</code>用户能够远程访问的话，只需要将配置文件中的<code>loopback_users</code>列表置为空即可，如下：</p>

<pre>
<code>{loopback_users, []}
</code></pre>

<p>另外关于新添加的用户，直接就可以从远程访问的，如果想让新添加的用户只能本地访问，可以将用户名添加到上面的列表, 如只允许<code>admin</code>用户本机访问。</p>

<pre>
<code>{loopback_users, ["admin"]}
</code></pre>

<p>更新配置后，别忘了重启服务哦！</p>

<p><code><strong>sudo /sbin/service rabbitmq-server status # 查看服务状态</strong></code></p>

<p><img alt="" src="http://images2015.cnblogs.com/blog/321801/201611/321801-20161123155611737-770552575.png" /></p>

<p>这里可以看到log文件的位置，转到文件位置，打开文件：</p>

<p><img alt="" src="http://images2015.cnblogs.com/blog/321801/201611/321801-20161123155722050-140847138.png" /></p>

<p>这里显示的是没有找到配置文件，我们可以自己创建这个文件</p>

<pre>
cd /etc/rabbitmq/
vi rabbitmq.config</pre>

<p>编辑内容如下：</p>

<pre>
[{rabbit, [{loopback_users, []}]}].</pre>

<p>这里的意思是开放使用，rabbitmq默认创建的用户guest，密码也是guest，这个用户默认只能是本机访问，localhost或者127.0.0.1，从外部访问需要添加上面的配置。</p>

<p>保存配置后重启服务：</p>

<pre>
service rabbitmq-server stop
service rabbitmq-server start</pre>

<p>此时就可以从外部访问了，但此时再看log文件，发现内容还是原来的，还是显示没有找到配置文件，可以手动删除这个文件再重启服务，不过这不影响使用</p>

<pre>
rm rabbit\@mythsky.log 
service rabbitmq-server stop
service rabbitmq-server start</pre>

<p>注意:记得要开放5672和15672端口</p>

<ol start="1">
<li>/sbin/iptables -I INPUT -p tcp --dport 5672 -j ACCEPT  </li>
<li>/sbin/iptables -I INPUT -p tcp --dport 15672 -j ACCEPT  </li>
</ol>
