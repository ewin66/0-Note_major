<h1>kafka中文教程</h1>

<ul>
</ul>

<p>本网翻译整理Apache kafka，提供整理Apache kafka的完整学习文档。</p>

<h3><u>发</u>布 &amp; 订阅 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<u>处</u>理&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<u>存</u>储</h3>

<p>数据流，如消息传递系统&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;高效并实时&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;数据流安全地在分布式集群中复制存储</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<img alt="screenshot" src="http://img.orchome.com:8888/group1/M00/00/01/KmCudlf4YWCAbQPXAASxr5laXjI309.png" style="height:400px; width:400px" /></p>

<p>kafka是用于构建实时数据管道和流应用程序。具有横向扩展，容错，wicked fast（变态快）等优点，并已在成千上万家公司运行。</p>

<h2>简单说明什么是kafka</h2>

<p>Apache kafka是消息中间件的一种，我发现很多人不知道消息中间件是什么，在开始学习之前，我这边就先简单的解释一下什么是消息中间件，只是粗略的讲解，目前kafka已经可以做<code>更多</code>的事情。</p>

<p>举个例子，生产者消费者，生产者生产鸡蛋，消费者消费鸡蛋，生产者生产一个鸡蛋，消费者就消费一个鸡蛋，假设消费者消费鸡蛋的时候噎住了（系统宕机了），生产者还在生产鸡蛋，那新生产的鸡蛋就丢失了。再比如生产者很强劲（大交易量的情况），生产者1秒钟生产100个鸡蛋，消费者1秒钟只能吃50个鸡蛋，那要不了一会，消费者就吃不消了（消息堵塞，最终导致系统超时），消费者拒绝再吃了，&rdquo;鸡蛋&ldquo;又丢失了，这个时候我们放个篮子在它们中间，生产出来的鸡蛋都放到篮子里，消费者去篮子里拿鸡蛋，这样鸡蛋就不会丢失了，都在篮子里，而这个篮子就是&rdquo;kafka&ldquo;。<br />
鸡蛋其实就是&ldquo;数据流&rdquo;，系统之间的交互都是通过&ldquo;数据流&rdquo;来传输的（就是tcp、http什么的），也称为报文，也叫&ldquo;消息&rdquo;。<br />
消息队列满了，其实就是篮子满了，&rdquo;鸡蛋&ldquo; 放不下了，那赶紧多放几个篮子，其实就是kafka的扩容。<br />
各位现在知道kafka是干什么的了吧，它就是那个&quot;篮子&quot;。</p>

<h2>kafka名词解释</h2>

<p>后面大家会看到一些关于kafka的名词，比如topic、producer、consumer、broker，我这边来简单说明一下。</p>

<ul>
	<li><code>producer</code>：生产者，就是它来生产&ldquo;鸡蛋&rdquo;的。</li>
	<li><code>consumer</code>：消费者，生出的&ldquo;鸡蛋&rdquo;它来消费。</li>
	<li><code>topic</code>：你把它理解为标签，生产者每生产出来一个鸡蛋就贴上一个标签（topic），消费者可不是谁生产的&ldquo;鸡蛋&rdquo;都吃的，这样不同的生产者生产出来的&ldquo;鸡蛋&rdquo;，消费者就可以选择性的&ldquo;吃&rdquo;了。</li>
	<li><code>broker</code>：就是篮子了。</li>
</ul>

<p>大家一定要学会抽象的去思考，上面只是属于业务的角度，如果从技术角度，topic标签实际就是队列，生产者把所有&ldquo;鸡蛋（消息）&rdquo;都放到对应的队列里了，消费者到指定的队列里取。</p>

<h2>征集</h2>

<p>如果你也想分享一些文章，例子。欢迎入群交流：<code>14085484</code>。</p>

<p>注意：本群只与贡献者进行交流，技术问答请到网站上提问，谢谢。</p>

<h2>微信公众号</h2>

<p>新建的微信公众号，我会定期分享一些实用的操作源码。</p>

<h2>怎么样才算真正的学会kafka</h2>

<p>最近面试发现，很多人用过kafka，但是没人了解原理，我们可是很注重原理的(PS:要不然怎么知道你真的会呢)。</p>

<ul>
	<li>kafka节点之间如何复制备份的？</li>
	<li>kafka消息是否会丢失？为什么？</li>
	<li>kafka最合理的配置是什么？</li>
	<li>kafka的leader选举机制是什么？</li>
	<li>kafka对硬件的配置有什么要求？</li>
	<li>kafka的消息保证有几种方式？</li>
</ul>

<p>......你是否都答得上来？（欢迎大家补充！）</p>

<p>这些问题在下面的文章中都可以找到答案，kafka之所以有这么火热，建议各位一定要看一下。</p>

<h2>如何学习kafka</h2>

<p>还是那句话，学习任何技术，跟学骑自行车一样，不要一开始只关注它的具体细节是什么。先学着怎么骑，骑着骑着就了解大致的原理，这个时候在去看它的原理，会很轻松。</p>

<p>如果你在学习的过程中遇到什么问题，直接评论或者在问题专区中提问，我们在线人员会回复你的问题。</p>

<h4>章节与kafka官网对应一致</h4>

<p>第一章：开始<br />
第二章：API<br />
第三章：kafka的配置<br />
第四章：kafka如何设计的<br />
第五章：kafka的实现<br />
第六章：kafka的常用操作，如扩容，删除和增加topic。<br />
第七章：安全<br />
第八章：kafka Connect<br />
第九章：kafka 流<br />
第十章：笔记（<a href="http://orchome.com/454">kafka命令大全</a>）</p>
