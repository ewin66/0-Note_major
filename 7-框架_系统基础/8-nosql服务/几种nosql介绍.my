<h1>几种nosql介绍</h1>

<p>当SQL满足不了你的需求或者SQL 已经不是必须的或者最佳的选择时，就是你考虑这类NoSQL 的时候了。</p>

<p>当你的内存大于你的数据时，schema也不是太确定时，mongodb在这里静静地等待My SQL转业户为了尝鲜过来看热闹的，不改变设计模式，爽在前面痛在后面;</p>

<p>当你唯一追求的就是速度，又对memcached的过于简单心存芥蒂，刚好内存也比数据多时，redis俏生生站在那里;</p>

<p>大，好大，太大了，我说的是数据，我们128GB内存双路CPU 25TB存储只够一星期的时候，估计就没有选择综合症了，HBase成了唯一或者唯二选择了。<br />
-----------------------------------------<br />
所以呢，不严谨地讲，Redis定位在"快",mongodb定位在"灵活"，HBase定位于"大"，HIVE也定义为大，且不强调实时性。</p>

<p>NoSQL的优点正好就是SQL的软肋，而其弱点正好也就是SQL的杀手锏<br />
-----------------------------------------<br />
最大区别在于，在一般使用情况下，mongodb可以当作简单场景下的但是性能高数倍的MySQL,</p>

<p>Redis基本只会用来做缓存</p>

<p>HBase用来做离线计算</p>

<p>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>

<p> </p>

<h1 style="margin-left:0px; margin-right:0px"><span style="font-size:28px"><span style="font-family:Verdana,Arial,Helvetica,sans-serif"><a class="postTitle2" href="http://www.cnblogs.com/justinzhang/p/4273470.html" id="cb_post_title_url" style="margin:0px; padding:0px; color:#333333; text-decoration:none">HIVE和HBASE区别</a></span></span></h1>

<div class="clear" style="-webkit-text-stroke-width:0px; padding:0px; text-align:start"> </div>

<div class="postBody" style="-webkit-text-stroke-width:0px; padding:0px; text-align:start">
<div id="cnblogs_post_body" style="margin-bottom:20px; margin-left:0px; margin-right:0px; margin-top:0px; padding:0px">
<p><span style="font-size:14px"><span style="font-family:Verdana,Arial,Helvetica,sans-serif"><span style="font-size:medium">1. 两者分别是什么？  </span></span></span></p>

<p><span style="font-size:14px"><span style="font-family:Verdana,Arial,Helvetica,sans-serif"><span style="font-size:medium"> Apache Hive是一个构建在Hadoop基础设施之上的数据仓库。通过Hive可以使用HQL语言查询存放在HDFS上的数据。HQL是一种类SQL语言，这种语言最终被转化为Map/Reduce. 虽然Hive提供了SQL查询功能，但是Hive不能够进行交互查询--因为它只能够在Haoop上批量的执行Hadoop。</span></span></span></p>

<p><span style="font-size:14px"><span style="font-family:Verdana,Arial,Helvetica,sans-serif"><span style="font-size:medium">    Apache HBase是一种Key/Value系统，它运行在HDFS之上。和Hive不一样，Hbase的能够在它的数据库上实时运行，而不是运行MapReduce任务。Hive被分区为表格，表格又被进一步分割为列簇。列簇必须使用schema定义，列簇将某一类型列集合起来（列不要求schema定义）。例如，“message”列簇可能包含：“to”, ”from” “date”, “subject”, 和”body”. 每一个 key/value对在Hbase中被定义为一个cell，每一个key由row-key，列簇、列和时间戳。在Hbase中，行是key/value映射的集合，这个映射通过row-key来唯一标识。Hbase利用Hadoop的基础设施，可以利用通用的设备进行水平的扩展。</span></span></span></p>

<p><span style="font-size:14px"><span style="font-family:Verdana,Arial,Helvetica,sans-serif"><span style="font-size:medium">2. 两者的特点</span></span></span></p>

<p><span style="font-size:14px"><span style="font-family:Verdana,Arial,Helvetica,sans-serif"><span style="font-size:medium">  Hive帮助熟悉SQL的人运行MapReduce任务。因为它是JDBC兼容的，同时，它也能够和现存的SQL工具整合在一起。运行Hive查询会花费很长时间，因为它会默认遍历表中所有的数据。虽然有这样的缺点，一次遍历的数据量可以通过Hive的分区机制来控制。分区允许在数据集上运行过滤查询，这些数据集存储在不同的文件夹内，查询的时候只遍历指定文件夹（分区）中的数据。这种机制可以用来，例如，只处理在某一个时间范围内的文件，只要这些文件名中包括了时间格式。</span></span></span></p>

<p><span style="font-size:14px"><span style="font-family:Verdana,Arial,Helvetica,sans-serif"><span style="font-size:medium">    HBase通过存储key/value来工作。它支持四种主要的操作：增加或者更新行，查看一个范围内的cell，获取指定的行，删除指定的行、列或者是列的版本。版本信息用来获取历史数据（每一行的历史数据可以被删除，然后通过Hbase compactions就可以释放出空间）。虽然HBase包括表格，但是schema仅仅被表格和列簇所要求，列不需要schema。Hbase的表格包括增加/计数功能。</span></span></span></p>

<p><span style="font-size:14px"><span style="font-family:Verdana,Arial,Helvetica,sans-serif"><span style="font-size:medium">3. 限制</span></span></span></p>

<p><span style="font-size:14px"><span style="font-family:Verdana,Arial,Helvetica,sans-serif"><span style="font-size:medium">  Hive目前不支持更新操作。另外，由于hive在hadoop上运行批量操作，它需要花费很长的时间，<strong>通常是几分钟到几个小时才可以获取到查询的结果</strong>。Hive必须提供预先定义好的schema将文件和目录映射到列，并且Hive与ACID不兼容。</span></span></span></p>

<p><span style="font-size:14px"><span style="font-family:Verdana,Arial,Helvetica,sans-serif"><span style="font-size:medium">    <strong>HBase查询是通过特定的语言来编写的，这种语言需要重新学习</strong>。类SQL的功能可以通过Apache Phonenix实现，但这是以必须提供schema为代价的。另外，Hbase也并不是兼容所有的ACID特性，虽然它支持某些特性。最后但不是最重要的--为了运行Hbase，Zookeeper是必须的，zookeeper是一个用来进行分布式协调的服务，这些服务包括配置服务，维护元信息和命名空间服务。</span></span></span></p>

<p><span style="font-size:14px"><span style="font-family:Verdana,Arial,Helvetica,sans-serif"><span style="font-size:medium">4. 应用场景</span></span></span></p>

<p><span style="font-size:14px"><span style="font-family:Verdana,Arial,Helvetica,sans-serif"><span style="font-size:medium">   <strong> Hive适合用来对一段时间内的数据进行分析查询</strong>，例如，用来计算趋势或者网站的日志。<strong>Hive不应该用来进行实时的查询</strong>。因为它需要很长时间才可以返回结果。</span></span></span></p>

<p><span style="font-size:14px"><span style="font-family:Verdana,Arial,Helvetica,sans-serif"><span style="font-size:medium">    <strong>Hbase非常适合用来进行大数据的实时查询</strong>。Facebook用Hbase进行消息和实时的分析。它也可以用来统计Facebook的连接数。</span></span></span></p>

<p><span style="font-size:14px"><span style="font-family:Verdana,Arial,Helvetica,sans-serif"><span style="font-size:medium">5. 总结</span></span></span></p>

<p><span style="font-size:14px"><span style="font-family:Verdana,Arial,Helvetica,sans-serif"><span style="font-size:medium">    Hive和Hbase是两种基于Hadoop的不同技术--Hive是一种类SQL的引擎，并且运行MapReduce任务，Hbase是一种在Hadoop之上的NoSQL 的Key/vale数据库。当然，这两种工具是可以同时使用的。就像用Google来搜索，用FaceBook进行社交一样，Hive可以用来进行统计查询，HBase可以用来进行实时查询，数据也可以从Hive写到Hbase，设置再从Hbase写回Hive。</span></span></span></p>
</div>
</div>
