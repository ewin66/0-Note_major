<h1>实际使用</h1>

<h2>参考</h2>

<p><a href="http://blog.didispace.com/springbootmailsender/">程序员DD博客</a>  <a href="https://github.com/ityouknow/spring-boot-examples/tree/master/spring-boot-mail">纯洁的微笑代码</a></p>

<h2>步骤</h2>

<h3>添加pom引用</h3>

<p><dependency><br />
    <groupId>org.springframework.boot</groupId><br />
    <artifactId>spring-boot-starter-mail</artifactId><br />
</dependency></p>

<h3>配置mail</h3>

<p>spring:<br />
  mail:<br />
    host: smtpscn1.huawei.com<br />
    username: pmail_Autoverify（换成你的邮箱用户名, 程序中的from要与这里一致）<br />
    password: zngcPassword@6（邮箱密码）<br />
    properties:<br />
      mail:<br />
        smtp:<br />
        auth: true<br />
        ssl:<br />
          trust: smtpscn1.huawei.com<br />
        starttls:<br />
          enable: true<br />
          required: true<br />
    port: 25</p>

<h3>编写工具类</h3>

<p>这里有人将代码放在service层，有人更是把代码放在control层，基本都可以。。我还是习惯放工具类里，<strong>不过注意：有依赖注入</strong>。</p>

<p> </p>

<h3>封装message</h3>

<p>这个可有可无，</p>

<p>public class MailMessage {<br />
    //发送方地址<br />
    String from;<br />
    //接收方地址<br />
    String to;<br />
    //抄送方地址<br />
    String cc;<br />
    //邮件主题<br />
    String subject;<br />
    //邮件内容<br />
    String text;</p>

<p>    public MailMessage(String from, String to, String cc, String subject, String text) {<br />
        this.from = from;<br />
        this.to = to;<br />
        this.cc = cc;<br />
        this.subject = subject;<br />
        this.text = text;<br />
    }<br />
}<br />
 </p>

<p> </p>
