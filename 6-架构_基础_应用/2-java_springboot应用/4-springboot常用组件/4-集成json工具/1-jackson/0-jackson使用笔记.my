<h1>jackson使用笔记</h1>

<h2>序列化</h2>

<p>在使用jackson的时候，序列化是通过get、set方法，或public 属性 来将实体转化json字符串的。</p>

<p>特别的，在使用get、set方法的时候，如果没有那个属性，但是有get方法，也会在json中带入那个属性，如。</p>

<p>实体 student 里面没有属性 birthday，但是有getBirthday()方法，这时，得到的json字符串中，任然会有birthday这个字段。</p>

<h2>对象与string互转</h2>

<pre>
import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;</pre>

<pre>
@Test
public void testjson() throws IOException {
List<Map> listMap = new ArrayList<>();
Map map = new HashMap();
map.put("s12700","v100");
listMap.add(map);
<strong>ObjectMapper objectMapper = new ObjectMapper();
String jsonStr = objectMapper.writeValueAsString(listMap);</strong>
System.out.println(jsonStr);

//String gameListStr = "[{\"S5300\":\"V001\",\"S5301\":\"S5302\"},{\"gameId\":\"2\",\"gameName\":\"呵呵\"}]";
String listStr = jsonStr;
<strong>ObjectMapper mapper = new ObjectMapper();</strong>
<strong>List<Map> versionInfos = new ArrayList<>();
versionInfos = mapper.readValue(listStr,new TypeReference<List<Map>>(){});</strong>
System.out.println(versionInfos.toString());
}</pre>
