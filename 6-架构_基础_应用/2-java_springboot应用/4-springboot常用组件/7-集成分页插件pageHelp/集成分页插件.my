<h1>SpringBoot之分页插件PageHelper的使用</h1>

<p>在springboot中使用PageHelper插件有两种较为相似的方式，接下来我就将这两种方式进行总结。</p>

<h2>方式一：使用原生的PageHelper</h2>

<p>1.在pom.xml中引入依赖</p>

<ol>
<li>
<p><code><dependency></code></p>
</li>
<li>
<p><code><groupId>com.github.pagehelper</groupId></code></p>
</li>
<li>
<p><code><artifactId>pagehelper</artifactId></code></p>
</li>
<li>
<p><code><version>4.1.3</version></code></p>
</li>
<li>
<p><code></dependency></code></p>
</li>
</ol>

<p>2.在springboot的启动类（Application.java)里面注入配置</p>

<ol>
<li>
<p><code>@Bean</code></p>
</li>
<li>
<p><code>PageHelper pageHelper(){</code></p>
</li>
<li>
<p><code>//分页插件</code></p>
</li>
<li>
<p><code>PageHelper pageHelper = new PageHelper();</code></p>
</li>
<li>
<p><code>Properties properties = new Properties();</code></p>
</li>
<li>
<p><code>properties.setProperty("reasonable", "true");</code></p>
</li>
<li>
<p><code>properties.setProperty("supportMethodsArguments", "true");</code></p>
</li>
<li>
<p><code>properties.setProperty("returnPageInfo", "check");</code></p>
</li>
<li>
<p><code>properties.setProperty("params", "count=countSql");</code></p>
</li>
<li>
<p><code>pageHelper.setProperties(properties);</code></p>
</li>
<li> </li>
<li>
<p><code>//添加插件</code></p>
</li>
<li>
<p><code>new SqlSessionFactoryBean().setPlugins(new Interceptor[]{pageHelper});</code></p>
</li>
<li>
<p><code>return pageHelper;</code></p>
</li>
<li>
<p><code>}</code></p>
</li>
</ol>

<h2>方式二：使用PageHelper的starter</h2>

<h2>1.在pom.xml中引入依赖</h2>

<ol>
<li>
<p><code><dependency></code></p>
</li>
<li>
<p><code><groupId>com.github.pagehelper</groupId></code></p>
</li>
<li>
<p><code><artifactId>pagehelper-spring-boot-starter</artifactId></code></p>
</li>
<li>
<p><code><version>1.1.1</version></code></p>
</li>
<li>
<p><code></dependency></code></p>
</li>
</ol>

<p>2.在application.properties配置pagehelper的属性</p>

<ol>
<li>
<p><code>#pagehelper分页插件配置</code></p>
</li>
<li>
<p><code>pagehelper.helperDialect=mysql</code></p>
</li>
<li>
<p><code>pagehelper.reasonable=true</code></p>
</li>
<li>
<p><code>pagehelper.supportMethodsArguments=true</code></p>
</li>
<li>
<p><code>pagehelper.params=count=countSql</code></p>
</li>
</ol>

<p>最后就是使用pagehelper进行分页了，其中最重要的一句就是</p>

<pre>
<code>PageHelper.startPage(pageNum,pageSize);pageNum：当前页数 pageSize：当前页需要显示的数量</code></pre>

<p>例如：</p>

<ol>
<li>
<p><code>public PageInfo<Blog> ajaxBlog(Integer pageNum,Integer pageSize){</code></p>
</li>
<li>
<p><code>PageHelper.startPage(pageNum,pageSize);</code></p>
</li>
<li>
<p><code>List<Blog> blogList = blogMapper.selectByExample(new BlogExample());</code></p>
</li>
<li>
<p><code>PageInfo<Blog> pageInfo = new PageInfo<Blog>(blogList);</code></p>
</li>
<li>
<p><code>return pageInfo;</code></p>
</li>
<li>
<p><code>}</code></p>
</li>
</ol>

<p>后面就不具体贴了，自由发挥。</p>
