<h1>Spring Boot集成Swagger简易教程</h1>

<h2>Swagger</h2>

<p><img alt="9709135-643e80771fa0ad5b.png" src="https://upload-images.jianshu.io/upload_images/9709135-643e80771fa0ad5b.png" style="height:261px; width:800px" /></p>

<p>  Swagger号称是史上最流行的、最好用的API接口文档构建工具，它支持多种语言包括Java在内，本文仅关注如何使用Spring Boot来集成Swagger，更多关于Swagger的介绍可以查看以下几个链接。</p>

<blockquote>
<p><a href="https://swagger.io/" rel="nofollow" target="_blank">Swagger - 官网</a><br />
<a href="https://github.com/swagger-api" rel="nofollow" target="_blank">Swagger - Github</a></p>
</blockquote>

<h2>SpringFox</h2>

<p>  SpringFox最初叫Swagger-SpringMVC，从字面意义上简单来理解是使用了SpringMVC来集成Swagger，后来演变成SpringFox这么一个项目(或组织)，SpringFox官网有这么一句：Automated JSON API documentation for API's built with Spring(针对Spring构建的API的自动化JSON API文档)。好了，下来我们只需用SpringFox提供的三方库来快速集成一下Spring Boot和Swagger。</p>

<blockquote>
<p><a href="http://springfox.github.io/springfox/" rel="nofollow" target="_blank">SpringFox</a><br />
<a href="https://springfox.github.io/springfox/docs/current/" rel="nofollow" target="_blank">SpringFox - Documentation</a></p>
</blockquote>

<h2>1. 添加Maven依赖</h2>

<ol>
<li>
<p><code><!-- https://mvnrepository.com/artifact/io.springfox/springfox-swagger2 --></code></p>
</li>
<li>
<p><code><dependency></code></p>
</li>
<li>
<p><code><groupId>io.springfox</groupId></code></p>
</li>
<li>
<p><code><artifactId>springfox-swagger2</artifactId></code></p>
</li>
<li>
<p><code><version>${latest version}</version></code></p>
</li>
<li>
<p><code></dependency></code></p>
</li>
<li>
<p><code><!-- https://mvnrepository.com/artifact/io.springfox/springfox-swagger-ui --></code></p>
</li>
<li>
<p><code><dependency></code></p>
</li>
<li>
<p><code><groupId>io.springfox</groupId></code></p>
</li>
<li>
<p><code><artifactId>springfox-swagger-ui</artifactId></code></p>
</li>
<li>
<p><code><version>${latest version}</version></code></p>
</li>
<li>
<p><code></dependency></code></p>
</li>
</ol>

<h2>2. 开启Swagger</h2>

<p>  在Spring Boot启动类上添加@EnableSwagger2即可。</p>

<ol>
<li>
<p><code>@SpringBootApplication</code></p>
</li>
<li>
<p><code>@EnableSwagger2 //开启Swagger</code></p>
</li>
<li>
<p><code>public class Application {</code></p>
</li>
<li> </li>
<li>
<p><code>public static void main(String[] args) {</code></p>
</li>
<li>
<p><code>SpringApplication.run(Application.class, args);</code></p>
</li>
<li>
<p><code>}</code></p>
</li>
<li>
<p><code>}</code></p>
</li>
</ol>

<h3>3. 配置Swagger</h3>

<ol>
<li>
<p><code>@Configuration</code></p>
</li>
<li>
<p><code>public class SwaggerConfig {</code></p>
</li>
<li> </li>
<li>
<p><code>@Bean</code></p>
</li>
<li>
<p><code>public Docket docket() {</code></p>
</li>
<li>
<p><code>return new Docket(DocumentationType.SWAGGER_2)</code></p>
</li>
<li>
<p><code>.apiInfo(apiInfo())</code></p>
</li>
<li>
<p><code>.select()</code></p>
</li>
<li>
<p><code>// 这里是全局扫描有@Api注解得类，还可以扫描任意位置，指定包以及针对方法上的指定注解</code></p>
</li>
<li>
<p><code>.apis(RequestHandlerSelectors.withClassAnnotation(Api.class)) </code></p>
</li>
<li>
<p><code>.paths(PathSelectors.any())</code></p>
</li>
<li>
<p><code>.build();</code></p>
</li>
<li>
<p><code>}</code></p>
</li>
<li> </li>
<li>
<p><code>private ApiInfo apiInfo() {</code></p>
</li>
<li> 


 <p><code>return new ApiInfoBuilder()</code></p>
</li>
<li>
<p><code>.title("Title")</code></p>
</li>
<li>
<p><code>.description("Description")</code></p>
</li>
<li>
<p><code>.termsOfServiceUrl("")</code></p>
</li>
<li>
<p><code>.contact(new Contact("", "", ""))</code></p>
</li>
<li>
<p><code>.license("")</code></p>
</li>
<li>
<p><code>.licenseUrl("")</code></p>
</li>
<li>
<p><code>.version(" xxx ")</code></p>
</li>
<li>
<p><code>.build();</code></p>
</li>
<li>
<p><code>}</code></p>
</li>
<li> </li>
<li>
<p><code>}</code></p>
</li>
</ol>

<h2>4. 运行效果</h2>

<p>  启动Spring Boot后，可以点击查看(更改为你的本地地址) <a href="http://localhost:8080/swagger-ui.html#/" rel="nofollow" target="_blank">http://localhost:8080/swagger-ui.html#/</a> ，效果如下：</p>

<p><img alt="9709135-779e55029bf57104.png" src="https://upload-images.jianshu.io/upload_images/9709135-779e55029bf57104.png" style="height:372px; width:800px" /></p>

<p>swagger-ui</p>

<h2>5. 常用注解</h2>

<p>  Swagger的所有注解定义在<code>io.swagger.annotations</code>包下，下面列一些经常用到的，未列举出来的可以另行查阅说明：</p>

<table>
<thead>
<tr>
<th>Swagger注解</th>
<th>简单说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>@Api(tags = "xxx模块说明")</td>
<td>作用在模块类上</td>
</tr>
<tr>
<td>@ApiOperation("xxx接口说明")</td>
<td>作用在接口方法上</td>
</tr>
<tr>
<td>@ApiModel("xxxPOJO说明")</td>
<td>作用在模型类上：如VO、BO</td>
</tr>
<tr>
<td>@ApiModelProperty(value = "xxx属性说明",hidden = true)</td>
<td>作用在类方法和属性上，hidden设置为true可以隐藏该属性</td>
</tr>
<tr>
<td>@ApiParam("xxx参数说明")</td>
<td>作用在参数、方法和字段上，类似@ApiModelProperty</td>
</tr>
</tbody>
</table>

<h2>6. 使用Swagger</h2>

<p>  完全以上几小步配置后，再次打开swagger-ui界面就可以进行测试了，相较于传统的Postman或Curl方式测试接口，使用swagger简直就是傻瓜式操作，不需要额外说明文档(写得好本身就是文档)而且更不容易出错，只需要录入数据然后点击<code>Execute</code>，如果再配合自动化框架，可以说基本就不需要人为操作了。</p>

<p><img alt="9709135-fca45383e7ff69b6.png" src="https://upload-images.jianshu.io/upload_images/9709135-fca45383e7ff69b6.png" style="height:372px; width:800px" /></p>

<p>swagger-test</p>

<h2>End</h2>

<p>  Swagger是个优秀的工具，现在国内已经有很多的中小型互联网公司都在使用它，相较于传统的要先出Word接口文档再测试的方式，显然这样也更符合现在的快速迭代开发行情。当然了，提醒下大家在正式环境要记得关闭Swagger，一来出于安全考虑二来也可以节省运存。之前看到过一篇深入Swagger原理的文章，最后分享出来给大家：<a href="https://www.jianshu.com/p/a6810cd9c3c0" rel="nofollow" target="_blank">API管理工具Swagger介绍及Springfox原理分析</a>。</p>
