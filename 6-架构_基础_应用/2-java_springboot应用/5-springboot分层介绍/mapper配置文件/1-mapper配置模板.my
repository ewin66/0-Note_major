<h1>mapper 配置xml文件模板</h1>

<h2>mapper.xml 文件</h2>

<pre>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huawei.na.manager.mapper.sys.SysUserMapper">
<resultMap id="BaseResultMap" type="com.huawei.na.manager.model.sys.SysUser">
<constructor>
<idArg column="id" javaType="java.lang.String" jdbcType="VARCHAR" />
<arg column="w3User_id" javaType="java.lang.String" jdbcType="VARCHAR" />
<arg column="user_name" javaType="java.lang.String" jdbcType="VARCHAR" />
<arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
<arg column="create_by" javaType="java.lang.String" jdbcType="VARCHAR" />
<arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
<arg column="update_by" javaType="java.lang.String" jdbcType="VARCHAR" />
<arg column="has_del" javaType="java.lang.Byte" jdbcType="TINYINT" />
<arg column="has_used" javaType="java.lang.Byte" jdbcType="TINYINT" />
</constructor>
</resultMap>
<sql id="Base_Column_List">
id, w3User_id, user_name, create_time, create_by, update_time, update_by, has_del, 
has_used
</sql>
<strong> <select id="getAll" resultMap="BaseResultMap">
select
<include refid="Base_Column_List" />
from sys_user
</select></strong>
<select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
select 
<include refid="Base_Column_List" />
from sys_user
where id = #{id,jdbcType=VARCHAR}
</select>
<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
delete from sys_user
where id = #{id,jdbcType=VARCHAR}
</delete>
<insert id="insert" parameterType="com.huawei.na.manager.model.sys.SysUser">
insert into sys_user (id, w3User_id, user_name, 
create_time, create_by, update_time, 
update_by, has_del, has_used
)
values (#{id,jdbcType=VARCHAR}, #{w3userId,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, 
#{createTime,jdbcType=TIMESTAMP}, #{createBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
#{updateBy,jdbcType=VARCHAR}, #{hasDel,jdbcType=TINYINT}, #{hasUsed,jdbcType=TINYINT}
)
</insert>
<insert id="insertSelective" parameterType="com.huawei.na.manager.model.sys.SysUser">
insert into sys_user
<trim prefix="(" suffix=")" suffixOverrides=",">
<if test="id != null">
id,
</if>
<if test="w3userId != null">
w3User_id,
</if>
<if test="userName != null">
user_name,
</if>
<if test="createTime != null">
create_time,
</if>
<if test="createBy != null">
create_by,
</if>
<if test="updateTime != null">
update_time,
</if>
<if test="updateBy != null">
update_by,
</if>
<if test="hasDel != null">
has_del,
</if>
<if test="hasUsed != null">
has_used,
</if>
</trim>
<trim prefix="values (" suffix=")" suffixOverrides=",">
<if test="id != null">
#{id,jdbcType=VARCHAR},
</if>
<if test="w3userId != null">
#{w3userId,jdbcType=VARCHAR},
</if>
<if test="userName != null">
#{userName,jdbcType=VARCHAR},
</if>
<if test="createTime != null">
#{createTime,jdbcType=TIMESTAMP},
</if>
<if test="createBy != null">
#{createBy,jdbcType=VARCHAR},
</if>
<if test="updateTime != null">
#{updateTime,jdbcType=TIMESTAMP},
</if>
<if test="updateBy != null">
#{updateBy,jdbcType=VARCHAR},
</if>
<if test="hasDel != null">
#{hasDel,jdbcType=TINYINT},
</if>
<if test="hasUsed != null">
#{hasUsed,jdbcType=TINYINT},
</if>
</trim>
</insert>
<update id="updateByPrimaryKeySelective" parameterType="com.huawei.na.manager.model.sys.SysUser">
update sys_user
<set>
<if test="w3userId != null">
w3User_id = #{w3userId,jdbcType=VARCHAR},
</if>
<if test="userName != null">
user_name = #{userName,jdbcType=VARCHAR},
</if>
<strong> <!--<if test="createTime != null">-->
<!--create_time = #{createTime,jdbcType=TIMESTAMP},-->
<!--</if>-->
<!--<if test="createBy != null">-->
<!--create_by = #{createBy,jdbcType=VARCHAR},-->
<!--</if>--></strong>
<if test="updateTime != null">
update_time = #{updateTime,jdbcType=TIMESTAMP},
</if>
<if test="updateBy != null">
update_by = #{updateBy,jdbcType=VARCHAR},
</if>
<if test="hasDel != null">
has_del = #{hasDel,jdbcType=TINYINT},
</if>
<if test="hasUsed != null">
has_used = #{hasUsed,jdbcType=TINYINT},
</if>
</set>
where id = #{id,jdbcType=VARCHAR}
</update>
<update id="updateByPrimaryKey" parameterType="com.huawei.na.manager.model.sys.SysUser">
update sys_user
set w3User_id = #{w3userId,jdbcType=VARCHAR},
user_name = #{userName,jdbcType=VARCHAR},
<strong> <!--create_time = #{createTime,jdbcType=TIMESTAMP},-->
<!--create_by = #{createBy,jdbcType=VARCHAR},--></strong>
update_time = #{updateTime,jdbcType=TIMESTAMP},
update_by = #{updateBy,jdbcType=VARCHAR},
has_del = #{hasDel,jdbcType=TINYINT},
has_used = #{hasUsed,jdbcType=TINYINT}
where id = #{id,jdbcType=VARCHAR}
</update>

</pre>

<pre>
<resultMap id="BaseResultMapFull" type="com.huawei.na.manager.model.scene.<span style="font-size:18px"><strong>SceneBaseinfoFull</strong></span>">
<<strong>constructor</strong>>
<<strong>idArg <span style="font-size:18px">column="bid" </span></strong>javaType="java.lang.String" jdbcType="VARCHAR" />
<<strong>arg </strong>column="scene_name" javaType="java.lang.String" jdbcType="VARCHAR" />
<arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
<arg column="create_by" javaType="java.lang.String" jdbcType="VARCHAR" />
<arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
<arg column="update_by" javaType="java.lang.String" jdbcType="VARCHAR" />
</constructor>
<collection property="sceneFileList" ofType="com.huawei.na.manager.model.scene.SceneBaseinfoFile">
<<strong>id </strong><span style="font-size:18px"><strong>column="fid"</strong></span> jdbcType="VARCHAR" javaType="java.lang.String" <strong><span style="font-size:18px">property="id"</span></strong>/>
<<strong>result </strong>column="scene_id" jdbcType="VARCHAR" javaType="java.lang.String" property="sceneId"/>
<result column="file_type" jdbcType="VARCHAR" javaType="java.lang.String" property="fileType"/>
<result column="file_name" jdbcType="VARCHAR" javaType="java.lang.String" property="fileName"/>
<result column="file_path_access" jdbcType="VARCHAR" javaType="java.lang.String" property="filePathAccess"/>
<result column="file_path_download" jdbcType="VARCHAR" javaType="java.lang.String" property="filePathDownload"/>
<result column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" property="createTime"/>
<result column="create_by" javaType="java.lang.String" jdbcType="VARCHAR" property="createBy"/>
</collection>
</resultMap>

<sql id="Main_Base_Column_List">
b.id <span style="font-size:18px"><strong>bid</strong></span>, b.scene_name, b.create_time, b.create_by, b.update_time, b.update_by
</sql>

<sql id="File_Column_List">
f.id <span style="font-size:18px"><strong>fid</strong></span>, f.scene_id, file_type, f.file_name, f.file_path_access, f.file_path_download, f.create_time, f.create_by
</sql>

<select id="selectByPrimaryKeyFull" parameterType="java.lang.String" resultMap="BaseResultMapFull">
select
<include refid="Main_Base_Column_List" />,<include refid="File_Column_List" />
from scene_baseinfo b
left join scene_baseinfo_file f on b.id = f.scene_id
where b.id = #{id,jdbcType=VARCHAR}
</select>

<select id="getAllFull" resultMap="BaseResultMapFull">
select
<include refid="Main_Base_Column_List" />,<include refid="File_Column_List" />
from scene_baseinfo b
left join scene_baseinfo_file f on b.id = f.scene_id
</select>

</mapper></pre>

<p> </p>

<h2>SceneBaseinfoFull.java</h2>

<pre>
package com.huawei.na.manager.model.scene;

import java.util.Date;
import java.util.List;

public class SceneBaseinfoFull extends SceneBaseinfo{

SceneBaseinfoFull(String id, String sceneName, Date createTime, String createBy, Date updateTime, String updateBy){
super(id, sceneName, createTime, createBy, updateTime, updateBy);
}

private List<SceneBaseinfoFile> sceneFileList;

public List<SceneBaseinfoFile> getSceneFileList() {
return sceneFileList;
}

public void setSceneFileList(List<SceneBaseinfoFile> sceneFileList) {
this.sceneFileList = sceneFileList;
}
}</pre>
