<h1>springboot 中普通类获取bean</h1>

<p>springboot中经常会有这种情况，如工具类获取环境中的bean，进行数据库操作等。</p>

<h2>步骤一：修改启动类</h2>

<p>将整个应用的环境保存个入口</p>

<pre>
@SpringBootApplication
@EnableDiscoveryClient
public class NaportalManagerApplication {
public static void main(String[] args) {
ApplicationContext app = SpringApplication.run(NaportalManagerApplication.class, args);
SpringUtil.setApplicationContext(app);
}
}
</pre>

<h2>步骤二：新建一个环境类 SpringUtil</h2>

<pre>
package com.huawei.na.manager.common;

import org.springframework.beans.BeansException;
import org.springframework.context.ApplicationContext;

public class SpringUtil {
private static ApplicationContext applicationContext = null;

public static void setApplicationContext(ApplicationContext applicationContext) throws BeansException {
if(SpringUtil.applicationContext == null){
SpringUtil.applicationContext = applicationContext;
}
}

//获取applicationContext
public static ApplicationContext getApplicationContext() {
return applicationContext;
}

//通过name获取 Bean.
public static Object getBean(String name){
return getApplicationContext().getBean(name);
}

//通过class获取Bean.
public static <T> T getBean(Class<T> clazz){
return getApplicationContext().getBean(clazz);
}

//通过name,以及Clazz返回指定的Bean
public static <T> T getBean(String name,Class<T> clazz){
return getApplicationContext().getBean(name, clazz);
}
}</pre>

<h2>步骤三：调用环境中的bean</h2>

<pre>
public class SysLogUtil {
private LogService logService = SpringUtil.getBean(LogService.class);
}</pre>
