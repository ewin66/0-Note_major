<h1>org-mode 入门教程</h1>

<p>　　org-mode是Emacs提供的一个强大的编辑模式，可以用于做会议笔记以及制作各种待办事项（GDT）。其语法类似于Markdown但是提供了比Markdown更多的操作，再加上Emacs强大的编辑功能，能给笔记增加很多动态的操作（能纯文本上实现折叠、展开、树状视图、表格求和、求代码运行结果等功能），可以说org-mode是最强大的标记语言。而org-mode的强大，也导致了他比markdown更加复杂，需要花些时间来练习，本文选出了org-mode最强大、实用的功能，进行最简单的介绍，下面介绍org-mode的使用方法。</p>

<h2>安装</h2>

<p>　　<a href="http://www.gnu.org/software/emacs/" rel="noopener" target="_blank">Emacs</a>最新版本（24.4）自带org-mode，这就意味着只要打开一个后缀名为org的文件就会自动进入org-mode。因此我们只需要下载最新版的Emacs即可。 　　 windows用户：到http://ftp.gnu.org/gnu/emacs/windows/ 下载最新版 ubuntu系列：在终端中输入：<code>sudo apt-get install emacs</code>&nbsp;## 配置 　　org-mode功能基本比较完善，不需要更多的配置，但是org模式下默认没有自动换行的功能，我们在.emacs文件里面添加如下代码，实现自动换行：</p>

<pre>
<code>(add-hook &#39;org-mode-hook (lambda () (setq truncate-lines nil)))</code></pre>

<p>　　</p>

<h2>实例教程</h2>

<p>　　以下分别讲解org-mode下几个实用的功能，更完整的教程可以参考<a href="http://orgmode.org/orgguide.pdf" rel="noopener" target="_blank">官网教程</a>。下面一步一步完成我们的org文件。（本教程中我们定义&nbsp;<code>C-x</code>&nbsp;表示按Ctrl+x，<code>M+x</code>标识Alt+x，<code>S+x</code>代表Shift+x，这也是Emacs的标准定义）</p>

<h3>新建文件</h3>

<ol style="list-style-type:decimal">
	<li>打开Emacs</li>
	<li>输入&nbsp;<code>C-x C-f ～/test/test.org</code></li>
</ol>

<p>&nbsp;</p>

<p>注意文件后缀名为org，该命令新建了一个名为test.org的文件。</p>

<p>新建完文件后，我们就可以输入相应的内容了。以下是org-mode语法的具体介绍。</p>

<h3>章节</h3>

<p>　　org-mode用<code>*</code>&nbsp;标识章节，一个<code>*</code>&nbsp;代表一级标题，两个<code>*</code>&nbsp;代表两级标题，以此类推。</p>

<p>　　在Emacs中输入以下内容：</p>

<pre>
<code>* 标题一
** 标题二</code></pre>

<p>　　注意型号后面有空格。可以发现，不同层级标题的颜色是不一样的。按Alt加左右键能够升降标题的层级。一些常用快捷键如下：</p>

<ul>
	<li><code>S+Tab</code>&nbsp;展开、折叠所有章节</li>
	<li><code>Tab</code>&nbsp;对光标所在章节进行展开、折叠</li>
	<li><code>M+left/right</code>&nbsp;升级/降级标题</li>
</ul>

<h3>列表</h3>

<p>　　列表是文本中一个比较常用的元素，可以列出各种待完成的事项等。org-mode提供了一种很独特的功能，可以加入checkbok（实际就是加入一对中间有空格的方括号<code>[ ]</code>）标记任务的完成状况，而且如果一个总任务有多个子任务，还可以根据子任务的完成情况计算总进度（只需要在总任务后面添加一对方括号，里面加上<code>%</code>或<code>/</code>&nbsp;如<code>[%],[/]</code>）。列表分为有序和无序两种，有序列表以<code>1.</code>或&nbsp;<code>1)</code>开头，无序列表以<code>+</code>或<code>-</code>开头 后面，同样，后面要跟一个空格。 　　 　　我们输入一个无序列表：</p>

<pre>
<code>+ treeroot  
    + branch1
    + branch2</code></pre>

<p>　　在输入的时候，我们按<code>M-RET</code>（Alt+回车）可以自动输入同级的条目，按<code>M+left/right</code>调整层级。同理，我们还可以输入一个有序列表：</p>

<pre>
<code>1) [-] 任务1 [33%]
   1) [ ] 子任务1
   2) [X] 子任务2
   3) [ ] 子任务3
2) [ ] 任务2</code></pre>

<p>　　我们按<code>M-S-RET</code>&nbsp;可以输入一个带checkbox的列表项，而在总任务后面可以输入一个<code>[%]</code>或者<code>[/]</code>则能自动计算总任务进度。最后结果如图所示。</p>

<p><a href="http://www.fuzihao.org/blog/images/orgmode5.png" rel="group"><img alt="orgmode5.png" src="http://www.fuzihao.org/blog/images/orgmode5.png" /></a></p>

<p>　　 常用快捷键： -&nbsp;<code>M-RET</code>&nbsp;插入同级列表项 -&nbsp;<code>M-S-RET</code>&nbsp;插入有 checkbox的同级列表项 -&nbsp;<code>C-c C-c</code>&nbsp;改变 checkbox状态 -&nbsp;<code>M-left/right</code>&nbsp;改变列表项层级关系 -&nbsp;<code>M-up/dowm</code>&nbsp;上下移动列表项</p>

<h3>脚注</h3>

<p>　　用<code>[fn:1]</code>的方式插入脚注，而在最下面插入　</p>

<pre>
<code> [fn:1]本文参考自http://orgmode.org/orgguide.pdf</code></pre>

<p>这个标签是可以点击的。</p>

<h3>表格</h3>

<p>　　表格常用于数据展示，org-mode提供了方便的列表操作。其中最独特的是支持类似于Excel的表格函数，可以完成简单的求和等操作 创建表格时，在新建表格时，首先输入表头：</p>

<pre>
<code>input | Name  |  Phone | sub1 | sub2 | total |
|-</code></pre>

<p>然后在第二行后面按 tab，表格就会自动生成：</p>

<pre>
<code>| Name    |  Phone | sub1 | sub2 | total |
|---------+--------+------+------+-------|
|         |        |      |      |       |</code></pre>

<p>下面我们填入一些数据，在填写的过程中，按Tab键可以调到右方表格，按Enter则能跳到下方表格。如果同时按住Shift，则是反方向跳。输入表格完成后，按&nbsp;<code>C-c C-c</code>则能自动对齐表格，出入完成对齐后，表格如下：</p>

<pre>
<code>| Name        |  Phone | sub1 | sub2 | total |
|-------------+--------+------+------+-------|
| maple       | 134... |   89 |   98 |       |
| wizard      | 152... |   78 |   65 |       |
| Hello World | 123... |   76 |   87 |       |
| hehe        | 157... |   87 |   78 |       |</code></pre>

<p>下面我们来体验下org-mode的强大的表格函数。我们在total列任选一个位置，输入<code>=$3+$4</code>&nbsp;，然后按<code>C-u C-c C-c</code>&nbsp;，org-mode便能自动为我们计算所有三列加四列的和，并放到第五列。最后完成的表格如下</p>

<pre>
<code>| Name        |  Phone | sub1 | sub2 | total |
|-------------+--------+------+------+-------|
| maple       | 134... |   89 |   98 |   187 |
| wizard      | 152... |   78 |   65 |   143 |
| Hello World | 123... |   76 |   87 |   163 |
| hehe        | 157... |   87 |   78 |   165 |
# +TBLFM: $5=$3+$4</code></pre>

<p><a href="http://www.fuzihao.org/blog/images/orgmode4.png" rel="group"><img alt="orgmode4.png" src="http://www.fuzihao.org/blog/images/orgmode4.png" /></a></p>

<p>　　如果要插入行和列，可在表头添加一个标签或者新起一行，输入|再调整格式即可。其中最后一行是ogr-mode自动添加的。一些快捷键如下：</p>

<ul>
	<li><code>C-c |</code>&nbsp;通过输入大小的方式插入表格</li>
	<li><code>C-c C-c</code>&nbsp;对齐表格</li>
	<li><code>Tab</code>&nbsp;调到右边一个表格</li>
	<li><code>enter</code>&nbsp;跳到下方的表格</li>
	<li><code>M-up/right/left/right</code>&nbsp;上下左右移动行（列）</li>
	<li><code>M-S-up/right/left/right</code>&nbsp;向上下左右插入行（列）</li>
</ul>

<h3>链接</h3>

<p>　　链接用于链接一些资源地址，如图片、文件、URL等。 链接的格式是：</p>

<pre>
<code>[[链接地址][链接内容]]</code></pre>

<p>如：</p>

<pre>
<code> [[http://orgmode.org/orgguide.pdf][grgguid.pdf]]]
 [[file:/home/maple/图片/test.jpg][a picture]]</code></pre>

<p>如果去掉标签，则能直接显示图片：</p>

<pre>
<code>[[file:/home/maple/图片/test.jpg]]</code></pre>

<p>　　直接显示的图片在Emacs里默认不显示，需按<code>C-c C-x C-v</code>才能显示，在输出成其他格式（html、pdf&hellip;&hellip;）后也能看到。 　　 常用快捷键： -&nbsp;<code>C-c C-x C-v</code>&nbsp;直接预览图片。</p>

<h3>待办事项（TODO ）</h3>

<p>　　TODO是org-mode最具特色的一个功能，也是org-mode设计的初衷，org-mode的作者本意是用其来完成一个个人时间管理程序（GDT）。因此，可以用org-mode来做一个个人时间管理工具！ 　　下面我们来看怎么写TODO。TODO 也是一类标题，因此也需要用<code>*</code>开头，在Emacs中输入：</p>

<pre>
<code>** TODO 洗衣服</code></pre>

<p>可以看到当中的TODO变成了红色，我们讲光标移到该行，按<code>C-c C-t</code>，则发现TODO变成了DONE（这个序列可以自己定义，详见org-mode手册）。org-mode兼有了标题和列表的功能，也可以添加checkbox和完成进度，除此之外，还可以设计优先级。 我们输入：</p>

<pre>
<code>*** TODO [# A] 任务1
*** TODO [# B] 任务2
*** TODO 总任务 [33%]
**** TODO 子任务1
**** TODO 子任务2 [0%]
      - [-] subsub1 [1/2]
       - [ ] subsub2
       - [X] subsub3
    **** DONE 一个已完成的任务</code></pre>

<p>一些常用操作如下： -&nbsp;<code>C-c C-t</code>&nbsp;变换TODO的状态 -&nbsp;<code>C-c / t</code>以树的形式展示所有的 TODO -&nbsp;<code>C-c C-c</code>&nbsp;改变 checkbox状态 -&nbsp;<code>C-c</code>, 设置优先级（方括号里的ABC） -&nbsp;<code>M-S-RET</code>&nbsp;插入同级TODO标签</p>

<h2>标签Tags</h2>

<p>在org-mode中，可以给每一章节添加一个标签，我们可以通过树的结构来查看所有带标签的章节。在每一节中，子标题的标签会继承父标题标签。 输入：</p>

<pre>
<code>*** 章标题   :work:learn:
**** 节标题1     :fly:plane:
**** 节标题2     :car:run:</code></pre>

<p>一些常用命令如下： -&nbsp;<code>C-c C-q</code>&nbsp;为标题添加标签 -&nbsp;<code>C-c / m</code>&nbsp;生成带标签的树</p>

<h3>时间</h3>

<p>org-mode可以利用Emacs的时间空间插入当前时间。 输入<code>C-c .</code>&nbsp;会出现一个日历，我们点选相应的时间即可插入。</p>

<pre>
<code>&lt;2015-02-17 二&gt;</code></pre>

<p>时间前可以加DEADLINE:和SCHEDULED:表示时间的类型如：</p>

<pre>
<code>DEADLINE:&lt;2015-02-12 四&gt;</code></pre>

<p>下面给出一个常见的TODO标签的模板：</p>

<pre>
<code>*** TODO    洗衣服
SCHEDULED: &lt;2015-02-19 四&gt;
DEADLINE: &lt;2015-03-01 日&gt;</code></pre>

<p>常用命令如下： -&nbsp;<code>C-c .</code>插入时间</p>

<h3>一些特殊文本格式</h3>

<p>和其他标记语言一样，org-mode也支持各种特殊文本格式（如斜体、下划线等）。如下所示：</p>

<pre>
<code>*bold*
/italic/
_underlined_
=code=
~verbatim~
+strike-through+</code></pre>

<h3>富文本导出</h3>

<p>org-mode的强大之处还在于它能到出成各种不同的格式，例如html、pdf等，在导出时，可以加入一些说明符号，来制定导出选项，常用导出符号如下：</p>

<p>设置标题和目录：</p>

<pre>
<code># +TITLE: This is the title of the document
# +OPTIONS: toc:2 (only to two levels in TOC)
# +OPTIONS: toc:nil (no TOC at all)</code></pre>

<p>添加引用：</p>

<pre>
<code># +BEGIN_QUOTE
Everything should be made as simple as possible,
but not any simpler -- Albert Einstein
# +END_QUOTE</code></pre>

<p>设置居中：</p>

<pre>
<code># +BEGIN_CENTER
    Everything should be made as simple as possible,but not any simpler
# +END_CENTER</code></pre>

<p>设置样例（在这里面的内容将会被直接输出，不会被转义）</p>

<pre>
<code># +BEGIN_EXAMPLE
这里面的字符不会被转义
# +END_EXAMPLE</code></pre>

<p>注释，这些内容不会被导出</p>

<pre>
<code>注释的用法#  this is comment

# +BEGIN_COMMENT
这里的注释不会被导出
# +END_COMMENT</code></pre>

<p>Latex使用，org-mode能支持直接输入LaTeX，在导出后LaTeX能被正确解释：</p>

<h4>插入源代码</h4>

<p>org-mode除了可以直接插入源代码之外，可以直接求出运行结果，这也是其强大之处，在使用之前，需要在.emacs配置文件中设置加载的运行语言：</p>

<pre>
<code>(org-babel-do-load-languages
 &#39;org-babel-load-languages
 &#39;(
   (sh . t)
   (python . t)
   (R . t)
   (ruby . t)
   (ditaa . t)
   (dot . t)
   (octave . t)
   (sqlite . t)
   (perl . t)
   (C . t)
   ))</code></pre>

<p>设置好之后输入：</p>

<pre>
<code># +BEGIN_SRC emacs-lisp
(+ 1 2 3 4)
# +END_SRC</code></pre>

<p>将光标移到代码块内，按<code>C-c C-c</code>，org-mode会自动添加如下一行：</p>

<pre>
<code># +RESULTS:
: 10</code></pre>

<p>这正是该代码的计算结果。下面试一试Python代码：</p>

<pre>
<code># +BEGIN_SRC python :results output
a = 1+1
print a
# +END_SRC

# +RESULTS:
: 2</code></pre>

<p>下面测试一下C语言</p>

<pre>
<code># +begin_src C++ :includes &lt;stdio.h&gt;
  int a=1;
  int b=1;
  printf(&quot;%d\n&quot;, a+b);
# +end_src

# +RESULTS:
: 2</code></pre>

<p>常用快捷键： -&nbsp;<code>C-c C-c</code>&nbsp;对当前代码块求值</p>

<h4>关于导出</h4>

<p>org-mode导出pdf需要LaTeX支持，而导出html很方便，但是导出的html美柚任何样式，org-mode为每个模块都添加了css的标签，我们可以将现成的css文件直接加入，便能得到一个好看的输出样式了：</p>

<p>在头部加入</p>

<pre>
<code># +HTML_HEAD: &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;style1.css&quot; /&gt;</code></pre>

<p>该代码加载我们的css。下面我们来将我们的文件导出成html。按<code>C-c C-e</code>会出现一个如图的提示框，问我们导出那种格式，我们选<code>h</code>导出html。</p>

<p><a href="http://www.fuzihao.org/blog/images/orgmode6.png" rel="group"><img alt="orgmode6.png" src="http://www.fuzihao.org/blog/images/orgmode6.png" /></a></p>

<p>常用快捷键： -&nbsp;<code>C-c C-e</code>&nbsp;选择相应的导出格式</p>

<h2>结论</h2>

<p>　　org-mode是Emacs非常重要的一个模式，自其诞生之后，受到了各种Emacs粉丝的追捧，甚至在VIM上也衍生出了org-mode的分支，足见它的人气。通过本教程介绍，我们已经见识到了org-mode 的强大功能，而这仅仅只是org-mode功能的一小部分，org-mode更多的功能等待这我们去探索、发现。更多文章请访问<a href="http://www.fuzihao.org/" rel="noopener" target="_blank">切问录</a>http://www.fuzihao.org</p>

<h2>附件</h2>

<p>org文件<a href="http://www.fuzihao.org/blog/attachment/tutorial.org">tutorial.org</a>&nbsp;导出html文件<a href="http://www.fuzihao.org/blog/attachment/tutorial.html">tutorial.html</a>&nbsp;(直接点击可以看到效果，点右键另存为即是编译后的文件) ## 参考文献 [1]org-mode 官方教程 http://orgmode.org/orgguide.pdf</p>

<p><a href="http://www.fuzihao.org/blog/tags/Emacs/" rel="tag"># Emacs</a></p>
