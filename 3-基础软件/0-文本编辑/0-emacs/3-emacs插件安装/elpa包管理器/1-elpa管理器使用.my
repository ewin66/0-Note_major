<h1>使用emacs24 elpa包管理器</h1>

<p>时间过到很快就要到2017，最近使用emacs变的更多一点，在网上参考了很多大牛的配置，自己在github上也上传了一个配置，主要是方便同步和下载且有版本管理功能。</p>

<p>这里附上我的配置地址：<a href="https://github.com/anonymou3/emacs.d" rel="nofollow" target="_blank">https://github.com/anonymou3/emacs.d</a></p>

<p>配置是基于&nbsp;<a href="https://github.com/redguardtoo/emacs.d.git" rel="nofollow" target="_blank">https://github.com/redguardtoo/emacs.d.git</a>，同时参考了&nbsp;<a href="https://github.com/purcell/emacs.d" rel="nofollow" target="_blank">https://github.com/purcell/emacs.d</a>，只是自己一个简单使用的版本。</p>

<p>现在大概说一下现在emacs24下的epla包管理器，个人感觉非常的方便，同时大牛们已经用lisp写好了add-list之类的路径加载，只要简单几句话就可以加一个新插件，比如说加上自动补全关键字插件：auto-complete</p>

<p>现在简单讲一下三个步骤</p>

<p>1.加载elpa新包 2.新建对应这个新包的配置文件，方便模块的结构化管理 3.在初始化中调用刚刚写的配置文件</p>

<p>通过读代码可知上面两个github的大牛写的模块化程序会，先加载elpa的文件，之后再初始化到我们刚写的配置文件，同时自动加载的elpa插件的路径。</p>

<p>下面详细说一下三个步骤：</p>

<p>1.打开.emacs.d/lisp/init-elpa.el</p>

<p>在(provide &#39;init-elpa) 前加上</p>

<p><code>(require-package &#39;auto-complete) </code></p>

<p>这么一句即可</p>

<p>2.同时为了调用这个新加的插件，为了方便模块结构化管理，我们新建一个.emacs.d/lisp/init-auto-complete.el文件来写上配置，elpa加载路径已经写好我们不必再手动加上，直接写配置如下即可：</p>

<pre>
<code>(require &#39;auto-complete-config)
(ac-config-default)

(provide &#39;init-auto-complete)</code></pre>

<p>3.最后在.emacs.d/init-elpa.el中加载刚刚的建立的配置文件即可</p>

<pre>
<code>(require &#39;init-auto-complete)</code></pre>

<p>本人新手，不过elpa真是神器，很是方便，同时学习了一点lisp基础，方便能改能写一些，现在在windows下特别喜欢学习东西时按F11键透明化窗口，边看边写，感觉相当的棒。</p>
