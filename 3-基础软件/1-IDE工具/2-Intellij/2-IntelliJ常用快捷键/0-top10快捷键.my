<h1>十大Intellij IDEA快捷键（转）</h1>

<h2>0 最终榜单</h2>

<p>这榜单阵容太豪华了，后几名都是如此有用，毫不示弱。</p>

<p>Ø  <strong>Top #10切来切去</strong>：Ctrl+Tab</p>

<p>Ø  <strong>Top #9选你所想</strong>：Ctrl+W</p>

<p>Ø  <strong>Top #8代码生成</strong>：Template/Postfix +Tab</p>

<p>Ø  <strong>Top #7发号施令</strong>：Ctrl+Shift+A</p>

<p>Ø  <strong>Top #6无处藏身</strong>：Shift+Shift</p>

<p>Ø  <strong>Top #5自动完成</strong>：Ctrl+Shift+Enter</p>

<p>Ø  <strong>Top #4创造万物</strong>：Alt+Insert</p>

<p>太难割舍，前三名并列吧！</p>

<p>Ø  <strong>Top #1智能补全</strong>：Ctrl+Shift+Space</p>

<p>Ø  <strong>Top #1自我修复</strong>：Alt+Enter</p>

<p>Ø  <strong>Top #1重构一切</strong>：Ctrl+Shift+Alt+T</p>

<h2>1 智能提示</h2>

<p>Intellij首当其冲的当然就是Intelligence智能！基本的代码提示用<strong><em>Ctrl+Space</em></strong>，还有更智能地按类型信息提示<strong><em>Ctrl+Shift+Space</em></strong>，但因为Intellij总是随着我们敲击而自动提示，所以很多时候都不会手动敲这两个快捷键(除非提示框消失了)。用<strong><em>F2/ Shift+F2</em></strong>移动到有错误的代码，<strong><em>Alt+Enter</em></strong>快速修复(即Eclipse中的Quick Fix功能)。当智能提示为我们自动补全方法名时，我们通常要自己补上行尾的反括号和分号，当括号嵌套很多层时会很麻烦，这时我们只需敲<strong><em>Ctrl+Shift+Enter</em></strong>就能自动补全末尾的字符。而且不只是括号，例如敲完if/for时也可以自动补上{}花括号。</p>

<p>最后要说一点，Intellij能够智能感知Spring、Hibernate等主流框架的配置文件和类，以静制动，在看似“静态”的外表下，智能地扫描理解你的项目是如何构造和配置的。</p>

<h2>2 重构</h2>

<p>Intellij重构是另一完爆Eclipse的功能，其智能程度令人瞠目结舌，比如提取变量时自动检查到所有匹配同时提取成一个变量等。尤其看过<strong>《重构-改善既有代码设计》</strong>之后，有了Intellij的配合简直是令人大呼过瘾！也正是强大的智能和重构功能，使Intellij下的TDD开发非常顺畅。</p>

<p>切入正题，先说一个无敌的重构功能大汇总快捷键<strong><em>Ctrl+Shift+Alt+T</em></strong>，叫做Refactor This。按法有点复杂，但也符合Intellij的风格，很多快捷键都要双手完成，而不像Eclipse不少最有用的快捷键可以潇洒地单手完成(不知道算不算Eclipse的一大优点)，但各位用过<strong>Emacs</strong>的话就会觉得也没什么了(非Emacs黑)。此外，还有些最常用的重构技巧，因为太常用了，若每次都在Refactor This菜单里选的话效率有些低。比如<strong><em>Shift+F6</em></strong>直接就是改名，<strong><em>Ctrl+Alt+V</em></strong>则是提取变量。</p>

<h2>3 代码生成</h2>

<p>这一点类似Eclipse，虽不是独到之处，但因为日常使用频率极高，所以还是罗列在榜单前面。常用的有<strong><em>fori/sout/psvm+Tab</em></strong>即可生成循环、System.out、main方法等boilerplate样板代码，用<strong><em>Ctrl+J</em></strong>可以查看所有模板。后面“辅助”一节中将会讲到<strong><em>Alt+Insert</em></strong>，在编辑窗口中点击可以生成构造函数、toString、getter/setter、重写父类方法等。这两个技巧实在太常用了，几乎每天都要生成一堆main、System.out和getter/setter。</p>

<p>另外，Intellij IDEA 13中加入了后缀自动补全功能(<strong>Postfix Completion</strong>)，比模板生成更加灵活和强大。例如要输入for(User user : users)只需输入user<strong><em>.for+Tab</em></strong>。再比如，要输入Date birthday = user.getBirthday();只需输入user.getBirthday()<strong><em>.var+Tab</em></strong>即可。</p>

<h2>4 编辑</h2>

<p>编辑中不得不说的一大神键就是能够自动按语法选中代码的<strong><em>Ctrl+W</em></strong>以及反向的<strong><em>Ctrl+Shift+W</em></strong>了。此外，<strong><em>Ctrl+Left/Right</em></strong>移动光标到前/后单词，<strong><em>Ctrl+[/]</em></strong>移动到前/后代码块，这些<strong>类Vim风格的光标移动</strong>也是一大亮点。以上Ctrl+Left/Right/[]加上Shift的话就能选中跳跃范围内的代码。<strong><em>Alt+Forward/Backward</em></strong>移动到前/后方法。还有些非常普通的像<strong><em>Ctrl+Y</em></strong>删除行、<strong><em>Ctrl+D</em></strong>复制行、<strong><em>Ctrl+</></em></strong>折叠代码就不多说了。</p>

<p>关于光标移动再多扩展一点，除了Intellij本身已提供的功能外，我们还可以安装<strong>ideaVim或者emacsIDEAs享受到Vim的快速移动和Emacs的AceJump功能</strong>(超爽！)。另外，Intellij的书签功能也是不错的，用<strong><em>Ctrl+Shift+Num</em></strong>定义1-10书签(再次按这组快捷键则是删除书签)，然后通过<strong><em>Ctrl+Num</em></strong>跳转。这避免了多次使用前/下一编辑位置<strong><em>Ctrl+Left/Right</em></strong>来回跳转的麻烦，而且此快捷键默认与Windows热键冲突(默认多了Alt，与Windows改变显示器显示方向冲突，一不小心显示器就变成倒着显式的了，冏啊)。</p>

<h2>5 查找打开</h2>

<p>类似Eclipse，Intellij的<strong><em>Ctrl+N/Ctrl+Shift+N</em></strong>可以打开类或资源，但Intellij更加智能一些，我们输入的任何字符都将看作模糊匹配，省却了Eclipse中还有输入*的麻烦。最新版本的IDEA还加入了Search Everywhere功能，只需按<strong><em>Shift+Shift</em></strong>即可在一个弹出框中搜索任何东西，包括类、资源、配置项、方法等等。</p>

<p>类的继承关系则可用<strong><em>Ctrl+H</em></strong>打开类层次窗口，在继承层次上跳转则用<strong><em>Ctrl+B/Ctrl+Alt+B</em></strong>分别对应父类或父方法定义和子类或子方法实现，查看当前类的所有方法用<strong><em>Ctrl+F12</em></strong>。</p>

<p>要找类或方法的使用也很简单，<strong><em>Alt+F7</em></strong>。要查找文本的出现位置就用<strong><em>Ctrl+F/Ctrl+Shift+F</em></strong>在当前窗口或全工程中查找，再配合<strong><em>F3/Shift+F3</em></strong>前后移动到下一匹配处。</p>

<p>Intellij更加智能的又一佐证是在任意菜单或显示窗口，都可以直接输入你要找的单词，Intellij就会自动为你过滤。</p>

<h2>6 其他辅助</h2>

<p>以上这些神键配上一些辅助快捷键，即可让你的双手90%以上的时间摆脱鼠标，专注于键盘仿佛在进行钢琴表演。这些不起眼却是至关重要的最后一块拼图有：</p>

<p>Ø  <strong>命令</strong>：<strong><em>Ctrl+Shift+A</em></strong>可以查找所有Intellij的命令，并且每个命令后面还有其快捷键。所以它不仅是一大神键，也是查找学习快捷键的工具。</p>

<p>Ø  <strong>新建</strong>：<strong><em>Alt+Insert</em></strong>可以新建类、方法等任何东西。</p>

<p>Ø  <strong>格式化代码</strong>：格式化import列表<strong><em>Ctrl+Alt+O</em></strong>，格式化代码<strong><em>Ctrl+Alt+L</em></strong>。</p>

<p>Ø  <strong>切换窗口</strong>：<strong><em>Alt+Num</em></strong>，常用的有1-项目结构，3-搜索结果，4/5-运行调试。<strong><em>Ctrl+Tab</em></strong>切换标签页，<strong><em>Ctrl+E/Ctrl+Shift+E</em></strong>打开最近打开过的或编辑过的文件。</p>

<p>Ø  <strong>单元测试</strong>：<strong><em>Ctrl+Alt+T</em></strong>创建单元测试用例。</p>

<p>Ø  <strong>运行</strong>：<strong><em>Alt+Shift+F10</em></strong>运行程序，<strong><em>Shift+F9</em></strong>启动调试，<strong><em>Ctrl+F2</em></strong>停止。</p>

<p>Ø  <strong>调试</strong>：<strong><em>F7/F8/F9</em></strong>分别对应Step into，Step over，Continue。</p>

<p>此外还有些我自定义的，例如水平分屏<strong><em>Ctrl+|</em></strong>等，和一些神奇的小功能<strong><em>Ctrl+Shift+V</em></strong>粘贴很早以前拷贝过的，<strong><em>Alt+Shift+Insert</em></strong>进入到列模式进行按列选中。</p>

<h2> </h2>
