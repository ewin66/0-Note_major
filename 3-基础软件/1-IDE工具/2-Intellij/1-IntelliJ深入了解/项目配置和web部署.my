<h1>项目配置和web部署</h1>

<h2>1、项目配置的理解</h2>

<p>IDEA 中最重要的各种设置项，就是这个 Project Structre 了，关乎你的项目运行，缺胳膊少腿都不行。最近公司正好也是用之前自己比较熟悉的IDEA而不是Eclipse，为了更深入理解和使用，就找来各种资料再研究一下，这里整理后来个输出。</p>

<p><img src="http://images2015.cnblogs.com/blog/1007017/201703/1007017-20170308100655063-1664413057.png" style="height:470px; width:800px" /></p>

<p>&nbsp;</p>

<h2>1.1 Project</h2>

<p><img src="http://images2015.cnblogs.com/blog/1007017/201703/1007017-20170308100655516-964072485.png" style="height:521px; width:800px" /></p>

<ol>
	<li><strong>Project name</strong>：定义项目的名称；</li>
	<li><strong>Project SDK</strong>：设置该项目使用的JDK，也可以在此处新添加其他版本的JDK；</li>
	<li><strong>Project language level</strong>：这个和JDK的类似，区别在于，假如你设置了JDK1.8，却只用到1.6的特性，那么这里可以设置语言等级为1.6，这个是限定项目编译检查时最低要求的JDK特性；</li>
	<li><strong>Project compiler output</strong>：项目中的默认编译输出总目录，如图黄色部分，实际上每个模块可以自己设置特殊的输出目录（Modules - (project) - Paths - Use module compile output path），所以这个设置有点鸡肋。</li>
</ol>

<p>&nbsp;</p>

<h2>1.2 Modules</h2>

<p><img src="http://images2015.cnblogs.com/blog/1007017/201703/1007017-20170308100656781-1470207688.png" style="height:439px; width:800px" /></p>

<h3>1.2.1 增删子项目</h3>

<p><img src="http://images2015.cnblogs.com/blog/1007017/201703/1007017-20170308100657422-1882364940.png" style="height:520px; width:800px" /></p>

<p>一个项目中可以有多个子项目，每个子项目相当于一个模块。一般我们项目只是单独的一个，IntelliJ IDEA 默认也是单子项目的形式，所以只需要配置一个模块。</p>

<p>（此处的两个项目引入仅作示例参考）</p>

<p>&nbsp;</p>

<h3>1.2.2 子项目配置</h3>

<p>每个子项目都对应了Sources、Paths、Dependencies 三大配置选项：</p>

<ul>
	<li><strong>Sources</strong>：显示项目的目录资源，那些是项目部署的时候需要的目录，不同颜色代表不同的类型；</li>
	<li><strong>Paths</strong>：可以指定项目的编译输出目录，即项目类和测试类的编译输出地址（替换掉了Project的默认输出地址）</li>
	<li><strong>Dependencies</strong>：项目的依赖</li>
</ul>

<p><img src="http://images2015.cnblogs.com/blog/1007017/201703/1007017-20170308100659000-1328221055.png" style="height:520px; width:625px" /></p>

<p>&nbsp;</p>

<p><img src="http://images2015.cnblogs.com/blog/1007017/201703/1007017-20170308100700266-263063857.png" style="height:520px; width:625px" /></p>

<p>&nbsp;</p>

<p><img src="http://images2015.cnblogs.com/blog/1007017/201703/1007017-20170308100701422-993684018.png" style="height:520px; width:625px" /></p>

<p>&nbsp;</p>

<h3>1.2.3 增删框架（Web部署-1）</h3>

<p>每个子项目之下都可以定义它所使用的框架，这里重点说明一下Web部分的设置。</p>

<p><img src="http://images2015.cnblogs.com/blog/1007017/201703/1007017-20170308100702750-1045975711.png" style="height:520px; width:800px" /></p>

<p>&nbsp;</p>

<h2>1.3 Libraries</h2>

<p>这里可以显示所添加的jar包，同时也可以添加jar包，并且可以把多个jar放在一个组里面，类似于jar包整理。</p>

<p>&nbsp;</p>

<p>这里默认将每个jar包做为了一个单独的组（未测试，待定）。</p>

<p>&nbsp;</p>

<h2>1.4 Facets</h2>

<p>官方的解释是：</p>

<p>When you select a framework (a facet) in the element selector pane, the settings for the framework are shown in the right-hand part of the dialog.</p>

<p>（当你在左边选择面板点击某个技术框架，右边将会显示这个框架的一些设置）</p>

<p>&nbsp;</p>

<p>说实话，并没有感觉到有什么作用。</p>

<p>&nbsp;</p>

<h2>1.5 Artifacts（Web部署-2）</h2>

<p>项目的打包部署设置，这个是项目配置里面比较关键的地方，重点说一下。</p>

<p>&nbsp;</p>

<p>先理解下它的含义，来看看官方定义的artifacts：</p>

<p>An artifact is an assembly of your project assets that you put together to test,&nbsp;deploy or distribute your software solution or its part.&nbsp;Examples are a collection of compiled Java classes or a Java application packaged in a Java archive, a Web application as a directory structure or a Web application archive, etc.</p>

<p>&nbsp;</p>

<p>即编译后的Java类，Web资源等的整合，用以测试、部署等工作。再白话一点，就是说某个module要如何打包，例如war exploded、war、jar、ear等等这种打包形式。某个module有了 Artifacts 就可以部署到应用服务器中了。</p>

<p><em>（</em></p>

<p><em><strong>jar</strong>：Java ARchive，通常用于聚合大量的Java类文件、相关的元数据和资源（文本、图片等）文件到一个文件，以便分发Java平台应用软件或库；</em></p>

<p><em><strong>war</strong>：Web application ARchive，一种JAR文件，其中包含用来分发的JSP、Java Servlet、Java类、XML文件、标签库、静态网页（HTML和相关文件），以及构成Web应用程序的其他资源；</em></p>

<p><em><strong>exploded</strong>：在这里你可以理解为展开，不压缩的意思。也就是war、jar等产出物没压缩前的目录结构。建议在开发的时候使用这种模式，便于修改了文件的效果立刻显现出来。</em></p>

<p><em>）</em></p>

<p>默认情况下，IDEA的 Modules 和 Artifacts 的 output目录已经设置好了，不需要更改，打成war包的时候会自动在 WEB-INF目录下生成classes，然后把编译后的文件放进去。</p>

<p>&nbsp;</p>

<p><img src="http://images2015.cnblogs.com/blog/1007017/201703/1007017-20170308100703797-672061507.png" style="height:397px; width:800px" /></p>

<p>&nbsp;</p>

<p>你可能对这里的输出目录不太理解，之前不是配置过了文件编译的输出目录了吗？为什么这里还有一个整合这些资源的目录呢？它又做了哪些事呢？&nbsp;</p>

<p>&nbsp;</p>

<p>其实，实际上，当你点击运行tomcat时，默认就开始做以下事情：</p>

<ul>
	<li>编译，IDEA在保存/自动保存后不会做编译，不像Eclipse的保存即编译，因此在运行server前会做一次编译。编译后class文件存放在指定的项目编译输出目录下（见1.2.2）；</li>
	<li>根据artifact中的设定对目录结构进行创建；</li>
	<li>拷贝web资源的根目录下的所有文件到artifact的目录下（见1.2.3）；</li>
	<li>拷贝编译输出目录下的classes目录到artifact下的WEB-INF下（见1.2.2）；</li>
	<li>拷贝lib目录下所需的jar包到artifact下的WEB_INF下；</li>
	<li>运行server，运行成功后，如有需要，会自动打开浏览器访问指定url。</li>
</ul>

<p>&nbsp;</p>

<p>在这里还要注意的是，配置完成的artifact，需要在tomcat中进行添加：</p>

<p><img src="http://images2015.cnblogs.com/blog/1007017/201703/1007017-20170308100704531-1462113069.png" style="height:581px; width:800px" /></p>

<p>&nbsp;</p>

<h2>2、参考链接</h2>

<ul>
	<li><a href="http://whudoc.qiniudn.com/2016/IntelliJ-IDEA-Tutorial/project-composition-introduce.html">IntelliJ IDEA 项目相关的几个重要概念介绍</a></li>
	<li><a href="https://www.jetbrains.com/help/idea/2016.3/dependencies-tab.html?search=project%20structure">Dependencies Tab</a></li>
	<li><a href="https://www.jetbrains.com/help/idea/2016.3/facet-page.html?search=project%20structure">Facet Page</a></li>
	<li><a href="https://www.jetbrains.com/help/idea/2016.3/working-with-artifacts.html#artifact_def">Working with Artifacts</a></li>
	<li><a href="http://www.cnblogs.com/52php/p/5677661.html">Intellij IDEA 14.x 中的Facets和Artifacts的区别</a></li>
	<li><a href="http://white-crucifix.iteye.com/blog/2070830">IntelliJ使用指南&mdash;&mdash; 深入理解IntelliJ的Web部署逻辑</a></li>
	<li><a href="https://my.oschina.net/lujianing/blog/186737">IntelliJ IDEA WEB项目的部署配置</a></li>
</ul>
