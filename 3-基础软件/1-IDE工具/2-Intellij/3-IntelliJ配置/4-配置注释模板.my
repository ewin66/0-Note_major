<h1>IDEA类和方法注释模板设置（非常详细）</h1>

<p>    IDEA自带的注释模板不是太好用，我本人到网上搜集了很多资料系统的整理了一下制作了一份比较完整的模板来分享给大家，我不是专业玩博客的，写这篇文章只是为了让大家省事。</p>

<p>这里设置的注释模板采用Eclipse的格式，下面先贴出Eclipse的注释模板，我们就按照这种格式来设置：</p>

<p>类注释模板：                                                                      方法注释模板：</p>

<p><img alt="" src="https://img-blog.csdn.net/20180111094050403?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveGlhb2xpdWxhbmcwMzI0/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" />    <img alt="" src="https://img-blog.csdn.net/20180111094203828?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveGlhb2xpdWxhbmcwMzI0/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" /></p>

<h2>一、类的模板</h2>

<p>首先我们来设置IDEA中类的模板：（IDEA中在创建类时会自动给添加注释）</p>

<p>1、File-->settings-->Editor-->File and Code Templates-->Files</p>

<p>我们选择Class文件（当然你要设置接口的还也可以选择Interface文件）</p>

<p>（1）${NAME}：设置类名，与下面的${NAME}一样才能获取到创建的类名</p>

<p>（2）TODO：代办事项的标记，一般生成类或方法都需要添加描述</p>

<p>（3）${USER}、${DATE}、${TIME}：设置创建类的用户、创建的日期和时间，这些事IDEA内置的方法，还有一些其他的方法在绿色框标注的位置，比如你想添加项目名则可以使用${PROJECT_NAME}</p>

<p>（4）1.0：设置版本号，一般新创建的类都是1.0版本，这里写死就可以了</p>

<pre>
/**
* @ClassName ${NAME}
* @Description TODO
* @Author ${USER}
* @Date ${DATE} ${TIME}
* @Version 1.0
**/
</pre>

<p>2、效果图展示</p>

<p><img alt="" src="https://img-blog.csdn.net/20180111095826897?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveGlhb2xpdWxhbmcwMzI0/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" /></p>

<h2>二、设置方法注释模板</h2>

<p>IDEA还没有智能到自动为我们创建方法注释，这就是要我们手动为方法添加注释，使用Eclipse时我们生成注释的习惯是</p>

<p>/**+Enter，这里我们也按照这种习惯来设置IDEA的方法注释</p>

<p>1、File-->Settings-->Editor-->Live Templates</p>

<p>（1）新建组：命名为userDefine</p>

<p>（2）新建模板：命名为*</p>

<p>因为IDEA生成注释的默认方式是：/*+模板名+快捷键（比如若设置模板名为add快捷键用Tab，则生成方式为</p>

<p>/*add+Tab），如果不采用这样的生成方式IDEA中没有内容的方法将不可用，例如获取方法参数的methodParameters(）、</p>

<p>获取方法返回值的methodReturnType(）</p>

<p>（3）设置生成注释的快捷键</p>

<p><img alt="" src="https://img-blog.csdn.net/20180111102440886?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveGlhb2xpdWxhbmcwMzI0/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" />在设置弹出框的头部，快捷方式选tab，<strong>By default expand with 【tab】</strong></p>

<p>（4）设置模板：模板内容如下</p>

<p>注意第一行，只有一个*而不是/*</p>

<p>在设置参数名时必须用${参数名}$的方式，否则第五步中读取不到你设置的参数名</p>

<pre>
/**
* @Author wangyajun
* @Description <em>//TODO $end$
</em><em> </em>* @Date $time$ $date$
* @Param $param$
* @<strong>return </strong>$return$
**/</pre>

<p>如果使用/*生成的模板注释将会是如下效果：所以我们要去掉最前面的/*</p>

<p>（5）设置注释的简称</p>

<p>在填写模板内容的下方，可以设置注释简称：<strong>Abbreviation【haha】</strong></p>

<p><strong>设置了这个之后，在代码中敲haha然后按tab就会将haha替换成注释模板。</strong></p>

<p><strong>（6）设置参数的获取方式  ！！！！！！</strong></p>

<p>选择右侧的<strong>Edit variables</strong>按钮</p>

<p><img alt="" src="https://img-blog.csdn.net/20180111102925939?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveGlhb2xpdWxhbmcwMzI0/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" />选择每个参数对应的获取方法（在下拉选择框中选择即可），网上有很多教程说获取param时使用脚本的方式，我试过使用脚本</p>

<p>的方式不仅麻烦而且只能在方法内部使用注释时才能获取到参数</p>

<p>（7）设置模板的应用场景</p>

<p>点击模板页面最下方的警告，来设置将模板应用于那些场景，一般选择EveryWhere-->Java即可</p>

<p>（如果曾经修改过，则显示为change而不是define）</p>

<p><img alt="" src="https://img-blog.csdn.net/20180111103636249?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveGlhb2xpdWxhbmcwMzI0/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" />（8）效果图</p>

<p>创建方法，在方法上面写：/*+模板名+Enter-->/**+Enter</p>

<p><img alt="" src="https://img-blog.csdn.net/20180111104034543?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveGlhb2xpdWxhbmcwMzI0/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" /></p>
