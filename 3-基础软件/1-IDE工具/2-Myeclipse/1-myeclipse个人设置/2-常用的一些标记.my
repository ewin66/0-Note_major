<h1>myeclipse常用的标记、</h1>

<h2>断点标记</h2>

<p>在代码行前面直接双击添加断点。</p>

<p>然后单击[window &mdash; show View &mdash; breakpoints ] 打开断点视图 就会发现有这个断点。可以勾选，可以使所有断点失效。</p>

<h2>TASK&nbsp;标记</h2>

<p>在代码行前面右击 -&gt; add task。 就可以将此行添加到task里面，跟断点一样，且可以在task窗口查看。</p>

<p>task 显示列表上面，有第一行-复选框，第二行-优先级设置框。</p>

<p>复选框勾选的显示最前，然后按照优先级再排序。</p>

<p><img src="http://dl.iteye.com/upload/attachment/299792/5e03c977-bec2-3f25-a88b-194e439742e4.jpg" /></p>

<h2>REMARK标记</h2>

<p>其实，在右击时，还可以看到一个add remark 功能点，其实也可以用。</p>

<h2>TODO标记</h2>

<p>这个算是一个标注。比如你现在不想做，想过会做,但是又怕忘了这事或忘记在哪个代码里了。你就可以在你的代码里加上：&nbsp;</p>

<ol start="1">
	<li>try&nbsp;{&nbsp;&nbsp;</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;list&nbsp;=&nbsp;friService.getFriends(24010L,&nbsp;null,&nbsp;page,&nbsp;true);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</li>
	<li>}&nbsp;catch&nbsp;(Exception&nbsp;e)&nbsp;{&nbsp;&nbsp;</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;<strong>//&nbsp;TODO&nbsp;要做异常发生时的处理&nbsp;</strong>&nbsp;</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;e.printStackTrace();&nbsp;&nbsp;</li>
	<li>}&nbsp;&nbsp;</li>
</ol>

<p>然后单击[window &mdash; show View &mdash; Tasks ] 打开任务视图 就会发现有这么一段&nbsp;</p>

<p><br />
<img src="http://dl.iteye.com/upload/attachment/299792/5e03c977-bec2-3f25-a88b-194e439742e4.jpg" />&nbsp;<br />
<br />
然后直接点击这行就会到那段 TODO注释啦&nbsp;</p>

<p>&nbsp;</p>

<h1><a href="http://www.cnblogs.com/jdhdevelop/p/7193524.html" id="cb_post_title_url">TODO的用法</a></h1>

<p>　　在android开发中，我们经常会使用TODO来标记我们的代码，一般是用来表示待完成，或者待解决的部分。本文将详细介绍一下TODO的用法，及一些相关的扩展。（本文是在别人文章上做一点编辑，出处：<a href="http://blog.csdn.net/my_truelove/article/details/72857949" target="_blank">http://blog.csdn.net/my_truelove/article/details/72857949</a>）</p>

<p>一、TODO用法</p>

<p>1.添加TODO</p>

<p>　　<img alt="添加 TODO" src="http://img.blog.csdn.net/20170604113900960?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTXlfVHJ1ZUxvdmU=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" style="height:266px; width:800px" title="" /></p>

<p>2.查看TODO</p>

<p>在android studio左下角，有一个按钮，可以查看</p>

<p><img alt="" src="https://images2015.cnblogs.com/blog/982431/201707/982431-20170717110631628-1565250384.png" /></p>

<p>如果没有 TODO tab，你可以通过左上角的菜单打开：View -&gt; Tool windows -&gt; TODO。</p>

<p><img alt="TODO tab" src="http://img.blog.csdn.net/20170604114034385?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTXlfVHJ1ZUxvdmU=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" title="" /></p>

<p>3.完成TODO</p>

<p>　　完成 TODO 标记的事件后，就可以删除该 TODO 注释。</p>

<p>二、FIXME用法</p>

<p>　　除了 TODO 标记，我们还可以使用 Android Studio 提供的 FIXME 来标记一些待修复的问题，FIXME 与 TODO 在本质上没有任何区别，只是不同的标记罢了。区别于 TODO 标记，FIXME 可以认为是偏向于标记存在问题的 TODO 事项。</p>

<p>一句话弄清二者区别： TODO 是总称，FIXME 是细分。</p>

<p>1.添加FIXME</p>

<p>其用法同 TODO，添加时如下：&nbsp;<br />
<img alt="添加 FIXME" src="http://img.blog.csdn.net/20170604114054416?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTXlfVHJ1ZUxvdmU=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" style="height:266px; width:800px" title="" /></p>

<p>然后同样在 TODO 视图中可以看到：</p>

<p><img alt="在 TODO 视图中可以看到" src="http://img.blog.csdn.net/20170604114131511?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTXlfVHJ1ZUxvdmU=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" title="" /></p>

<p>2.筛选FIXME</p>

<p>　　当项目中 TODO 和 FIXME 较多且混在一起时，找起来可就比较费尽了，此时我们可以使用 &ldquo;过滤&rdquo; 功能来区分开 TODO 和 FIXME。</p>

<p>首先，添加过滤 FIXME 的条件，点击 TODO 窗口左侧的漏斗，选择&nbsp;<code>Edit Filters</code>，按照图示添加&nbsp;<code>FIXME</code>&nbsp;过滤条件：</p>

<p><img alt="筛选 FIXME" src="http://img.blog.csdn.net/20170604114243200?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTXlfVHJ1ZUxvdmU=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" style="height:588px; width:800px" title="" /></p>

<p>添加完毕后，再次点击漏斗，选择刚才添加的&nbsp;<code>FIXME</code>&nbsp;过滤条件，在 TODO 视图中将只会看到&nbsp;<code>FIXME</code>&nbsp;标记的 TDOO 事项：</p>

<p><img alt="使用过滤 FIXME 的条件" src="http://img.blog.csdn.net/20170604114308498?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTXlfVHJ1ZUxvdmU=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" title="" /></p>

<p>最后，就是解决 FIXME 并删除了。</p>

<p>三、自定义TODO</p>

<p>一般我们习惯于直接用 TODO 来标记所有待办事项，但 TODO 是总称，比较广义，所有 &ldquo;待办事项&rdquo; 都可以用 TODO 标记。当项目中有大量 TODO 时，你会发现无法快速定位要找的 TODO，或者无法区分该 TODO 到底属于哪种类型（虽然可以添加描述，但这个描述的作用太弱了，无法筛选）。</p>

<p>下面举个栗子，在开发过程中，我们经常发现一些遗留代码可以重构，此时我们不可能立即着手去做，应该通过 TODO 去标记：</p>

<pre>
<code>// TODO: 2017/5/1 待重构</code>
</pre>

<p>但是，这样的 TODO 不容易识别，也无法筛选，后期只能通过附加的描述 &ldquo;待重构&rdquo; 去判断。此时，按照 FIXME 是 TODO 的细分的逻辑，我们不仅会问：</p>

<p>是不是可以自定义一个细分 TODO ，来标记重构？</p>

<p>答案是肯定的。</p>

<h3>1. 自定义重构 TODO: REFACTOR</h3>

<p>其实，TODO 的本质就是满足特定正则的注释，这样说就好理解了。</p>

<p>通过右上角的菜单， File -&gt; Settings -&gt; Editor -&gt; TODO 打开 TODO 设置面板，点击右上方的 + 添加一个正则，如图：</p>

<p><img alt="添加一个正则" src="http://img.blog.csdn.net/20170604114349280?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTXlfVHJ1ZUxvdmU=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" style="height:505px; width:800px" title="" /></p>

<p>在&nbsp;<code>Pattern</code>&nbsp;中输入正则表达式&nbsp;<code>\brefactor\b.*</code>，然后选择一个&nbsp;<code>Icon</code>（可选），点击&nbsp;<code>OK</code>&nbsp;关闭添加面板，再次点击&nbsp;<code>OK</code>&nbsp;应用并关闭设置面板。</p>

<p>添加完 REFACTOR 类型的 TODO 之后，你迫不及待想试试，但发现不管怎样系统都没有<a href="http://lib.csdn.net/base/aiplanning" target="_blank" title="人工智能规划与决策知识库">智能</a>提示以补全代码，心想我在坑你。其实不然，TODO 标记和智能提示是两码事。</p>

<p>你添加了一个自定义的 TODO 正则，系统匹配后将其视为 TODO，在代码中高亮并显示在 TODO 视图中；而智能提示和自动补齐是&nbsp;<code>代码模版</code>的功能。不是一回事，明白吗？</p>

<p>你在代码中纯手敲一个 REFACTOR 的 TODO 也不是不可以，只不过这样效率太低了。</p>

<pre>
<code>// REFACTOR: 2017/5/1 待重构 </code>
</pre>

<p>下面，跟随我一起添加一个&nbsp;<code>REFACTOR</code>&nbsp;的代码模版吧。</p>

<h3>2. 添加代码模版 Live Template</h3>

<p>通过右上角的菜单， File -&gt; Settings -&gt; Editor -&gt; Live Templates 打开代码模版设置页面，找到&nbsp;<code>AndroidComments</code>&nbsp;并展开，你会发现熟悉的&nbsp;<code>fixme</code>&nbsp;和&nbsp;<code>todo</code>，我们就仿着它们添加我们的代码模版。不了解的同学可以点击右下角&nbsp;<code>Help</code>&nbsp;简单学习下。</p>

<p>1.点中&nbsp;<code>AndroidComments</code>，点击右上角 +，选择&nbsp;<code>Live Template</code>：</p>

<p><img alt="这里写图片描述" src="http://img.blog.csdn.net/20170604114500094?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTXlfVHJ1ZUxvdmU=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" style="height:391px; width:800px" title="" /></p>

<p>2.在下方出现的面板中填上对应内容，分别是：缩写、描述、模版文本。</p>

<ul>
	<li>缩写：我们在代码中敲对应缩写，就会出现智能提示；</li>
	<li>描述：智能提示时的描述；</li>
	<li>模版文本：缩写对应的补齐后的文本（不局限于代码），在这可以声明变量；</li>
</ul>

<p>此处我填写内容如下：</p>

<p><img alt="填写内容如下" src="http://img.blog.csdn.net/20170604114523541?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTXlfVHJ1ZUxvdmU=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" style="height:223px; width:800px" title="" /></p>

<p>3.在模版文本中，我们使用&nbsp;声明了日期变量，使用&nbsp;声明了描述代办的变量，变量是用来占位的。那这两个变量到底如何赋值呢？</p>

<p>注意右侧的 Edit variables，即编辑变量。点击该按钮，打开 &ldquo;Edit Template Variables&rdquo; 面板。表格中，四列分别对应了：变量名称、表达式、默认值、如果已定义则跳过。具体的使用方法，同样可点击右下角的&nbsp;<code>Help</code>&nbsp;看一下，这不是本文的重点。看看我最后设置的值：</p>

<p><img alt="最后设置的值" src="http://img.blog.csdn.net/20170604114730464?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTXlfVHJ1ZUxvdmU=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" title="" /></p>

<p>此处，我将 date 变量的表达式设为 date()，系统将会使用当前日期来填补该变量的占位，并勾选 &ldquo;跳过&rdquo; 选项，表示有值的话就不再自己编辑。</p>

<p>同时，对于 todo 变量，是用来添加描述的，无法使用表达式赋值，所以我选择了赋予默认值 &ldquo;待重构&rdquo;，并且没有勾选 &rdquo; 跳过&rdquo;。这样的话，系统会默认为我赋值 &ldquo;待重构&rdquo;，但我的光标还会定在那儿，我可以继续编辑，或者回车使用默认值。</p>

<p>这块不好理解的话可以看后面的 gif 动图，就明白了。</p>

<p>4.编辑变量后，点击&nbsp;<code>OK</code>&nbsp;返回上一页，最后还需要定义该模版运用的上下文，也就是在哪些地方可以通过缩写调出代码模版。</p>

<p>在界面下方，有一段文本：No applicable contexs yet. 后面跟着一个&nbsp;<code>Define</code>，点击就会弹出设置模版运用上下文的列表。我们一般是在&nbsp;<a href="http://lib.csdn.net/base/java" target="_blank" title="Java 知识库">Java</a>&nbsp;代码中添加 REFACTOR TODO，所以全选 Java，当然你也可以按需选择。</p>

<p>5.最后勾选右侧的&nbsp;<code>Refactor according to style</code>，表示自动格式化代码（调整对齐、缩进等），点击右下角 &lsquo;OK&rsquo;，运用该模版并退出。</p>

<p>最终效果是这样的：</p>

<p><img alt="最终效果" src="http://img.blog.csdn.net/20170604114824755?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTXlfVHJ1ZUxvdmU=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" style="height:271px; width:800px" title="" /></p>

<p>点击右下角 OK，运用该模版并退出。</p>

<h3>3 在代码中使用 REFACTOR TODO</h3>

<p>在需要添加重构标识的地方，输入&nbsp;<code>refactor</code>，输入过程中，智能提示就出来了，回车确认即可。</p>

<p>至此我们就成功添加了一个&nbsp;<code>REFACOR</code>&nbsp;类型的 TODO。下面看演示，我输入慢点，注意看我们在上面提到的&nbsp;<code>默认值</code>&nbsp;和&nbsp;<code>跳过</code>&nbsp;，在代码补齐时对&nbsp;<strong>日期和描述</strong>&nbsp;的影响：</p>

<p><img alt="使用 REFACTOR TODO" src="http://img.blog.csdn.net/20170604114948902?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTXlfVHJ1ZUxvdmU=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" style="height:265px; width:800px" title="" /></p>

<p>区别于之前的 todo 和 fixme，自动补齐时加上了默认描述&rdquo;待重构&rdquo;，你可以继续输入覆盖，或者直接回车确认。</p>

<p>和 TODO、FIXME 一样，代码高亮并出现在 TODO 视图中。</p>

<p><img alt="TODO视图中的REFACTOR" src="http://img.blog.csdn.net/20170604115024262?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTXlfVHJ1ZUxvdmU=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" title="" /></p>
