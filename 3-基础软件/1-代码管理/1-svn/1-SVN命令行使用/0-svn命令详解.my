<h1><a href="http://www.cnblogs.com/jason886/p/7158632.html" id="cb_post_title_url">SVN命令详解</a></h1>

<p>1、将文件checkout到本地目录</p>

<p>svn checkout server-path [local-path] [--username=xxxx] [--password=xxxx]</p>

<p>例如：svn checkout svn:192.168.1.1/pro/project project</p>

<p>简写：svn co</p>

<p>2、往版本库中添加新文件</p>

<p>svn add file</p>

<p>例如：svn add test.c（添加test.c）</p>

<p>svn add *.c（添加当前目录下的所有.c文件）</p>

<p>3、将改动的文件提交到版本库</p>

<p>svn commit -m &quot;LogMessage&quot; &nbsp;[-N] [--no-unlock] path （如果选择了保持锁，就是用-no-unlock开关）</p>

<p>例如：svn commit -m &quot;add test file for my test&quot; test.c</p>

<p>简写：svn ci</p>

<p>4、加锁、解锁</p>

<p>svn lock -m &quot;LockMessage&quot; [--force] PATH</p>

<p>例如：svn lock -m &quot;lock test file&quot; test.c</p>

<p>svn unlock PATH</p>

<p>5、更新到某个版本</p>

<p>svn update -r m path</p>

<p>例如：</p>

<p>svn update如果后面没有目录，默认将当前目录以及子目录下的所有文件都更新到最新版本</p>

<p>svn update -r 200 test.c 将版本库中的文件test.c还原到版本200</p>

<p>svn upate test.c （更新，与版本库同步。如果在提交时提示过期的话，是因为冲突，需要先update，修改文件，然后清除svn resolved，最后再提交commit）</p>

<p>简写：svn up</p>

<p>6、查看文件或者目录状态</p>

<p>1） svn status path（目录下的文件和子目录的状态，正常状态不显示）</p>

<p>『?：不在svn控制中；M：内容被修改；C：发生冲突；A：预订加入到版本库；K：被锁定】</p>

<p>2）svn status -v path（显示文件和子目录状态）</p>

<p>第一列保持相同，第二列显示工作版本号，第三和第四列显示最后一次修改的版本号和修改人。</p>

<p>注：svn status、svn diff和svn revert这三条命令在没有网络的情况下也可以执行的，原因是svn在本地的.svn目录中保留了本地版本的原始拷贝。</p>

<p>简写：svn st</p>

<p>7、删除文件</p>

<p>svn delete path -m &quot;delete log&quot;</p>

<p>例如：svn delete svn://192.168.1.1/pro/domain/test.c -m &quot;delete test file&quot;</p>

<p>或者直接svn delete test.c 然后再svn ci -m &quot;delte test file&quot;，推荐使用这种</p>

<p>简写：svn （del，remove，rm）</p>

<p>8、查看日志</p>

<p>svn log path</p>

<p>例如：svn log test.c 显示这个文件的所有修改记录，及其版本号的变化</p>

<p>9、查看文件详细信息</p>

<p>svn info path</p>

<p>例如：svn info test.c</p>

<p>10、比较差异</p>

<p>svn diff path （将修改的文件与基础版本比较）</p>

<p>例如：svn diff test.php</p>

<p>svn diff -r m:n path（对版本m和版本n比较差异）</p>

<p>例如：svn diff -r 200:201 test.c</p>

<p>简写：svn di</p>

<p>11、将两个版本之间的差异合并到当前文件</p>

<p>svn merge -r m:n path</p>

<p>例如：svn merge -r 200:205 test.c（将版本200与205之间的差异合并到当前文件，但是一般都会产生冲突，需要处理一下）</p>

<p>12、svn帮助</p>

<p>svn help</p>

<p>svn help ci</p>

<p>--------------------------------------------------------------</p>

<p>以上是常用命令，下面写几个不经常用的</p>

<p>--------------------------------------------------------------</p>

<p>13、版本库下的文件和目录列表</p>

<p>svn list path</p>

<p>显示path目录下的所有属于版本库的文件和目录</p>

<p>简写：svn ls</p>

<p>14、创建纳入版本控制下的新目录</p>

<p>svn mkdir</p>

<p>15、恢复本地修改</p>

<p>svn revert：恢复原始未改变的工作副本文件，</p>

<p>用法： svn revert path</p>

<p>16、代码库url变更</p>

<p>svn switch（sw）：更新工作副本至不同的URL。</p>

<p>用法：1&nbsp;svn switch URL [PATH] 更新你的工作副本，映射到一个新的URL，其行为跟&ldquo;svn update&rdquo;很像，也会将服务器上文件与本地文件合并，这是将工作副本对应到同一仓库中某个分支或者标记的方法。</p>

<p>2 svn switch -relocate FORM TO [PATH...] 改写工作副本的URL元数据，以反映单纯的URL上的改变。当仓库的URL变动（比如方案名或者主机名成变动），但是工作副本仍旧对映到同一仓库的同一目录时使用这个命令更新工作副本与仓库的对应关系。</p>

<p>17、解决冲突</p>

<p>svn resolved：移除工作副本的目录或文件的&ldquo;冲突&rdquo;状态</p>

<p>用法：svn resolved [path]</p>

<p>注意：本命令不会依语法来解决冲突或是移除冲突标记；它只是移除冲突的相关文件，然后让path可以在此提交。</p>

<p>18、输出指定文件或URL的内容</p>

<p>svn cat 目标[@版本]</p>

<p>svn cat -r PREV filename &gt; filename (PREV是上一版本，也可以写具体版本号，这样输出结果是可以提交的）</p>
