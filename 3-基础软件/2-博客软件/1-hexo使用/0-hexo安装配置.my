<h1>Hexo安装和配置</h1>

<h2>1. Git安装和设置</h2>

<ul>
	<li>github</li>
</ul>

<pre>
<code>brew install git          #Mac电脑使用brew安装 
sudo apt-get install git  #Ubuntu系统使用这条命令安装 
</code></pre>

<p>然后设置好git账户<br />
使用Github Page搭建博客, 需要在github建立仓库,仓库名为username.github.io</p>

<ul>
	<li><strong>gitcafe</strong>&nbsp;<br />
	因为github速度稍微慢一点，所以用作备份站，主站用国内的gitcafe。</li>
</ul>

<ol>
	<li>
	<p>先到<a href="https://link.jianshu.com/?t=https://gitcafe.com/projects/new" rel="nofollow" target="_blank">https://gitcafe.com/projects/new</a>页面注册一个新的项目，<strong>项目名需要与你的用户名相同</strong>，默认分支选择gitcafe-pages,项目主页也是相同的&nbsp;<a href="https://link.jianshu.com/?t=http://username.gitcafe.com" rel="nofollow" target="_blank">http://username.gitcafe.com</a></p>
	</li>
	<li>
	<p>采用和github同样的key文件，在 ~/.ssh/id_rsa.pub<br />
	如果没有，单独生成一个ssh-key</p>
	</li>
</ol>

<pre>
<code>ssh-keygen -t rsa -C &quot;emailaddress&quot; -f ~/.ssh/gitcafe
</code></pre>

<p>在SSH的文件夹下，可以看到gitcafe私钥和公钥文件：</p>

<pre>
<code>gitcafe
gitcafe.pub
</code></pre>

<p>生成配置文件：</p>

<pre>
<code>touch ~/.ssh/config
</code></pre>

<p>添加以下内容：</p>

<pre>
<code>Host gitcafe.com www.gitcafe.com
IdentityFile ~/.ssh/gitcafe
</code></pre>

<ol start="3">
	<li>
	<p>登录<a href="https://link.jianshu.com/?t=https://gitcafe.com/account/public_keys" rel="nofollow" target="_blank">网站</a>，将SSH文件夹下的 GitCafe.pub 中的内容复制到公钥框中即可。</p>
	</li>
	<li>
	<p>测试是否连上，共用的key，输入：</p>
	</li>
</ol>

<pre>
<code>ssh -T git@gitcafe.com -i ~/.ssh/id_rsa
</code></pre>

<p>单独的key，输入：</p>

<pre>
<code>ssh -T git@gitcafe.com -i ~/.ssh/gitcafe
</code></pre>

<h2>2. Node.js安装</h2>

<pre>
<code>brew install node  #最新版的node.js的包中已经集成了npm包管理工具
</code></pre>

<p>使用以下命令验证是否安装成功</p>

<pre>
<code>node -v
npm -v
</code></pre>

<p>如果运行hexo命令时，发现错误:</p>

<pre>
<code>-bash: hexo: command not found
</code></pre>

<p>是没有指定nodejs所致。可以使用下面方法解决：</p>

<p>如果机器没有安装过node，那么首先<code>brew install nvm</code>安装nvm。</p>

<p>其次需要在shell的配置文件(~/.bashrc, ~/.profile, or ~/.zshrc)中添加如下内容：</p>

<pre>
<code>export NVM_DIR=~/.nvm
source $(brew --prefix nvm)/nvm.sh
</code></pre>

<p>然后设置别名</p>

<pre>
<code>nvm ls
#v0.12.7

nvm use 0.12.7
#Now using node v0.12.7

nvm alias default 0.12.7
#default -&gt; 0.12.7 (-&gt; v0.12.7)
</code></pre>

<p>如果之前通过<code>brew install node</code>方式安装过node，那么需要先删除系统中存在的node：</p>

<pre>
<code>brew remove --force node
sudo rm -r /usr/local/lib/node_modules

brew prune
sudo rm -r /usr/local/include/node

# 检查brew是否正常
brew doctor
</code></pre>

<h2>3. Hexo安装与设置</h2>

<p>Node, npm和Git都安装成功, 开始安装hexo</p>

<pre>
<code>npm install hexo -g  #-g表示全局安装, npm默认为当前项目安装
hexo version
</code></pre>

<p>如果遇到报错</p>

<pre>
<code>{ [Error: Cannot find module &#39;./build/Release/DTraceProviderBindings&#39;] code: &#39;MODULE_NOT_FOUND&#39; }
{ [Error: Cannot find module &#39;./build/default/DTraceProviderBindings&#39;] code: &#39;MODULE_NOT_FOUND&#39; }
{ [Error: Cannot find module &#39;./build/Debug/DTraceProviderBindings&#39;] code: &#39;MODULE_NOT_FOUND&#39; }
</code></pre>

<p>则用下列语句安装<br />
<code>npm install hexo --no-optional</code></p>

<p>Hexo使用命令:</p>

<pre>
<code>cd ~/git
hexo init hexo  #执行init命令初始化到你指定的hexo目录
cd hexo
npm install    #install before start blogging
hexo generate       #自动根据当前目录下文件,生成静态网页
hexo server         #运行本地服务
</code></pre>

<p>浏览器输入<a href="https://link.jianshu.com/?t=http://localhost:4000" rel="nofollow" target="_blank">http://localhost:4000</a>就可以看到效果。</p>

<p><strong>目录结构</strong></p>

<pre>
<code>.
├── .deploy       #需要部署的文件
├── node_modules  #Hexo插件
├── public        #生成的静态网页文件
├── scaffolds     #模板
├── source        #博客正文和其他源文件, 404 favicon CNAME 等都应该放在这里
|   ├── _drafts   #草稿
|   └── _posts    #文章
├── themes        #主题
├── _config.yml   #全局配置文件
└── package.json
</code></pre>

<h2>4. 添加博文</h2>

<pre>
<code>hexo new &quot;postName&quot;  #新建博文,其中postName是博文题目
</code></pre>

<p>博文会自动生成在博客目录下<code>source/_posts\postName.md</code></p>

<p>文件自动生成格式:</p>

<pre>
<code>title: &quot;It Starts with iGaze: Visual Attention Driven Networkingwith Smart Glasses&quot;  #博文题目
date: 2014-11-21 11:25:38      #生成时间
tags:                    #标签, 多个标签也可以使用格式[tag1, tag2, tag3,...]
- tag1
- tag2
- tag3
categories: [cat1,cat2,cat3]
---
正文, 使用 Markdown 语法书写

</code></pre>

<p>如果不想博文在首页全部显示, 并能出现阅读全文按钮效果, 需要在你想在首页显示的部分下添加</p>

<pre>
<code>&lt;!--more--&gt;
</code></pre>

<h2>5. 主题更改</h2>

<pre>
<code>cd ~/git/hexo
git clone git@github.com:litten/hexo-theme-yilia.git themes/yilia
</code></pre>

<p>在./_config.yml，修改主题为yilia<br />
<code>theme: yilia</code></p>

<p>Hexo<a href="https://link.jianshu.com/?t=https://github.com/hexojs/hexo/wiki/Themes" rel="nofollow" target="_blank">主题列表</a></p>

<p>另外推荐几个主题:<br />
<a href="https://link.jianshu.com/?t=https://github.com/iissnan/hexo-theme-next" rel="nofollow" target="_blank">iissnan/hexo-theme-next</a>&nbsp;<br />
<a href="https://link.jianshu.com/?t=https://github.com/TryGhost/Casper" rel="nofollow" target="_blank">TryGhost/Casper</a>&nbsp;<br />
<a href="https://link.jianshu.com/?t=https://github.com/kywk/hexo-theme-casper" rel="nofollow" target="_blank">kywk/hexo-theme-casper</a>&nbsp;#基于Casper<br />
<a href="https://link.jianshu.com/?t=https://github.com/daleanthony/uno" rel="nofollow" target="_blank">daleanthony/uno</a><br />
<a href="https://link.jianshu.com/?t=https://github.com/A-limon/pacman" rel="nofollow" target="_blank">A-limon/pacman</a>&nbsp;<br />
<a href="https://link.jianshu.com/?t=https://github.com/AlxMedia/hueman" rel="nofollow" target="_blank">AlxMedia/hueman</a>&nbsp;<br />
<a href="https://link.jianshu.com/?t=https://github.com/ppoffice/hexo-theme-hueman" rel="nofollow" target="_blank">ppoffice/hexo-theme-hueman</a>&nbsp;#基于Hueman<br />
<a href="https://link.jianshu.com/?t=https://github.com/xiangming/landscape-plus" rel="nofollow" target="_blank">xiangming/landscape-plus</a>&nbsp;#基于官方<br />
<a href="https://link.jianshu.com/?t=https://github.com/hexojs/hexo-theme-landscape" rel="nofollow" target="_blank">hexojs/hexo-theme-landscape</a></p>

<p>查看本地效果</p>

<pre>
<code>hexo g
hexo s
</code></pre>

<h2>6. 部署到Git</h2>

<p>以上内容都是在本地进行查看, 现在将博客部署到github或gitcafe上</p>

<h4>gitcafe</h4>

<p>打开./_config.yml，修改如下信息：</p>

<pre>
<code>type: git
repository: git@gitcafe.com:yourname/yourname.git
branch: gitcafe-pages
</code></pre>

<p>branch要提交到gitcafe-pages，然后才能在username.gitcafe.io中看到提交的页面。</p>

<h4>Github</h4>

<pre>
<code>deploy:
  type: github
  repo: https://github.com/lmintlcx/lmintlcx.github.io.git
  branch: master
</code></pre>

<p>项目主页需要把 branch 设置为 gh-pages</p>

<h4>注意事项</h4>

<ul>
	<li><strong>所有键的冒号后面留一个空格，如<code>language: zh-CN</code></strong></li>
	<li><strong>url不能为空,否则报错</strong></li>
	<li><code>type: github</code>报错<code>hexo ERROR Deployer not found: github</code>的解决方法：<br />
	先运行&nbsp;<code>npm install hexo-deployer-git --save</code>&nbsp;<br />
	再改为&nbsp;<code>type: git</code></li>
</ul>

<p>完整配置信息如下：</p>

<pre>
<code># Site #站点信息
title: blog Name #标题
subtitle: Subtitle #副标题
description: my blog desc #描述
author: me #作者
language: zh-CN #语言
timezone: Asia/Shanghai #时区
    
# URL
url: http://yoururl.com   #用于绑定域名, 其他的不需要配置
root: /
#permalink: :year/:month/:day/:title/
permalink: posts/title.html
permalink_defaults:
    
# Directory #目录
source_dir: source #源文件
public_dir: public #生成的网页文件
tag_dir: tags #标签
archive_dir: archives #归档
category_dir: categories #分类
code_dir: downloads/code
i18n_dir: :lang #国际化
skip_render:

# Writing #写作
new_post_name: :title.md #新文章标题
default_layout: post #默认模板(post page photo draft)
titlecase: false #标题转换成大写
external_link: true #新标签页里打开连接
filename_case: 0
render_drafts: false
post_asset_folder: false
relative_link: false
future: true
highlight: #语法高亮
  enable: true
  line_number: true #显示行号
  auto_detect: true
  tab_replace:

# Category &amp; Tag #分类和标签
default_category: uncategorized #默认分类
category_map:
tag_map:

# Date / Time format #日期时间格式
## http://momentjs.com/docs/#/displaying/format/
date_format: YYYY-MM-DD
time_format: HH:mm:ss

# Pagination #分页
per_page: 10 #每页文章数, 设置成 0 禁用分页
pagination_dir: page

# Extensions #插件和主题
## 插件: http://hexo.io/plugins/
## 主题: http://hexo.io/themes/
theme: next

# Deployment #部署, 同时发布在 GitHub 和 GitCafe 上面
deploy:
- type: git
  repo: git@gitcafe.com:username/username.git,gitcafe-pages
- type: git
  repo: git@github.com:username/username.github.io.git,master

# Disqus #Disqus评论系统
disqus_shortname: 

plugins: #插件，例如生成 RSS 和站点地图的
- hexo-generator-feed
- hexo-generator-sitemap
    
</code></pre>

<p>保存之后，便可以使用<code>hexo d</code>上传到GitCafe。<br />
部署成功,使用username.gitcafe.io进行访问, 或者设置个性域名，参考<a href="https://link.jianshu.com/?t=https://gitcafe.com/GitCafe/Help/wiki/Pages-%E7%9B%B8%E5%85%B3%E5%B8%AE%E5%8A%A9" rel="nofollow" target="_blank">官方Wiki</a>。</p>

<h2>7.域名</h2>

<ul>
	<li>
	<p>绑定域名<br />
	不绑定域名的话只能通过 your_user_name.github.io 访问<br />
	申请域名推荐&nbsp;<a href="https://link.jianshu.com/?t=https://www.godaddy.com/" rel="nofollow" target="_blank">GoDaddy</a>, 域名解析推荐&nbsp;<a href="https://link.jianshu.com/?t=https://www.dnspod.cn/Domain" rel="nofollow" target="_blank">DNSPod</a></p>
	</li>
	<li>
	<p>绑定顶级域名<br />
	新建文件 CNAME, 无后缀, 纯文本文件, 内容为要绑定的域名 blogname.com<br />
	如果要使用&nbsp;<a href="https://link.jianshu.com/?t=http://www.blogname.com" rel="nofollow" target="_blank">www.blogname.com</a>&nbsp;的形式, 文件内容改为&nbsp;<a href="https://link.jianshu.com/?t=http://www.blogname.com" rel="nofollow" target="_blank">www.blogname.com</a></p>
	</li>
</ul>

<p>DNS设置<br />
主机记录@, 类型A, 记录值192.30.252.153<br />
主机记录www, 类型A, 记录值192.30.252.153<br />
参考&nbsp;<a href="https://link.jianshu.com/?t=https://help.github.com/articles/tips-for-configuring-an-a-record-with-your-dns-provider" rel="nofollow" target="_blank">Tips for configuring an A record with your DNS provider</a></p>

<ul>
	<li>绑定子域名</li>
</ul>

<p>比如使用域名blogname.com的子域名blog.blogname.com<br />
CNAME文件内容为blog.blogname.com</p>

<p>DNS设置<br />
主机记录blog, 类型CNAME, 记录值blogname.github.io<br />
参考&nbsp;<a href="https://link.jianshu.com/?t=https://help.github.com/articles/tips-for-configuring-a-cname-record-with-your-dns-provider" rel="nofollow" target="_blank">Tips for configuring a CNAME record with your DNS provider</a></p>

<ul>
	<li>Gitcafe 绑定域名</li>
</ul>

<p>项目管理界面, 左侧的导航栏中有自定义域名设置</p>

<h2>8.其他配置</h2>

<p><strong>站点建立时间</strong>&nbsp;<br />
例如 &copy; 2014 - 2015</p>

<p>站点配置文件新增字段 since<br />
<code>since: 2014</code></p>

<p><strong>侧栏设置</strong><br />
post - 默认行为, 在文章页面(拥有目录列表)时显示<br />
always - 在所有页面中都显示<br />
hide - 在所有页面中都隐藏(可以手动展开)</p>

<p><code>sidebar: post</code></p>

<p><strong>头像设置</strong>&nbsp;<br />
编辑站点配置文件, 新增字段 avatar, 头像的链接地址可以是:</p>

<p>网络地址<br />
<code>https://avatars2.githubusercontent.com/u/4962914?v=3&amp;s=460</code></p>

<p>站点内的地址<br />
<code>/images/avatar.jpg #头像图片放置在主题的 source/images/</code></p>

<p><code>avatar: /images/avatar.png</code></p>

<p><strong>菜单设置</strong>&nbsp;<br />
编辑主题配置文件的 menu<br />
若站点运行在子目录中, 将链接前缀的 / 去掉</p>

<pre>
<code>menu:
  home: /
  archives: /archives
  categories: /categories
  tags: /tags
  commonweal: /404.html
  about: /about
</code></pre>

<p><strong>标签云页面</strong><br />
添加一个标签云页面, 并在菜单中显示页面链接</p>

<p>新建tags页面<br />
<code>hexo new page &ldquo;tags&rdquo;</code></p>

<p>将页面的类型设置为 tags</p>

<pre>
<code>title: tags
date: 2015-09-19 22:37:08
type: &quot;tags&quot;
---
</code></pre>

<p>关闭评论</p>

<pre>
<code>title: tags
date: 2015-09-19 22:37:08
type: &quot;tags&quot;
comments: false
---
</code></pre>

<p>在菜单中添加链接。 编辑主题配置文件, 添加 tags 到 menu 中</p>

<pre>
<code>menu:
  tags: /tags
</code></pre>

<p><strong>分类页面</strong><br />
添加一个分类页面, 并在菜单中显示页面链接</p>

<p>新建 categories 页面<br />
<code>hexo new page categories</code></p>

<p>将页面的类型设置为categories</p>

<pre>
<code>title: categories
date: 2015-09-19 22:38:00
type: &quot;categories&quot;
---
</code></pre>

<p>关闭评论</p>

<pre>
<code>title: categories
date: 2015-09-19 22:38:00
type: &quot;categories&quot;
comments: false
---
</code></pre>

<p>在菜单中添加链接. 编辑主题配置文件, 添加 categories 到 menu 中</p>

<pre>
<code>menu:
  categories: /categories
</code></pre>

<p><strong>RSS 链接</strong>&nbsp;<br />
编辑主题配置文件 rss 字段</p>

<p><code>rss: false</code><br />
禁用Feed链接</p>

<p><code>rss:</code>&nbsp;<br />
默认使用站点的 Feed 链接, 需要安装 hexo-generator-feed 插件<br />
浏览<a href="https://link.jianshu.com/?t=http://localhost:4000/atom.xml" rel="nofollow" target="_blank">http://localhost:4000/atom.xml</a>查看是否生效</p>

<p><code>rss: http://your-feed-url</code>&nbsp;<br />
指定特定的链接地址, 适用于已经烧制过 Feed 的情形</p>

<p><strong>自定义页面</strong>&nbsp;<br />
以关于页面为例<br />
新建一个 about 页面<br />
<code>hexo new page &quot;about&quot;</code></p>

<p>编辑 source/about/index.md：</p>

<pre>
<code>title: About
date: 2014-11-1 11:11:11
---
About Me
</code></pre>

<p>菜单显示 about 链接, 主题配置文件中将 menu 中 about 前面的注释去掉</p>

<pre>
<code>menu:
  about: /about
</code></pre>

<h2>9.网站代码上传</h2>

<p>设置完毕，为避免本地代码丢失，可以将hexo下的所有文件提交一份到服务器。</p>

<pre>
<code>#create project on gitcafe.com
mkdir hexo-source
cd hexo-source
git init
# copy all files in &#39;hexo&#39; folder here
git add ..
git commit -m &#39;first commit&#39;
git remote add origin &#39;git@gitcafe.com:username/hexo-source.git&#39;
git push -u origin master</code></pre>
