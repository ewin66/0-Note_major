<h1>maven项目中的报错问题</h1>

<h2>问题一：maven的java版本不符合</h2>

<h3>问题代码：Dynamic Web Module 3.0 requires Java 1.6 or newer</h3>

<p>当创建动态的web 3.0的项目时需要java1.6及以上的版本支持；</p>

<p>而我们的eclipse中创建的maven骨架默认是java1.5的版本，这种情况下就会报以下的错误：Dynamic Web Module 3.0 requires Java 1.6 or newer.</p>

<p>原因：</p>

<p>动态的web3.0,项目需要java1.6的版本，而maven默认创建的是java1.5的版本，所以会报这个错误；</p>

<p>解决方案：</p>

<p>1：在eclipse上安装jre：选中jdk的目录即可，需要1.6以上的版本；指定编译版本，1.6以上的版本</p>

<p>window-&gt;preference-&gt;java-&gt;compiler</p>

<p>window-&gt;preference-&gt;java-&gt;Installed JREs</p>

<p>2：指定项目的facet的java版本不能低于1.6版本；</p>

<p>右击项目-&gt;properties-&gt;MyEclipse-&gt;Project Facets-&gt;右侧选java</p>

<p>3：在maven 的pom.xml中指定maven项目的jdk运行版本</p>

<pre>
&lt;!-- 指定maven项目的编译时使用的jdk版本 --&gt;
</pre>

<p>&lt;plugin&gt; &nbsp;<br />
&nbsp; &nbsp; &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt; &nbsp;<br />
&nbsp; &nbsp; &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt; &nbsp;<br />
&nbsp; &nbsp; &lt;version&gt;2.3.2&lt;/version&gt; &nbsp;<br />
&nbsp; &nbsp; &nbsp; &nbsp; &lt;configuration&gt; &nbsp;<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;source&gt;1.7&lt;/source&gt; &nbsp;<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;target&gt;1.7&lt;/target&gt; &nbsp;<br />
&nbsp; &nbsp; &nbsp; &nbsp; &lt;/configuration&gt; &nbsp;<br />
&lt;/plugin&gt;</p>

<p>4：最后在选中该项目,单击maven&mdash;&mdash;&gt;updateproject即可；</p>

<p>&nbsp;</p>

<h2>问题二：<a href="http://www.cnblogs.com/finalstar/p/5947703.html">maven：使用mvn archetype:generate创建项目，停留在 &quot;Generating project in Batch mode&quot;</a></h2>

<p>在maven的<a href="https://maven.apache.org/guides/getting-started/maven-in-five-minutes.html">五分钟入门</a>里面，有这样一个命令：</p>

<pre>
<code>mvn archetype:generate -DgroupId=com.mycompany.app -DartifactId=my-app -DarchetypeArtifactId=maven-archetype-quickstart -DinteractiveMode=false</code></pre>

<p>这句话的命令是创建一个默认的项目，但我在执行这个命令时，命令行会停在</p>

<pre>
<code>[INFO] Generating project in Batch mode</code></pre>

<p>这句话会停很久，等足够久之后，会成功创建项目。【当然，也有人的一下就过去。】</p>

<p>增加一个-X参数，可以查看详细信息</p>

<pre>
<code>mvn archetype:generate -DgroupId=com.mycompany.app -DartifactId=my-app -DarchetypeArtifactId=maven-archetype-quickstart -DinteractiveMode=false -X</code></pre>

<p>可以看到，程序停在了下面这一行。</p>

<pre>
<code>[DEBUG] Searching for remote catalog: http://repo1.maven.org/maven2/archetype-catalog.xml</code></pre>

<p>去查询这个文件的时候网络比较差或者其他原因，导致挂在那里。</p>

<p>解决方法很简单。</p>

<pre>
<code>1. 把上述地址复制到浏览器中，下载这个文件到本地。
2. 把文件archetype-catalog.xml复制到目录.m2\repository\org\apache\maven\archetype\archetype-catalog\2.2下面。
3. 在上述命令后增加参数-DarchetypeCatalog=local，变成读取本地文件即可。</code>
</pre>

<p><code>下载文件&nbsp;archetype-catalog.xml 使用迅雷下：新建下载，然后贴路径！！别用浏览器开，慢死！！</code></p>

<p><code>https://repo.maven.apache.org/maven2/archetype-catalog.xml</code></p>

<h2><a href="http://www.cnblogs.com/hihtml5/p/6305804.html" id="cb_post_title_url">[Maven]archetypeCatalog笔记</a></h2>

<p>当我们使用maven原型生成项目骨架时，经常会在[INFO] Generating project in Interactive mode这个地方特别慢，这里并不是什么出错卡住的原因，你打开mvn的debug模式就可看到下面的信息：[DEBUG] Searching for remote catalog: http://repo.maven.apache.org/maven2/archet<em>ype-catalog.xml</em></p>

<p><em>他只是在寻找远程原型数据信息，而这个数据在外网并且还挺大，导致速度很慢，解决方式是我们手动下载这个archetype-catalog.xml文件到我们本地，把它放在.m2的目录下，.m2目录下也可以放置maven的配置文件，并且maven默认的本地仓库目录就在.m2的目录下面。.m2下面的maven配置文件比maven安装目录下的config目录下面的配置文件优先级高。因为.m2存在于当前用户的目录下，不同的用户有自己的maven配置习惯。</em></p>

<p><em>把archetype-catalog.xml放在.m2目录下后我们在使用mvn archetype:generate时在后面添加-DarchetypeCatalog=local 这时mvn会使用本地的原型数据来供你选择生成骨架的原型。</em></p>

<p><strong>archetypeCatalog</strong>用来指定maven-archetype-plugin读取archetype-catalog.xml文件的位置：</p>

<p>internal&mdash;&mdash;maven-archetype-plugin内置的</p>

<p>local&mdash;&mdash;本地的，位置为~/.m2/archetype-catalog.xml</p>

<p>remote&mdash;&mdash;指向Maven中央仓库的Catalog</p>

<p>file://</p>

<p>http://</p>

<p>&nbsp;</p>
