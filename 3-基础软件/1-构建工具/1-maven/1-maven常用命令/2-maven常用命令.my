<h1>maven常用命令</h1>

<h2>maven目录结构</h2>

<p>src/main/java :正式内容包路径<br />
src/mian/resources :正式的配置文件路径<br />
src/test/java :测试包路径<br />
src/test/resources :测试的配置文件路径<br />
src/main/webapp : war 资源目录</p>

<h2>本地仓库安装</h2>

<p>安装当前工程的输出文件到本地仓库: mvn install<br />
安装指定文件到本地仓库：mvn install:install-file -DgroupId=<groupId> -DartifactId=<artifactId> -Dversion=1.0.0 -Dpackaging=jar -Dfile=<myfile.jar></p>

<p>例如：mvn install:install-file -Dfile=D:\temp\jchmlib-0.5.4.jar -DgroupId=org.jchmlib -DartifactId=jchmlib -Dversion=0.5.4 -Dpackaging=jar</p>

<h2>模板及创建命令</h2>

<p>mvn archetype:generate [ > templates.txt ] 加中括号，输出模板列表到文件。</p>

<p>创建一个简单的Java工程：mvn archetype:generate -DgroupId=com.wang.ustc -DartifactId=TempGenerateJavapro -DarchetypeArtifactId=maven-archetype-quickstart -DinteractiveMode=false <em>这里DarchetypeArtifactId最好指定，不然会加载很多文件。</em></p>

<p>创建一个java的web工程：mvn archetype:create -DarchetypeGroupId=org.apache.maven.archetypes -DarchetypeArtifactId=maven-archetype-webapp -DgroupId=com.ustc.wang -DartifactId=TempGenerateJavaweb </p>

<h2>基本常用命令</h2>

<p>mvn help:system 自动在本用户下创建   ~/.m2/repository （修改setting文件可以修改该位置。）</p>

<p>编译：mvn compile<br />
编译测试程序：mvn test-compile</p>

<p>运行测试：mvn test<br />
跳过测试运行maven任务：mvn -Dmaven.test.skip=true XXX</p>

<p>打包：mvn package<br />
运行打包后文件：java -cp target/NumberGenerator-1.0-SNAPSHOT.jar[所含jar包] com.yiibai.App[含主方法的类]</p>

<p>mvn clean 清空<br />
mvn clean compile  清理编译<br />
mvn clean test  清理测试<br />
mvn clean package 清理打包<br />
mvn clean install  清理将打包好的jar存入 本地仓库  注意是本地仓库<br />
mvn clean deploy  根据pom中的配置信息将项目发布到远程仓库中 </p>

<h2>与IDE结合</h2>

<p>生成eclipse项目文件: mvn eclipse:eclipse<br />
清除eclipse项目结构: mvn eclipse:clean</p>

<h2>查看帮助信息</h2>

<p>查看帮助信息：mvn help:help 或 mvn help:help -Ddetail=true<br />
查看插件的帮助信息：mvn <plug-in>:help，比如：mvn dependency:help 或 mvn ant:help 等等。<br />
查看实际pom信息: mvn help:effective-pom</p>

<h2>优化依赖命令</h2>

<p>mvn dependency:list   显示所有已经解析的所有依赖<br />
mvn dependency:tree  以目录树的形式展现依赖,  最高层为一层依赖 其次二层依赖 三层依赖....<br />
mvn dependency:analyze  第一部分显示 已经使用但是未显示依赖的的  第二部分显示项目未使用的但是依赖的<br />
 </p>
