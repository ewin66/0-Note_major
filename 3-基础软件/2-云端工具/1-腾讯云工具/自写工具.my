<h1>腾讯云COS上传、批量删除工具(Python)</h1>

<p><small>时间:</small>2017-04-01 11:21<small>来源:</small>Linux运维笔记&nbsp;<small>编辑:</small>yeho&nbsp;<small>点击:</small>&nbsp;次</p>

<p>腾讯云对象存储COS是类似于阿里云OSS，相比OSS，COS提供每月免费额度：存储空间50G、外网访问流量10G（内网免费）、免费读请求100万次、写请求10万次。对网站备份来说不错，但是，腾</p>

<p>腾讯云对象存储COS是类似于阿里云OSS，相比OSS，COS提供每月免费额度：存储空间50G、外网访问流量10G（内网免费）、免费读请求100万次、写请求10万次。对网站备份来说不错，但是，腾讯云提供的工具太low，参考阿里云OSS，写了一个cos信息配置、创建目录、上传、批量删除工具（coscmd）</p>

<p>安装Python2.7</p>

<p>此工具在Python2.7上测试通过，建议用《<a href="https://blog.linuxeye.cn/wp-content/themes/begin/inc/go.php?url=https://oneinstack.com" target="_blank">OneinStack</a>》安装Python2.7，安装路径为:/usr/local/python，命令如下：</p>

<ol start="1">
	<li>cd&nbsp;~/oneinstack</li>
	<li>./addons.sh&nbsp;#选择7，install&nbsp;Let&#39;s&nbsp;Encrypt&nbsp;client</li>
</ol>

<p>配置COS</p>

<p>登陆腾讯云管理后台<a href="https://blog.linuxeye.cn/wp-content/themes/begin/inc/go.php?url=https://console.qcloud.com/cos/bucket" target="_blank">https://console.qcloud.com/cos/bucket</a>创建bucket，并获取API密钥，在下面配置中一一对应。</p>

<ol start="1">
	<li>cd&nbsp;oneinstack/tools&nbsp;#必须进入该目录执行</li>
	<li>wget&nbsp;http://mirrors.linuxeye.com/oneinstack/tools/cos.tgz</li>
	<li>tar&nbsp;xzf&nbsp;cos.tgz</li>
	<li>/usr/local/python/bin/python&nbsp;./coscmd&nbsp;config&nbsp;--appid=[appid]&nbsp;--id=[secret_id]&nbsp;--key=[secret_key]&nbsp;--bucket=[bucket]</li>
</ol>

<p><img alt="" src="http://blog.linuxeye.cn/wp-content/uploads/2017/03/coscmd_configure.png" title="" /></p>

<p>执行后会将相关信息写到~/.coscredentials，执行其它动作会自动加在改配置。</p>

<p>创建目录</p>

<p><img alt="" src="http://blog.linuxeye.cn/wp-content/uploads/2017/03/coscmd_mkdir.png" title="" /></p>

<p>上传文件</p>

<p><img alt="" src="http://blog.linuxeye.cn/wp-content/uploads/2017/03/coscmd_put.png" title="" /></p>

<p>批量删除</p>

<p><img alt="" src="http://www.linuxeye.com/uploads/allimg/170401/1-1F401112154616.png" title="" /></p>

<p>coscmd代码(coscmd)</p>

<p>&nbsp;</p>

<ol start="1">
	<li>#!/usr/bin/env&nbsp;python</li>
	<li>#coding:utf-8</li>
	<li>&nbsp;</li>
	<li>import&nbsp;sys,os</li>
	<li>import&nbsp;datetime</li>
	<li>import&nbsp;random</li>
	<li>import&nbsp;threading</li>
	<li>import&nbsp;time</li>
	<li>import&nbsp;datetime</li>
	<li>import&nbsp;logging</li>
	<li>import&nbsp;ConfigParser</li>
	<li>from&nbsp;optparse&nbsp;import&nbsp;OptionParser</li>
	<li>from&nbsp;logging.handlers&nbsp;import&nbsp;RotatingFileHandler</li>
	<li>from&nbsp;time&nbsp;import&nbsp;strftime,&nbsp;localtime</li>
	<li>from&nbsp;time&nbsp;import&nbsp;sleep</li>
	<li>from&nbsp;datetime&nbsp;import&nbsp;date</li>
	<li>from&nbsp;datetime&nbsp;import&nbsp;timedelta</li>
	<li>from&nbsp;cos&nbsp;import&nbsp;CosClient</li>
	<li>from&nbsp;cos&nbsp;import&nbsp;UploadFileRequest</li>
	<li>from&nbsp;cos&nbsp;import&nbsp;CreateFolderRequest</li>
	<li>from&nbsp;cos&nbsp;import&nbsp;DelFileRequest</li>
	<li>from&nbsp;cos&nbsp;import&nbsp;DelFolderRequest</li>
	<li>from&nbsp;cos&nbsp;import&nbsp;ListFolderRequest</li>
	<li>from&nbsp;cos&nbsp;import&nbsp;threadpool</li>
	<li>&nbsp;</li>
	<li>MAX_RETRY_TIMES&nbsp;=&nbsp;3</li>
	<li>LOG_SAVE_EVERY_NUM&nbsp;=&nbsp;1024</li>
	<li>ONE_TASK_DEL_FILE_NUMS&nbsp;=&nbsp;50</li>
	<li>log_level=1</li>
	<li>log_file_name=&quot;del_file.log&quot;</li>
	<li>dir_thread_num=2</li>
	<li>file_thread_num=5</li>
	<li>delete_folder_fail_exist=0</li>
	<li>&nbsp;</li>
	<li>CONFIGFILE&nbsp;=&nbsp;&quot;%s/.coscredentials&quot;&nbsp;%&nbsp;os.path.expanduser(&#39;~&#39;)</li>
	<li>CONFIGSECTION&nbsp;=&nbsp;&#39;COSCredentials&#39;</li>
	<li>&nbsp;</li>
	<li>HELP&nbsp;=&nbsp;\</li>
	<li>&#39;&#39;&#39;coscmd:</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;config &nbsp; &nbsp; &nbsp; --appid=[appid]&nbsp;--id=[secret_id]&nbsp;--key=[secret_key]&nbsp;--bucket=[bucket]&nbsp;</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;ls&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cosdir</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;mkdir &nbsp; &nbsp; &nbsp; dirname</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;put &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;localfile&nbsp;&nbsp;cosdir&nbsp;</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;rm(delete,del)&nbsp;object</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&#39;&#39;&#39;</li>
	<li>&nbsp;</li>
	<li>CMD_LIST&nbsp;=&nbsp;{}</li>
	<li>def&nbsp;cmd_configure(args,&nbsp;options):</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;options.appid&nbsp;is&nbsp;None&nbsp;or&nbsp;options.secret_id&nbsp;is&nbsp;None&nbsp;or&nbsp;options.secret_key&nbsp;is&nbsp;None&nbsp;or&nbsp;options.bucket&nbsp;is&nbsp;None:</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(&quot;%s&nbsp;miss&nbsp;parameters,&nbsp;use&nbsp;--appid=[appid]&nbsp;--id=[secret_id]&nbsp;--key=[secret_key]&nbsp;--bucket=[bucket]&nbsp;to&nbsp;specify&nbsp;appid/id/key/bucket&nbsp;pair&quot;&nbsp;%&nbsp;args[0])</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sys.exit(-1)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;config&nbsp;=&nbsp;ConfigParser.RawConfigParser()</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;config.add_section(CONFIGSECTION)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;config.set(CONFIGSECTION,&nbsp;&#39;appid&#39;,&nbsp;options.appid)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;config.set(CONFIGSECTION,&nbsp;&#39;secret_id&#39;,&nbsp;options.secret_id)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;config.set(CONFIGSECTION,&nbsp;&#39;secret_key&#39;,&nbsp;options.secret_key)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;config.set(CONFIGSECTION,&nbsp;&#39;bucket&#39;,&nbsp;options.bucket)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;cfgfile&nbsp;=&nbsp;open(CONFIGFILE,&nbsp;&#39;w+&#39;)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;config.write(cfgfile)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;print(&quot;Your&nbsp;configuration&nbsp;is&nbsp;saved&nbsp;into&nbsp;%s&nbsp;.&quot;&nbsp;%&nbsp;CONFIGFILE)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;cfgfile.close()</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;import&nbsp;stat</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;os.chmod(CONFIGFILE,&nbsp;stat.S_IREAD&nbsp;|&nbsp;stat.S_IWRITE)</li>
	<li>&nbsp;</li>
	<li>def&nbsp;cmd_loadconfigure():</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;config&nbsp;=&nbsp;ConfigParser.ConfigParser()</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;config.read(CONFIGFILE)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;global&nbsp;appid</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;global&nbsp;secret_id</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;global&nbsp;secret_key</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;global&nbsp;bucket</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;appid&nbsp;=&nbsp;int(config.get(CONFIGSECTION,&nbsp;&#39;appid&#39;))</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;secret_id&nbsp;=&nbsp;config.get(CONFIGSECTION,&nbsp;&#39;secret_id&#39;).decode(&#39;utf-8&#39;)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;secret_key&nbsp;=&nbsp;config.get(CONFIGSECTION,&nbsp;&#39;secret_key&#39;).decode(&#39;utf-8&#39;)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;bucket&nbsp;=&nbsp;config.get(CONFIGSECTION,&nbsp;&#39;bucket&#39;).decode(&#39;utf-8&#39;)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;len(secret_id)&nbsp;==&nbsp;0&nbsp;or&nbsp;len(secret_key)&nbsp;==&nbsp;0&nbsp;or&nbsp;len(bucket)&nbsp;==&nbsp;0:</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(&quot;can&#39;t&nbsp;get&nbsp;appid/secret_id/secret_key/bucket,&nbsp;setup&nbsp;use&nbsp;:&nbsp;config&nbsp;--appid=[appid]&nbsp;--id=[secret_id]&nbsp;--key=[secret_key]&nbsp;--bucket=[bucket]&quot;)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sys.exit(1)</li>
	<li>&nbsp;</li>
	<li>def&nbsp;cmd_lsdir(COSDIR):</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;cosdir&nbsp;=&nbsp;COSDIR.decode(&#39;utf-8&#39;)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;request&nbsp;=&nbsp;ListFolderRequest(bucket,&nbsp;cosdir)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;list_folder_ret&nbsp;=&nbsp;cos_client.list_folder(request)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;list_folder_ret[u&#39;code&#39;]&nbsp;==&nbsp;0:</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(True)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;else:</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(&quot;%s,&nbsp;appid/secret_id/secret_key/bucket&nbsp;invalid&quot;%&nbsp;list_folder_ret[u&#39;message&#39;])</li>
	<li>&nbsp;</li>
	<li>def&nbsp;cmd_mkdir(COSDIR):</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;cosdir&nbsp;=&nbsp;COSDIR.decode(&#39;utf-8&#39;)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;request&nbsp;=&nbsp;CreateFolderRequest(bucket,&nbsp;cosdir)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;create_folder_ret&nbsp;=&nbsp;cos_client.create_folder(request)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;create_folder_ret[u&#39;code&#39;]&nbsp;==&nbsp;0:</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(&quot;mkdir&nbsp;cos://%s%s&nbsp;OK&quot;&nbsp;%&nbsp;(bucket,COSDIR))</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;else:</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(create_folder_ret[u&#39;message&#39;])</li>
	<li>&nbsp;</li>
	<li>def&nbsp;cmd_put(LOCALFILE,COSFILE):</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;localfile&nbsp;=&nbsp;LOCALFILE.decode(&#39;utf-8&#39;)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;cosfile&nbsp;=&nbsp;COSFILE.decode(&#39;utf-8&#39;)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;request&nbsp;=&nbsp;UploadFileRequest(bucket,&nbsp;cosfile,&nbsp;localfile)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;request.set_insert_only(0)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;upload_file_ret&nbsp;=&nbsp;cos_client.upload_file(request)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;upload_file_ret[u&#39;code&#39;]&nbsp;==&nbsp;0:</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(&quot;put&nbsp;cos://%s%s&nbsp;OK&quot;&nbsp;%&nbsp;(bucket,COSFILE))</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;else:</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(upload_file_ret[u&#39;message&#39;])</li>
	<li>&nbsp;</li>
	<li>def&nbsp;loginit():</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(log_file_name&nbsp;==&nbsp;&quot;&quot;):</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;log_level&nbsp;=&nbsp;logging.ERROR</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;log_level&nbsp;==&nbsp;0:</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;log_level&nbsp;=&nbsp;logging.DEBUG</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;log_level&nbsp;==&nbsp;1:</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;log_level&nbsp;=&nbsp;logging.INFO</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;log_level&nbsp;==&nbsp;2:</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;log_level&nbsp;=&nbsp;logging.WARNING</li>
	<li>&nbsp;</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;#定义一个RotatingFileHandler，最多备份5个日志文件，每个日志文件最大20M</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;logger&nbsp;=&nbsp;logging.getLogger(&quot;&quot;)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;Rthandler&nbsp;=&nbsp;RotatingFileHandler(log_file_name,&nbsp;maxBytes=&nbsp;20*1024*1024,backupCount=5)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;Rthandler.setLevel(log_level)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;formatter&nbsp;=&nbsp;logging.Formatter(&#39;%(asctime)s&nbsp;%(levelname)s&nbsp;%(message)s&#39;)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;Rthandler.setFormatter(formatter)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;logger.addHandler(Rthandler)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;logger.setLevel(log_level)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;logger</li>
	<li>&nbsp;</li>
	<li>#日期相关操作</li>
	<li>class&nbsp;Dateop():</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;@staticmethod</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;isValidDate(str):</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try:</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;time.strptime(str,&nbsp;&quot;%Y&quot;&quot;%m&quot;&quot;%d&quot;)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;True</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;except:</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;False</li>
	<li>&nbsp;</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;@staticmethod</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;getdaystr(n=0):</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dt&nbsp;=&nbsp;date.today()-timedelta(days=n)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tt&nbsp;=&nbsp;dt.timetuple()</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;daystr&nbsp;=&nbsp;strftime(&quot;%Y&quot;&quot;%m&quot;&quot;%d&quot;,tt)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;daystr</li>
	<li>&nbsp;</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;@staticmethod</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;cmpDateAgo(t1,t2):</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(Dateop.isValidDate(t1)==False&nbsp;or&nbsp;Dateop.isValidDate(t2)==False):</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;False</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(int(t1)&nbsp;&lt;=&nbsp;int&nbsp;(t2)):</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;True</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;False</li>
	<li>&nbsp;</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;@staticmethod</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;isNeedDeleteDir(dirname,&nbsp;n=0):</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(len(dirname)&nbsp;!=&nbsp;8):</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;False</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;Dateop.isValidDate(dirname)&nbsp;==&nbsp;False:</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;False</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d2&nbsp;=&nbsp;Dateop.getdaystr(n);</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;Dateop.cmpDateAgo(dirname,&nbsp;d2):</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;True</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;False</li>
	<li>#删除文件统计</li>
	<li>class&nbsp;FileStat():</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;global&nbsp;cos_log</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;__init__(self):</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.delfilesuccnum&nbsp;=&nbsp;0</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.deldirsuccnum&nbsp;=&nbsp;0</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.delfilefailnum&nbsp;=&nbsp;0</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.deldirfailnum&nbsp;=&nbsp;0</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.lock&nbsp;=&nbsp;threading.Lock()</li>
	<li>&nbsp;</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;addDelFileFailNum(self,num=1):</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.lock.acquire(1)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.delfilefailnum&nbsp;+=&nbsp;num</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.lock.release()</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;addDelDirFailNum(self,num=1):</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.lock.acquire(1)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.deldirfailnum&nbsp;+=&nbsp;num</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.lock.release()</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;addDelDirSuccNum(self,&nbsp;num=1):</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.lock.acquire(1)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.deldirsuccnum&nbsp;+=&nbsp;num</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.lock.release()</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;addDelFileSuccNum(self,&nbsp;num=1):</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.lock.acquire(1)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.delfilesuccnum&nbsp;+=&nbsp;num</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.lock.release()</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;printStat(self):</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;msg&nbsp;=&quot;&quot;.join([&quot;delfilesuccnum=&quot;,str(self.delfilesuccnum),</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;,delfilefailnum=&quot;,str(self.delfilefailnum),</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;,deldirsuccnum=&quot;,str(self.deldirsuccnum),</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;,deldirfailnum=&quot;,str(self.deldirfailnum)])</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(msg)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;logStat(self):</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;curtime&nbsp;=&nbsp;time.strftime(&quot;%Y-%m-%d&nbsp;%H:%M:%S&quot;,&nbsp;time.localtime())</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;log&nbsp;=&nbsp;&#39;&#39;.join([&quot;delfilenum=&quot;,str(self.delfilesuccnum),</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;,deldirnum=&quot;,str(self.deldirsuccnum),&quot;,delfilefailnum=&quot;,</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;str(self.delfilefailnum),&quot;,deldirfailnum=&quot;,str(self.deldirfailnum)])</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cos_log.info(log)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(log)</li>
	<li>&nbsp;</li>
	<li>#执行时间统计</li>
	<li>class&nbsp;TimeStat(object):</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;global&nbsp;cos_log</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;__init__(self):</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.start()</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;start(self):</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.start&nbsp;=&nbsp;datetime.datetime.now()</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.t1&nbsp;=&nbsp;time.time()</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;msg&nbsp;=&nbsp;&quot;delete&nbsp;task&nbsp;started&nbsp;&nbsp;...........&quot;</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(msg)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cos_log.info(msg)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;end(self):</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.end&nbsp;=&nbsp;datetime.datetime.now()</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.t2&nbsp;=&nbsp;time.time()</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;msg&nbsp;=&nbsp;&quot;delete&nbsp;task&nbsp;ended\n\nrm&nbsp;task&nbsp;finished,\ntimecost:&quot;+str(self.t2-self.t1)&nbsp;+&nbsp;&quot;&nbsp;(s)&quot;</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(msg)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cos_log.info(msg)</li>
	<li>&nbsp;</li>
	<li>#删除文件列表中的文件</li>
	<li>def&nbsp;delfiles(cos_client,&nbsp;bucket,&nbsp;filelist):</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;f&nbsp;in&nbsp;filelist:</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delfile(cos_client,&nbsp;bucket,&nbsp;f)</li>
	<li>&nbsp;</li>
	<li>#文件夹删除</li>
	<li>def&nbsp;delfolder(cos_client,&nbsp;bucket,&nbsp;folder):</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;global&nbsp;stat</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;global&nbsp;cos_log</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;not&nbsp;folder:</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;0</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;delfolderreq&nbsp;=&nbsp;DelFolderRequest(bucket,&nbsp;folder)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;retry&nbsp;=&nbsp;0</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;while&nbsp;(retry&nbsp;&lt;&nbsp;MAX_RETRY_TIMES):</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ret&nbsp;=&nbsp;cos_client.del_folder(delfolderreq)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;msg&nbsp;=&nbsp;&quot;delfolder&nbsp;fail,&nbsp;bucket=&quot;+bucket+&quot;,folder=&quot;+folder+ret[&#39;message&#39;]</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(ret[&#39;code&#39;]&nbsp;==&nbsp;0):</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;elif&nbsp;(ret[&#39;code&#39;]&nbsp;==&nbsp;-166):</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cos_log.warning(msg)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#操作太频繁,频控</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;elif&nbsp;(ret[&#39;code&#39;]&nbsp;==&nbsp;-71):</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sleep(random.randint(1,5))</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cos_log.warning(msg)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(msg)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;retry&nbsp;+=&nbsp;1</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;continue</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#文件夹非空</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;elif&nbsp;(ret[&#39;code&#39;]&nbsp;==&nbsp;-173):</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else:</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cos_log.warning(msg)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;retry&nbsp;+=&nbsp;1</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(ret[&#39;code&#39;]&nbsp;!=&nbsp;0&nbsp;and&nbsp;&nbsp;ret[&#39;code&#39;]&nbsp;!=&nbsp;-166):</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stat.addDelDirFailNum()</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cos_log.error(&quot;delfolder&nbsp;fail,&nbsp;bucket=&quot;+bucket+&quot;,folder=&quot;+folder+ret[&#39;message&#39;])</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;ret[&#39;code&#39;]</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(ret[&#39;code&#39;]&nbsp;==&nbsp;0):</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stat.addDelDirSuccNum()</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;msg&nbsp;=&nbsp;&quot;delfolder&nbsp;success,&nbsp;bucket=&quot;+bucket+&quot;,folder=&quot;+folder</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cos_log.info(msg)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(msg)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;0</li>
	<li>&nbsp;</li>
	<li>#文件删除</li>
	<li>def&nbsp;delfile(cos_client,&nbsp;bucket,&nbsp;filepath):</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;global&nbsp;stat</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;global&nbsp;cos_log</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;delfilereq&nbsp;=&nbsp;DelFileRequest(bucket,&nbsp;filepath)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;retry&nbsp;=&nbsp;0</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;while&nbsp;(retry&nbsp;&lt;&nbsp;MAX_RETRY_TIMES):</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ret&nbsp;=&nbsp;cos_client.del_file(delfilereq)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;msg&nbsp;=&nbsp;&quot;delfile&nbsp;fail&nbsp;bucket=&quot;+bucket+&quot;,file=&quot;+filepath+ret[&#39;message&#39;]</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(ret[&#39;code&#39;]&nbsp;==&nbsp;0):</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#文件不存在</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;elif&nbsp;(ret[&#39;code&#39;]&nbsp;==&nbsp;-166):</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cos_log.warning(msg)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#单目录写操作过快</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;elif&nbsp;(ret[&#39;code&#39;]&nbsp;==&nbsp;-143):</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sleep(random.randint(1,5))</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cos_log.warning(msg)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(msg)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;retry&nbsp;+=&nbsp;1</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;continue</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#操作太频繁,频控</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;elif&nbsp;(ret[&#39;code&#39;]&nbsp;==&nbsp;-71):</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sleep(random.randint(1,5))</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cos_log.warning(msg)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(msg)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;retry&nbsp;+=&nbsp;1</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;continue</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else:</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cos_log.warning(msg)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;retry&nbsp;+=&nbsp;1</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;continue</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(ret[&#39;code&#39;]&nbsp;!=&nbsp;0&nbsp;and&nbsp;&nbsp;ret[&#39;code&#39;]&nbsp;!=&nbsp;-166):</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stat.addDelFileFailNum()</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cos_log.error(&quot;delfile&nbsp;fail,&nbsp;bucket=&quot;+bucket+&quot;,file=&quot;+filepath+ret[&#39;message&#39;])</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;ret[&#39;code&#39;]</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(ret[&#39;code&#39;]&nbsp;==&nbsp;0):</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stat.addDelFileSuccNum()</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;msg&nbsp;=&nbsp;&quot;delfile&nbsp;success,&nbsp;bucket=&quot;+bucket+&quot;,file=&quot;+filepath</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cos_log.info(msg)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(msg)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;0</li>
	<li>&nbsp;</li>
	<li>#递归文件夹进行文件删除</li>
	<li>def&nbsp;delete_r(cos_client,&nbsp;bucket,&nbsp;path,&nbsp;thread_pool_file):</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;global&nbsp;stat</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;global&nbsp;cos_log</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;cos_log.debug(&quot;delete_r&nbsp;bucket:&quot;+bucket+&quot;,path:&quot;+path)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;context&nbsp;=&nbsp;&quot;&quot;</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;#递归文件夹</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;while&nbsp;True:</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;listfolderreq&nbsp;=&nbsp;ListFolderRequest(bucket,&nbsp;path,199,u&#39;eListDirOnly&#39;)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;retry&nbsp;=&nbsp;0</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while&nbsp;(retry&nbsp;&lt;&nbsp;MAX_RETRY_TIMES):</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;listret&nbsp;=&nbsp;cos_client.list_folder(listfolderreq)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;listret[&#39;code&#39;]&nbsp;!=&nbsp;0&nbsp;:</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;retry&nbsp;+=&nbsp;1</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sleep(random.randint(1,5))</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;continue</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else:</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(listret[&#39;code&#39;]&nbsp;!=&nbsp;0):</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cos_log.error(&quot;delete_r:&nbsp;list&nbsp;folder&nbsp;fail:&quot;+path&nbsp;+&quot;,return&nbsp;msg:&quot;+&nbsp;listret[&#39;message&#39;])</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;listret[&#39;code&#39;]</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(len(listret[&#39;data&#39;][&#39;infos&#39;])&nbsp;==&nbsp;0):</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;info&nbsp;in&nbsp;listret[&#39;data&#39;][&#39;infos&#39;]:</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fullname&nbsp;=&nbsp;path&nbsp;+&nbsp;info[&#39;name&#39;]&nbsp;+&nbsp;u&#39;/&#39;</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#当指示为False的时候不用比较,否则该标识一直递归传递下去</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ret&nbsp;=&nbsp;delete_r(cos_client,&nbsp;bucket,&nbsp;fullname,&nbsp;thread_pool_file)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#当设置&quot;删除失败不退出标志时&quot;,程序继续进行删除操作</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(ret&nbsp;!=&nbsp;0&nbsp;and&nbsp;delete_fail_exist&nbsp;==&nbsp;1):</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;ret</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(listret[&#39;data&#39;][&#39;has_more&#39;]&nbsp;==&nbsp;True):</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;context&nbsp;=&nbsp;listret[&#39;data&#39;][&#39;context&#39;]</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;continue</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else:</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;#本文件夹不删则不用list本文件夹的文件列表</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;while&nbsp;True:</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;listfilereq&nbsp;=&nbsp;ListFolderRequest(bucket,&nbsp;path,199,u&#39;eListFileOnly&#39;)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;retry&nbsp;=&nbsp;0</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while&nbsp;(retry&nbsp;&lt;&nbsp;MAX_RETRY_TIMES):</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;listret&nbsp;=&nbsp;cos_client.list_folder(listfilereq)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;listret[&#39;code&#39;]&nbsp;!=&nbsp;0&nbsp;:</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;retry&nbsp;+=&nbsp;1</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sleep(random.randint(1,5))</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;continue</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else:</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(listret[&#39;code&#39;]&nbsp;!=&nbsp;0):</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cos_log.error(&quot;delete_r:&nbsp;list&nbsp;file&nbsp;fail:&quot;+path&nbsp;+&quot;,return&nbsp;msg:&quot;+&nbsp;listret[&#39;message&#39;])</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;listret[&#39;code&#39;]</li>
	<li>&nbsp;</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(len(listret[&#39;data&#39;][&#39;infos&#39;])&nbsp;==&nbsp;0):</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</li>
	<li>&nbsp;</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;filelist&nbsp;=&nbsp;[]</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;info&nbsp;in&nbsp;listret[&#39;data&#39;][&#39;infos&#39;]:</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fullname&nbsp;=&nbsp;path&nbsp;+&nbsp;info[&#39;name&#39;]</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;filelist.append(fullname)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(len(filelist)&nbsp;==&nbsp;ONE_TASK_DEL_FILE_NUMS):</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;args&nbsp;=&nbsp;[cos_client,&nbsp;bucket,&nbsp;filelist]</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;args_tuple&nbsp;=&nbsp;(args,None)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;args_list&nbsp;=&nbsp;[args_tuple]</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;requests&nbsp;=&nbsp;threadpool.makeRequests(delfiles,&nbsp;args_list)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;req&nbsp;in&nbsp;requests:</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;thread_pool_file.putRequest(req)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;filelist&nbsp;=&nbsp;[]</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;continue</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(len(filelist)&nbsp;&gt;&nbsp;0):</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;args&nbsp;=&nbsp;[cos_client,&nbsp;bucket,&nbsp;filelist]</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;args_tuple&nbsp;=&nbsp;(args,None)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;args_list&nbsp;=&nbsp;[args_tuple]</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;requests&nbsp;=&nbsp;threadpool.makeRequests(delfiles,&nbsp;args_list)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;req&nbsp;in&nbsp;requests:</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;thread_pool_file.putRequest(req)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;filelist&nbsp;=&nbsp;[]</li>
	<li>&nbsp;</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cos_log.debug(&quot;delete_r&nbsp;thread&nbsp;pool&nbsp;file&nbsp;waiting\n&quot;)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;thread_pool_file.wait()</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cos_log.debug(&quot;delete_r&nbsp;thread&nbsp;pool&nbsp;file&nbsp;waiting&nbsp;end\n&quot;)</li>
	<li>&nbsp;</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(listret[&#39;data&#39;][&#39;has_more&#39;]&nbsp;==&nbsp;True):</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;continue</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else:</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;#删除本文件夹(上面已经删除子文件夹及子文件)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(path&nbsp;!=&nbsp;u&quot;/&quot;):</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ret&nbsp;=&nbsp;delfolder(cos_client,bucket,&nbsp;path)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#当设置&quot;删除失败不退出标志时&quot;,程序继续进行删除操作</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(ret&nbsp;!=&nbsp;0&nbsp;and&nbsp;delete_folder_fail_exist&nbsp;==&nbsp;1):</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;ret</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;stat.logStat()</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;0</li>
	<li>&nbsp;</li>
	<li>def&nbsp;cmd_rm(COSDIR):</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;global&nbsp;thread_pool</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;global&nbsp;cos_log</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;global&nbsp;stat</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;cos_log&nbsp;=&nbsp;loginit()</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;stat&nbsp;=&nbsp;FileStat()</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;timestat&nbsp;=&nbsp;TimeStat()</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;path&nbsp;=&nbsp;COSDIR.decode(&#39;utf-8&#39;)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;thread_pool_dir&nbsp;=&nbsp;threadpool.ThreadPool(dir_thread_num)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;thread_pool_file&nbsp;=&nbsp;threadpool.ThreadPool(file_thread_num)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;cos_log.debug(&quot;bucket:&quot;+bucket&nbsp;+&quot;,path:&quot;+path)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;args&nbsp;=&nbsp;[cos_client,&nbsp;bucket,&nbsp;path,&nbsp;thread_pool_file]</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;args_tuple&nbsp;=&nbsp;(args,&nbsp;None)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;args_list&nbsp;=&nbsp;[args_tuple]</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;requests&nbsp;=&nbsp;threadpool.makeRequests(delete_r,&nbsp;args_list)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;req&nbsp;in&nbsp;requests:</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;thread_pool_dir.putRequest(req)</li>
	<li>&nbsp;</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;cos_log.debug(&quot;thread_pool_dir&nbsp;waiting.....\n&quot;)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;thread_pool_dir.wait()</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;thread_pool_dir.dismissWorkers(dir_thread_num,&nbsp;True)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;cos_log.debug(&quot;thread_pool_dir&nbsp;wait&nbsp;end.....\n&quot;)</li>
	<li>&nbsp;</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;timestat.end()</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;stat.logStat()</li>
	<li>&nbsp;</li>
	<li>if&nbsp;sys.argv[1]&nbsp;in&nbsp;[&#39;config&#39;,&#39;ls&#39;,&#39;mkdir&#39;,&#39;put&#39;,&#39;rm&#39;,&#39;delete&#39;,&#39;del&#39;]&nbsp;and&nbsp;len(sys.argv)&nbsp;&gt;=&nbsp;3:</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;sys.argv[1]&nbsp;==&nbsp;&#39;config&#39;:</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parser&nbsp;=&nbsp;OptionParser()</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parser.add_option(&quot;-a&quot;,&nbsp;&quot;--appid&quot;,&nbsp;dest=&quot;appid&quot;,&nbsp;help=&quot;specify&nbsp;appid&quot;)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parser.add_option(&quot;-i&quot;,&nbsp;&quot;--id&quot;,&nbsp;dest=&quot;secret_id&quot;,&nbsp;help=&quot;specify&nbsp;secret&nbsp;id&quot;)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parser.add_option(&quot;-k&quot;,&nbsp;&quot;--key&quot;,&nbsp;dest=&quot;secret_key&quot;,&nbsp;help=&quot;specify&nbsp;secret&nbsp;key&quot;)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parser.add_option(&quot;-b&quot;,&nbsp;&quot;--bucket&quot;,&nbsp;dest=&quot;bucket&quot;,&nbsp;help=&quot;specify&nbsp;bucket&quot;)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(options,&nbsp;args)&nbsp;=&nbsp;parser.parse_args()</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CMD_LIST[&#39;config&#39;]&nbsp;=&nbsp;cmd_configure</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CMD_LIST[&#39;config&#39;](args,&nbsp;options)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;sys.argv[1]&nbsp;==&nbsp;&#39;ls&#39;:</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cmd_loadconfigure()</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cos_client&nbsp;=&nbsp;CosClient(appid,&nbsp;secret_id,&nbsp;secret_key)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;COSDIR&nbsp;=&nbsp;sys.argv[2]</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cmd_lsdir(COSDIR)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;sys.argv[1]&nbsp;==&nbsp;&#39;mkdir&#39;:</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cmd_loadconfigure()</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cos_client&nbsp;=&nbsp;CosClient(appid,&nbsp;secret_id,&nbsp;secret_key)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;COSDIR&nbsp;=&nbsp;sys.argv[2]</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cmd_mkdir(COSDIR)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;sys.argv[1]&nbsp;==&nbsp;&#39;put&#39;&nbsp;and&nbsp;len(sys.argv)&nbsp;==&nbsp;4:</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cmd_loadconfigure()</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cos_client&nbsp;=&nbsp;CosClient(appid,&nbsp;secret_id,&nbsp;secret_key)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LOCALFILE&nbsp;=&nbsp;sys.argv[2]</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;COSFILE&nbsp;=&nbsp;sys.argv[3]</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cmd_put(LOCALFILE,COSFILE)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;sys.argv[1]&nbsp;in&nbsp;(&#39;rm&#39;,&#39;delete&#39;,&#39;del&#39;):</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cmd_loadconfigure()</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cos_client&nbsp;=&nbsp;CosClient(appid,&nbsp;secret_id,&nbsp;secret_key)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;COSDIR&nbsp;=&nbsp;sys.argv[2]</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path&nbsp;=&nbsp;COSDIR.decode(&#39;utf-8&#39;)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cmd_rm(path)</li>
	<li>else:</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;print(HELP)</li>
	<li>&nbsp;&nbsp;&nbsp;&nbsp;exit()</li>
</ol>
