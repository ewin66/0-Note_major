<h1>linux 配置和启动脚本</h1>

<p>bash是 Bourne Again Shell简称 ，从unix系统的sh发展而来</p>

<p>查看当前shell<br />
echo $SHELL<br />
查看系统支持的shell<br />
cat /etc/shells</p>

<p>cd /bin<br />
ls -la *sh</p>

<h2><strong>一、 bash shell的配置</strong></h2>

<p>变量可分为自定义变量和环境变量<br />
他们作用范围不同<br />
set 可以查看所有变量<br />
set|more 查看 enter一行一行查看<br />
set|less enter换行 pagedown换页 q退出</p>

<p>env只能查看环境变量</p>

<p>bash shell的设置方式</p>

<h2><strong>1.通过自定义变量设置</strong></h2>

<p>key=value<br />
比如 aaa=ajax<br />
echo&nbsp;aaa即可得到ajax变量名不能以数字或者特殊字符开头key1=testone不可key1=&prime;testone&prime;而且等号左右2边不可有空格key2=&quot;key2isaaa即可得到ajax变量名不能以数字或者特殊字符开头key1=testone不可key1=&prime;testone&prime;而且等号左右2边不可有空格key2=&quot;key2iskey1&quot; 双引号能解析<br />
key1=&#39;kkk&#39;<br />
key2=&#39;kk2&#39;<br />
key3=key1&minus;&minus;&minus;&minus;key1&minus;&minus;&minus;&minus;key2<br />
echo $key3<br />
kkk----kk2<br />
unset key3 删除变量</p>

<p>常见的变量<br />
set|grep HIST<br />
HISTFILESIZE :记录历史指令保存的最大值<br />
HISTSIZE:执行history时显示的个数<br />
COLUMNS:终端窗口显示的宽度<br />
LINES:终端窗口显示的高度<br />
PS1:设置提示符号前面的内容样式(\d,\h,\t,\u,\W,\!,\$,\l 等)<br />
\u 当前用户<br />
\W 当前工作目录&nbsp;<br />
\w 当前完整的工作目录从/算起<br />
\h 主机名<br />
\t 当前时间<br />
\# 登录后下达的第几个指令<br />
比如<br />
PS1=&#39;[\u@\h-\w-\t-\#]&#39;<br />
[root@bogon-/var/var/lib-08:35:26-38]</p>

<h2><strong>2.通过别名(Aliases)设置</strong></h2>

<p>设置,查看所有，查看某别名值，type -a ,删除<br />
type ll<br />
[root@bogon-/var/var/lib-08:35:26-38]type ll<br />
ll 是 `ls -l --color=auto&#39; 的别名<br />
[root@bogon ~]# alias ll<br />
alias ll=&#39;ls -l --color=auto&#39;<br />
[root@bogon-/var/var/lib-08:35:43-39]type -a ls<br />
ls 是 `ls --color=auto&#39; 的别名<br />
[root@bogon-/var/var/lib-08:35:45-40]type cd<br />
cd 是 shell 内嵌<br />
查看所有别名 alias<br />
设置<br />
alias cls=&#39;clear&#39;<br />
[root@bogon-/var/var/lib-08:42:55-51]type cls<br />
cls 是 `clear&#39; 的别名<br />
查看alias的值 alias cls<br />
[root@bogon-/var/var/lib-08:43:00-52]alias cls<br />
alias cls=&#39;clear&#39;<br />
删除别名定义<br />
unalias cls</p>

<h2><strong>3.通过set指令设置</strong></h2>

<p>set自身查看所有变量的值<br />
设置shell内部的属性值(set -o noclobber,set -o vi)<br />
ll&gt;a.txt 可以写入<br />
ll&gt;a.txt 可以覆盖</p>

<p>ll&gt;a.txt&nbsp;<br />
-bash: a.txt: 无法覆盖已存在的文件<br />
ll&gt;&gt;a.txt 可以追加<br />
set -o noclobber /*设置禁止重定向覆盖*/<br />
set +o noclobber /*设置允许重定向覆盖*/<br />
[root@bogon ~]# set -o<br />
allexport off<br />
braceexpand on<br />
emacs on<br />
errexit off<br />
errtrace off<br />
functrace off<br />
hashall on<br />
histexpand on<br />
history on<br />
ignoreeof off<br />
interactive-comments on<br />
keyword off<br />
monitor on<br />
noclobber off<br />
noexec off<br />
noglob off<br />
nolog off<br />
notify off<br />
nounset off<br />
onecmd off<br />
physical off<br />
pipefail off<br />
posix off<br />
privileged off<br />
verbose off<br />
vi off<br />
xtrace off</p>

<p>[root@bogon ~]# set +o<br />
set +o allexport<br />
set -o braceexpand<br />
set -o emacs<br />
set +o errexit<br />
set +o errtrace<br />
set +o functrace<br />
set -o hashall<br />
set -o histexpand<br />
set -o history<br />
set +o ignoreeof<br />
set -o interactive-comments<br />
set +o keyword<br />
set -o monitor<br />
set +o noclobber<br />
set +o noexec<br />
set +o noglob<br />
set +o nolog<br />
set +o notify<br />
set +o nounset<br />
set +o onecmd<br />
set +o physical<br />
set +o pipefail<br />
set +o posix<br />
set +o privileged<br />
set +o verbose<br />
set +o vi<br />
set +o xtrace</p>

<p>-o,+o<br />
set -o vi<br />
设置输入命令的模式为vi下<br />
ls 按esc 进入vim命令行模式编辑状态</p>

<h2><strong>4.通过环境变量设置</strong></h2>

<p>自定义变量只能在当前shell环境下有效<br />
环境变量在整个主机下的shell环境中有效</p>

<p>可使用 export variable name来设置<br />
定义过的普通变量和通过export 变量名来升级为环境变量</p>

<p><img alt="" src="http://images2015.cnblogs.com/blog/523143/201610/523143-20161015202001828-1106441276.png" /></p>

<p>如果重新打开连接会话(root或者admin 身份登录)<br />
key1,key2都是没有的</p>

<p>常用变量：<br />
<img alt="" src="http://images2015.cnblogs.com/blog/523143/201610/523143-20161015202117468-2129744939.png" /></p>

<h2>PATH</h2>

<p>PATH=$PATH.:&nbsp;<br />
将隐藏的路径设置到PATH中,会带来安全问题?</p>

<p>[root@bogon ~]# which chgrp<br />
/usr/bin/chgrp</p>

<p>[root@bogon ~]# which ll<br />
alias ll=&#39;ls -l --color=auto&#39;<br />
/usr/bin/ls</p>

<h2><strong>二、shell startup scripts原理</strong></h2>

<p>login和non-login<br />
用户登录或者其它非登录动作时自动执行的一些脚本<br />
建立自定义变量或者执行set设置shell<br />
建立环境变量,设置其它程序<br />
使用alias 简化后续操作<br />
登录时执行哪些程序</p>

<p>login</p>

<p>完整登录流程(centos)</p>

<p><br />
/etc/profile 　　 　　　　　　 (PATH/USR/HOSTNAME/HISTSIZE等))<br />
　　　　/etc/profile.d/*.sh 　　 (颜色语言 指令别名)<br />
~/.bash_profile<br />
　　　　~/.bashrc<br />
　　　　　　/etc/bashrc<br />
~/.bash_login<br />
~/.profile</p>

<p>~/.bash_profile,~/.bash_login,~/.profile (只能依次读取其中一个)</p>

<p>任何一个读取成功，不再读取下一个</p>

<p>各自home目录的只对各自生效<br />
修改完成功后 source 重新加载脚本即可</p>

<p>non-login<br />
无需登录即可运行的shell,如su和 原bssh下的新bash动作<br />
涉及到的脚本<br />
~/.bashrc 和/etc/bashrc<br />
/etc/profile.d/*.sh (颜色语言 指令别名)<br />
执行bash命令</p>

<p>~/.bash_logout 用户注销时执行的命令,备份，清理等</p>

<p>source 别名 .</p>

<p>&nbsp;</p>
