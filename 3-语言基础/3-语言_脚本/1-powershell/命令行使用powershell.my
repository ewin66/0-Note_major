<h1>命令行使用powershell</h1>

<h2>Powershell 执行文件和脚本&nbsp;</h2>

<p>象运行可执行文件一样，Powershell运行文件和脚本，也必须使用绝对路径或者相对路径，或者要运行的文件必须定义在可受信任的环境变量中。</p>

<h4>关于脚本</h4>

<p>脚本和批处理都属于伪可执行文件，它们只是包含了若干命令行解释器能够解释和执行的命令行代码。</p>

<h4>执行批处理文件</h4>

<p>批处理是扩展名为&rdquo;.bat&rdquo;的文本文件，它可以包含任何cmd控制台能够处理的命令。当批处理文件被打开，Cmd控制台会逐行执行每条命令。那Powershell能够直接执行批处理吗？<br />
将下列命令保存为ping.bat</p>

<h4>&nbsp;</h4>

<h4><strong>执行powershell脚本</strong></h4>

<p>Powershell拥有自己的脚本，扩展名为&ldquo;.ps1&rdquo;</p>

<pre>
PS C:\PS&gt; echo &quot;dir;Get-PSProvider;help dir&quot; &gt;test.ps1
PS C:\PS&gt; Get-Content ./test.ps1
dir;Get-PSProvider;help dir
PS C:\PS&gt; ./test.ps1</pre>

<p>初次执行脚本时，可能会碰到一个异常：<br />
File &rdquo; C:\PS\test.ps1&Prime; cannot be loaded because the<br />
execution of scripts is disabled on this system. Please see<br />
&ldquo;get-help about_signing&rdquo; for more details.<br />
At line:1 char:10<br />
+ .test.ps1 &lt;&lt;&lt;&lt;</p>

<p>这是powershell的默认安全设置禁用了执行脚本，要启用这个功能需要拥有管理员的权限。</p>

<h4>&nbsp;</h4>

<h4><strong>Powershell调用入口的优先级</strong></h4>

<p><strong>别名</strong>：控制台首先会寻找输入是否为一个别名，如果是，执行别名所指的命令。因此我们可以通过别名覆盖任意powershell命令，因为别名的优先级最高。</p>

<p><strong>函数</strong>：如果没有找到别名，会继续寻找函数，函数类似别名，只不过它包含了更多的powershell命令。因此可以自定义函数扩充cmdlet 把常用的参数给固化进去。</p>

<p><strong>命令</strong>：如果没有找到函数，控制台会继续寻找命令，即cmdlet，powershell的内部命令。</p>

<p><strong>脚本</strong>：没有找到命令，继续寻找扩展名为&ldquo;.ps1&rdquo;的Powershell脚本。</p>

<p><strong>文件</strong>：没有找到脚本，会继续寻找文件，如果没有可用的文件，控制台会抛出异常。</p>
