<h1>关联查询遇到的问题</h1>

<h2>左关联查询去重</h2>

<h3>问题描述：</h3>

<p>SELECT<br />
&nbsp;&nbsp; &nbsp;*<br />
FROM<br />
&nbsp;&nbsp; &nbsp;(<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;SELECT<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;a.*, a_b.create_time<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;FROM<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;a<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;LEFT JOIN a_b ON a.id = a_b.id_a<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;ORDER BY<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;a_b.create_time DESC<br />
&nbsp;&nbsp; &nbsp;) T<br />
GROUP BY<br />
&nbsp;&nbsp; &nbsp;T.id;</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<h1>mysql中group by和order by同时使用无效的替代方案</h1>

<p>&nbsp;</p>

<h2>前言</h2>

<p>最近一年由于工作需要大部分使用的都是NoSql数据库，对关系型数据库感觉越来越陌生，一个由<code>group by</code>和<code>order by</code>&nbsp;引发的血案由此而生。在此做个记录，以备不时之需。</p>

<h2>需求（得到所有barCode的最新的一条数据）</h2>

<p>首先，看一下整体的表结构。&nbsp;<br />
<img alt="表结构" src="http://ooqkdlcps.bkt.clouddn.com/blog/20170527/152755344.png?imageslim" title="" /><br />
现在查找每个<code>barCode</code>中最新的数据。</p>

<p>由于数据太多，不是很好看到效果。我们就拿一个<code>barCode</code>为<code>4565789</code>的数据做示例。</p>

<pre>
<code>SELECT
    barCode,
    priCommodityID,
    createDate
FROM
    tb_history_version
WHERE
    barCode = &#39;4565789&#39;
ORDER BY
    createDate DESC;</code></pre>

<p><img alt="示例数据" src="http://ooqkdlcps.bkt.clouddn.com/blog/20170527/152218972.png?imageslim" title="" /></p>

<h2>试错</h2>

<p>由于很久没有写过sql了。所以首先想到了用 group by和order by组合查询。</p>

<pre>
<code>SELECT
    barCode,
    priCommodityID,
    createDate
FROM
    tb_history_version
WHERE
    barCode = &#39;4565789&#39;
GROUP BY
    barCode
ORDER BY
    createDate DESC;</code></pre>

<p>结果如下：&nbsp;<br />
<img alt="错误结果：1" src="http://ooqkdlcps.bkt.clouddn.com/blog/20170527/153728638.png?imageslim" title="" />&nbsp;<br />
可以看到这并不是我们想要的结果，<code>order by</code>没有任何效果。&nbsp;<br />
接下来就试一下运用子查询的方式将两者结合。先排序再分组</p>

<pre>
<code>SELECT
    *
FROM
    (
        SELECT
            barCode,
            priCommodityID,
            createDate
        FROM
            tb_history_version
        WHERE
            barCode = &#39;4565789&#39;
        ORDER BY
            createDate DESC
    ) AS A
GROUP BY
    A.barCode;</code></pre>

<p>结果还是令人失望的&nbsp;<br />
<img alt="错误结果：2" src="http://ooqkdlcps.bkt.clouddn.com/blog/20170527/154555875.png?imageslim" title="" /></p>

<h2>解决</h2>

<p>上面两种方式试过了，虽然结果让人伤心，但是工作还是要继续。于是就网上找各种资料,看能否用其他方式解决问题。偶然间看到了<code>group_concat</code>可以实现分组排序，就拿来试一试</p>

<pre>
<code>SELECT
    barCode,
    GROUP_CONCAT(
        priCommodityID
        ORDER BY
            createDate DESC
    ) AS priCommodityID,
    GROUP_CONCAT(
        createDate
        ORDER BY
            createDate DESC
    ) AS createDate
FROM
    tb_history_version
WHERE
    barCode = &#39;4565789&#39;;</code></pre>

<p>结果如下&nbsp;<br />
<img alt="结果一" src="http://ooqkdlcps.bkt.clouddn.com/blog/20170527/155933897.png?imageslim" title="" /><br />
可以看到顺序没问题了，但是所有数据都被拼接在一起了。需要进一步做截取字符的处理</p>

<pre>
<code>SELECT
    barCode,
    SUBSTRING_INDEX(
        group_concat(
            priCommodityID
            ORDER BY
                createDate DESC
        ),
        &#39;,&#39;,
        1
    ) AS priCommodityID,
    SUBSTRING_INDEX(
        group_concat(
            createDate
            ORDER BY
                createDate DESC
        ),
        &#39;,&#39;,
        1
    ) AS createDate
FROM
    tb_history_version
WHERE
    barCode = &#39;4565789&#39;
GROUP BY
    barCode;</code></pre>

<ul>
	<li><img alt="正确结果" src="http://ooqkdlcps.bkt.clouddn.com/blog/20170527/160406560.png?imageslim" title="" /><br />
	ok！到这里就发现已经实现我们刚开始的需求了。</li>
</ul>

<h2>总结</h2>

<p><code>group by</code>和<code>order by</code>同时使用是没有效果的,可以使用<code>group_concat</code>和<code>groub by</code>替代。<code>group_concat</code>内可以实现字段排序。</p>

<h2>实际使用</h2>

<p>由于先 order by 后 group by 在复杂查询下的失效，然后在里层，group by 的时候，我们用 limit 1000000 然后，，勉强使之生效了。</p>
