<h1>mysql格式化日期</h1>

<p>mysql查询记录如果有时间戳字段时，查看结果不方便，不能即时看到时间戳代表的含义，现提供mysql格式换时间函数，可以方便的看到格式化后的时间。</p>

<h2><strong>1. DATE_FORMAT() 函数用于以不同的格式显示日期/时间数据。</strong></h2>

<pre>
DATE_FORMAT(date,format) </pre>

<p>format参数的格式有</p>

<table border="0">
	<tbody>
		<tr>
			<td>%a</td>
			<td>缩写星期名</td>
		</tr>
		<tr>
			<td>%b</td>
			<td>缩写月名</td>
		</tr>
		<tr>
			<td>%c</td>
			<td>月，数值</td>
		</tr>
		<tr>
			<td>%D</td>
			<td>带有英文前缀的月中的天</td>
		</tr>
		<tr>
			<td>%d</td>
			<td>月的天，数值(00-31)</td>
		</tr>
		<tr>
			<td>%e</td>
			<td>月的天，数值(0-31)</td>
		</tr>
		<tr>
			<td>%f</td>
			<td>微秒</td>
		</tr>
		<tr>
			<td>%H</td>
			<td>小时 (00-23)</td>
		</tr>
		<tr>
			<td>%h</td>
			<td>小时 (01-12)</td>
		</tr>
		<tr>
			<td>%I</td>
			<td>小时 (01-12)</td>
		</tr>
		<tr>
			<td>%i</td>
			<td>分钟，数值(00-59)</td>
		</tr>
		<tr>
			<td>%j</td>
			<td>年的天 (001-366)</td>
		</tr>
		<tr>
			<td>%k</td>
			<td>小时 (0-23)</td>
		</tr>
		<tr>
			<td>%l</td>
			<td>小时 (1-12)</td>
		</tr>
		<tr>
			<td>%M</td>
			<td>月名</td>
		</tr>
		<tr>
			<td>%m</td>
			<td>月，数值(00-12)</td>
		</tr>
		<tr>
			<td>%p</td>
			<td>AM 或 PM</td>
		</tr>
		<tr>
			<td>%r</td>
			<td>时间，12-小时（hh:mm:ss AM 或 PM）</td>
		</tr>
		<tr>
			<td>%S</td>
			<td>秒(00-59)</td>
		</tr>
		<tr>
			<td>%s</td>
			<td>秒(00-59)</td>
		</tr>
		<tr>
			<td>%T</td>
			<td>时间, 24-小时 (hh:mm:ss)</td>
		</tr>
		<tr>
			<td>%U</td>
			<td>周 (00-53) 星期日是一周的第一天</td>
		</tr>
		<tr>
			<td>%u</td>
			<td>周 (00-53) 星期一是一周的第一天</td>
		</tr>
		<tr>
			<td>%V</td>
			<td>周 (01-53) 星期日是一周的第一天，与 %X 使用</td>
		</tr>
		<tr>
			<td>%v</td>
			<td>周 (01-53) 星期一是一周的第一天，与 %x 使用</td>
		</tr>
		<tr>
			<td>%W</td>
			<td>星期名</td>
		</tr>
		<tr>
			<td>%w</td>
			<td>周的天 （0=星期日, 6=星期六）</td>
		</tr>
		<tr>
			<td>%X</td>
			<td>年，其中的星期日是周的第一天，4 位，与 %V 使用</td>
		</tr>
		<tr>
			<td>%x</td>
			<td>年，其中的星期一是周的第一天，4 位，与 %v 使用</td>
		</tr>
		<tr>
			<td>%Y</td>
			<td>年，4 位</td>
		</tr>
		<tr>
			<td>%y</td>
			<td>年，2 位</td>
		</tr>
	</tbody>
</table>

<p>例子：</p>

<pre>
DATE_FORMAT(NOW(),&#39;%b %d %Y %h:%i %p&#39;)  
DATE_FORMAT(NOW(),&#39;%m-%d-%Y&#39;)  
DATE_FORMAT(NOW(),&#39;%d %b %y&#39;)  
DATE_FORMAT(NOW(),&#39;%d %b %Y %T:%f&#39;) </pre>

<p>输出结果：</p>

<pre>
Dec 29 2008 11:45 PM  
12-29-2008  
29 Dec 08  
29 Dec 2008 16:25:46 </pre>

<h2><strong>2. MySQL简单的日期换算</strong></h2>

<p>使用场景：知道了一个时间段的开始时间，beginTime和持续时间durationTime 然后以 年月日： 时分-时分的格式输出时间段。</p>

<p>使用到两个函数：</p>

<p><strong>UNIX_TIMESTAMP&nbsp; 将时间转毫秒数</strong></p>

<p><strong>FROM_UNIXTIME&nbsp; &nbsp; 将毫秒数转时间</strong></p>

<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; CONCAT(<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;ebt.start_time,<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&#39;-&#39;,<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;FROM_UNIXTIME(<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;UNIX_TIMESTAMP(beginTime) + ec.durationTime* 60<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;)<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;) AS &quot;examTime&quot;,</p>

<h2><strong>3. MySQL 格式化函数 FROM_UNIXTIME()</strong></h2>

<pre>
SELECT FROM_UNIXTIME(date, &#39;%Y-%c-%d %h:%i:%s&#39; ) as post_date ,   
date_format(NOW(), &#39;%Y-%c-%d %h:%i:%s&#39; ) as post_date_gmt   
FROM `article`  where outkey = &#39;Y&#39; </pre>

<p>1、FROM_UNIXTIME( unix_timestamp )&nbsp;</p>

<p>　　参数：一般为10位的时间戳，如:1417363200&nbsp;</p>

<p>　　返回值：有两种，可能是类似 &#39;YYYY-MM-DD HH:MM:SS&#39; 这样的字符串，也有可能是类似于 YYYYMMDDHHMMSS.uuuuuu 这样的数字，具体返回什么取决于该函数被调用的形式。</p>

<pre>
mysql&gt; select FROM_UNIXTIME(1344887103);  
+---------------------------+  
| FROM_UNIXTIME(1344887103) |  
+---------------------------+  
| 2012-08-14 03:45:03       |  
+---------------------------+  
1 row in set (0.00 sec) 
</pre>

<p>2、FROM_UNIXTIME( unix_timestamp ，format )&nbsp;<br />
　　参数 unix_timestamp ：与方法 FROM_UNIXTIME( unix_timestamp ) 中的参数含义一样；&nbsp;<br />
　　参数 format : 转换之后的时间字符串显示的格式;&nbsp;<br />
　　返回值：按照指定的时间格式显示的字符串；</p>

<pre>
mysql&gt; select FROM_UNIXTIME(1344887103,&#39;%Y-%M-%D %h:%i:%s&#39;);  
+-----------------------------------------------+  
| FROM_UNIXTIME(1344887103,&#39;%Y-%M-%D %h:%i:%s&#39;) |  
+-----------------------------------------------+  
| 2012-August-14th 03:45:03                     |  
+-----------------------------------------------+  
1 row in set (0.00 sec)  
mysql&gt; select FROM_UNIXTIME(1344887103,&#39;%Y-%m-%D %h:%i:%s&#39;);  
+-----------------------------------------------+  
| FROM_UNIXTIME(1344887103,&#39;%Y-%m-%D %h:%i:%s&#39;) |  
+-----------------------------------------------+  
| 2012-08-14th 03:45:03                         |  
+-----------------------------------------------+  
1 row in set (0.00 sec) 
</pre>

<h2>4. 判断是不是同一天：</h2>

<pre>
SELECT tbl_gamedata.GameMapName,tbl_playerdata.GameMode, tbl_gamedata.MatchMode, tbl_playerdata.GameResult, SUM(tbl_playerdata.GameIsWin) AS tday_winCount, 
          SUM(tbl_playerdata.AssistCount) AS tday_assistCount,SUM(tbl_playerdata.KillCount) AS tday_killCount,
          SUM(tbl_player_title.ThreeKill) AS tday_threeKill,SUM(tbl_player_title.FourKill) AS tday_fourKill,SUM(tbl_player_title.FiveKill) AS tday_fiveKill
   FROM tbl_playerdata 
     LEFT JOIN tbl_gamedata ON tbl_playerdata.GameID = tbl_gamedata.GameID
     LEFT JOIN tbl_player_title ON tbl_player_title.GameID = tbl_playerdata.GameID AND tbl_player_title.PlayerID = tbl_playerdata.PlayerID
   WHERE tbl_playerdata.PlayerID = user_id AND (tbl_playerdata.GameResult = 2 OR tbl_playerdata.GameResult = 3) AND TO_DAYS(FROM_UNIXTIME(tbl_playerdata.GameStartTime)) = TO_DAYS(NOW()) 
   GROUP BY tbl_gamedata.GameMapName, tbl_playerdata.GameMode,tbl_gamedata.MatchMode,tbl_playerdata.GameResult;
</pre>

<p>其中TO_DAYS(FROM_UNIXTIME(tbl_playerdata.GameStartTime)) = TO_DAYS(NOW()) 就是我们需要的判断</p>

<p>&nbsp;</p>

<h2>5.日期时段查询</h2>

<p>用 startdata 00:00:00 到 enddate 23:59:59</p>

<p>select * from reg where<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;T2.START_COURSE_DATE &lt;![CDATA[&gt;=]]&gt; CONCAT(#{params.startCourseDate},&#39; 00:00:00&#39;)<br />
AND T2.START_COURSE_DATE &lt;![CDATA[&lt;=]]&gt; CONCAT(#{params.endCourseDate},&#39; 23:59:59&#39;)</p>

<p>&nbsp;</p>
