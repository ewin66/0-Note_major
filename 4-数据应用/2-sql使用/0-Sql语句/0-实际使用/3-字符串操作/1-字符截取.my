<h1>SQL截取字符串</h1>

<h2>实际用到的：</h2>

<h3>截取某个 &quot;字符&quot; 前后的字符串</h3>

<p>mysql中专门提供了字符串截取的函数 <strong>substring_index(string 待截取字符串,char 标记字符,int 左右标示1代表左-1代表右)</strong>。</p>

<p>例子：截取字段name值&quot;wang-yanan&quot;:</p>

<p><strong>select substring_index(name,&#39;-&#39;,1) from base_stubase where id =003;&nbsp; ==&gt; &quot;wang&quot;</strong></p>

<p>select substring_index(name,&#39;-&#39;,-1) from base_stubase where id =003;&nbsp; ==&gt; &quot;yanan&quot;</p>

<h3>替换字符</h3>

<p><strong>select replace(uuid(), &#39;-&#39;, &#39;&#39;);&nbsp;</strong>去掉横杠的UUID</p>

<p>&nbsp;</p>

<h2>用到的几个函数：</h2>

<p>substring_index()</p>

<p>&mdash;&mdash;根据标志字 &quot;符截&quot; 取子串,是mysql可用的，其他数据库还不清楚。</p>

<p>substring()&nbsp;<br />
&mdash;&mdash;任意位置取子串&nbsp;</p>

<p>left()&nbsp;<br />
right()&nbsp;<br />
&mdash;&mdash;左右两端取子串&nbsp;</p>

<p>ltrim()&nbsp;<br />
rtrim()&nbsp;<br />
&mdash;&mdash;截断空格，没有trim()。&nbsp;</p>

<p>charindex()&nbsp; //mysql中没有，取而代之的是locate()函数。<br />
patindex()&nbsp;<br />
locate()函数<br />
&mdash;&mdash;查子串在母串中的位置，没有返回0。区别：patindex支持通配符，charindex不支持。</p>

<p>函数功效：<br />
字符串截取函数，只限单字节字符使用（对于中文的截取时遇上奇数长度是会出现乱码，需另行处理），本函数可截取字符串指定范围内的字符。</p>

<p>应用范围：<br />
标题、内容截取</p>

<p>函数格式：<br />
string&nbsp;substr&nbsp;( string string, int start [, int length])<br />
参数1：处理字符串<br />
参数2：截取的起始位置（第一个字符是从0开始）<br />
参数3：截取的字符数量<br />
substr()更多介绍可在PHP官方手册中查询（字符串处理函数库）</p>

<h2>简单举例：</h2>

<p>1.LEFT ( character_expression , integer_expression ) &nbsp;<br />
函数说明：LEFT ( &#39;源字符串&#39; , &#39;要截取最左边的字符数&#39; &nbsp;) &nbsp;<br />
返回从字符串左边开始指定个数的字符 &nbsp;<br />
select LEFT(&#39;SQL_Server_2008&#39;,4 ); &nbsp;<br />
返回结果：SQL_ &nbsp;</p>

<p>2.RIGHT ( character_expression , integer_expression ) &nbsp;<br />
函数说明：RIGHT ( &#39;源字符串&#39; , &#39;要截取最右边的字符数&#39; &nbsp;) &nbsp;<br />
返回字符串中从右边开始指定个数的 integer_expression 字符 &nbsp;<br />
select RIGHT(&#39;SQL_Server_2008&#39;,4 ); &nbsp;<br />
返回结果：2008 &nbsp;</p>

<p>3.SUBSTRING ( character_expression , start , length ) &nbsp;<br />
函数说明：SUBSTRING ( &#39;源字符串&#39; , &#39;截取起始位置(含该位置上的字符)&#39; , &#39;截取长度&#39; ) &nbsp;<br />
返回字符、binary、text 或 image 表达式的一部分 &nbsp;<br />
select SUBSTRING(&#39;SQL_Server_2008&#39;,5 ,6); &nbsp;<br />
返回结果：Server &nbsp;</p>

<p>substr(&quot;ABCDEFG&quot;, 0);&nbsp;//返回：ABCDEFG，截取所有字符<br />
substr(&quot;ABCDEFG&quot;, 2);&nbsp;//返回：CDEFG，截取从C开始之后所有字符<br />
substr(&quot;ABCDEFG&quot;, 0, 3); //返回：ABC，截取从A开始3个字符<br />
substr(&quot;ABCDEFG&quot;, 0, 100); //返回：ABCDEFG，100虽然超出预处理的字符串最长度，但不会影响返回结果，系统按预处理字符串最大数量返回。<br />
substr(&quot;ABCDEFG&quot;, 0, -3); //返回：EFG，注意参数-3，为负值时表示从尾部开始算起，字符串排列位置不变</p>

<h2>复杂例子:</h2>

<h3>1.截取已知长度的函数</h3>

<h4>A.截取从字符串左边开始N个字符</h4>

<p>&nbsp;Declare @S1 varchar(100)<br />
&nbsp;Select @S1=&#39;http://www.163.com&#39;<br />
&nbsp;Select Left(@S1,4)<br />
&nbsp;------------------------------------<br />
&nbsp;显示结果: http</p>

<h4>B.截取从字符串右边开始N个字符(例如取字符www.163.com)</h4>

<p>&nbsp;Declare @S1 varchar(100)<br />
&nbsp;Select @S1=&#39;http://www.163.com&#39;<br />
&nbsp;Select right(@S1,11)<br />
&nbsp;------------------------------------<br />
&nbsp;显示结果:&nbsp;www.163.com</p>

<h4>C.截取字符串中任意位置及长度(例如取字符www)</h4>

<p>&nbsp;Declare @S1 varchar(100)<br />
&nbsp;Select @S1=&#39;http://www.163.com&#39;<br />
&nbsp;Select SUBSTRING(@S1,8,3)<br />
&nbsp;------------------------------------<br />
&nbsp;显示结果:&nbsp;www.163.com<br />
&nbsp;以上例子皆是已知截取位置及长度,下面介绍未知位置的例子</p>

<h3>2.截取未知位置的函数</h3>

<h4>A.截取指定字符串后的字符串(例如截取http://后面的字符串)</h4>

<p>方法一: <strong>mysql中用locate() 取代&nbsp;CHARINDEX（）</strong></p>

<p>&nbsp;Declare @S1 varchar(100)<br />
&nbsp;Select @S1=&#39;http://www.163.com&#39;<br />
&nbsp;Select Substring(@S1,CHARINDEX(&#39;www&#39;,@S1)+1,Len(@S1))<br />
&nbsp;/*此处也可以这样写:Select Substring(@S1,CHARINDEX(&#39;//&#39;,@S1)+2,Len(@S1))*/</p>

<p>&nbsp;------------------------------------<br />
&nbsp;显示结果:&nbsp;www.163.com</p>

<p>&nbsp;需要注意:CHARINDEX函数搜索字符串时,不区分大小写,因此CHARINDEX(&#39;www&#39;,@S1)也可以写成CHARINDEX(&#39;WWW&#39;,@S1)</p>

<p>&nbsp;方法二:(与方法一类似)&nbsp;<strong>mysql中用locate() 取代&nbsp;CHARINDEX（）</strong></p>

<p>&nbsp;Declare @S1 varchar(100)<br />
&nbsp;Select @S1=&#39;http://www.163.com&#39;<br />
&nbsp;Select Substring(@S1,PATINDEX(&#39;%www%&#39;,@S1)+1,Len(@S1))<br />
&nbsp;--此处也可以这样写:Select Substring(@S1,PATINDEX(&#39;%//%&#39;,@S1)+2,Len(@S1))<br />
&nbsp;------------------------------------<br />
&nbsp;显示结果:&nbsp;www.163.com</p>

<p>&nbsp;函数PATINDEX与CHARINDEX区别在于:前者可以参数一些参数,增加查询的功能</p>

<p>&nbsp;方法三:</p>

<p>&nbsp;&nbsp; &nbsp;&nbsp;Declare @S1 varchar(100)<br />
&nbsp;&nbsp; &nbsp;&nbsp;Select @S1=&#39;http://www.163.com&#39;<br />
&nbsp;&nbsp; &nbsp;&nbsp;Select REPLACE(@S1,&#39;http://&#39;,&#39;&#39;)<br />
&nbsp;&nbsp; &nbsp;&nbsp;------------------------------------<br />
&nbsp;&nbsp; &nbsp;&nbsp;显示结果:&nbsp;www.163.com</p>

<p>&nbsp;&nbsp; &nbsp;利用字符替换函数REPLACE,将除需要显示字符串外的字符替换为空</p>

<p>&nbsp;方法四:&nbsp;<strong>mysql中用locate() 取代&nbsp;CHARINDEX（）</strong></p>

<p>&nbsp;&nbsp; &nbsp;&nbsp;Declare @S1 varchar(100)<br />
&nbsp;&nbsp; &nbsp;&nbsp;Select @S1=&#39;http://www.163.com&#39;<br />
&nbsp;&nbsp; &nbsp;&nbsp;Select STUFF(@S1,CHARINDEX(&#39;http://&#39;,@S1),Len(&#39;http://&#39;),&#39;&#39;)<br />
&nbsp;&nbsp; &nbsp;&nbsp;------------------------------------<br />
&nbsp;&nbsp; &nbsp;&nbsp;显示结果:&nbsp;www.163.com</p>

<p>函数STUFF与REPLACE区别在于:前者可以指定替换范围,而后者则是全部范围内替换</p>

<h4>B.截取指定字符后的字符串(例如截取C:\Windows\test.txt中文件名)</h4>

<p>与A不同的是,当搜索对象不是一个时,利用上面的方法只能搜索到第一个位置</p>

<p>&nbsp;方法一:&nbsp;<strong>mysql中用locate() 取代&nbsp;CHARINDEX（）</strong></p>

<p>&nbsp;Declare @S1 varchar(100)<br />
&nbsp;Select @S1=&#39;C:\Windows\test.txt&#39;<br />
&nbsp;select right(@S1,charindex(&#39;\&#39;,REVERSE(@S1))-1)<br />
&nbsp;-------------------------------------<br />
&nbsp;显示结果: text.txt</p>

<p><br />
利用函数REVERSE获取需要截取的字符串长度</p>

<p>字符、binary、text 或&nbsp;image 表达式的一部分。有关可与该函数一起使用的有效&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Microsoft&amp;reg; SQL Server&amp;;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;数据类型的更多信息，请参见数据类型。&nbsp;&nbsp;&nbsp;</p>
