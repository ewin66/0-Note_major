<h1>数据库和表的DLL语句</h1>

<h2>数据库DLL</h2>

<p>/*<br />
create database my_store<br />
drop database my_store &nbsp;//注意，在这里做删除的时候，如果数据库里面已经有数据，也会删除。<br />
*/</p>

<h2>数据表DLL</h2>

<p>/*<br />
create table poetry(<br />
&nbsp; &nbsp; id varchar(16) ,//primary key,<br />
&nbsp; &nbsp; title varchar(128) not null,<br />
&nbsp; &nbsp;&nbsp;<br />
&nbsp; &nbsp; constraint peotryid unique (id,title) //这里是定义了一个约束<br />
)</p>

<p>//修改数据库表的名字<br />
alter table table_name rename table_new_name</p>

<p><br />
//与字段相关的操作<br />
1.增加一个字段<br />
alter table poetry add column content text default null; //增加一个列默认为空<br />
alter table poetry add column content text not null; &nbsp;//增加一个字段，默认不能为空<br />
&nbsp;<br />
2.删除一个字段<br />
alter table user drop column new2; 　&nbsp;//删除一个字段<br />
&nbsp;<br />
3.修改一个字段<br />
alter table poetry modify column content mediumtext //修改一个列的字段类型<br />
alter table poetry change text content &nbsp;mediumtext;　&nbsp;//修改一个字段的名称，此时一定要重新指定该字段的类型</p>

<p>4、增加一个主键<br />
alter table poetry add primary key(id) //增加主键</p>

<p>//于约束相关的操作<br />
1、添加约束<br />
alter table poetry add constraint fkey foreign key(id) references poetry(empid);</p>

<p>2、删除约束<br />
alter table poetry drop constraint fkey;<br />
alter table poetry drop primary key cascade; //如果被其他表引用了。这里需要级联操作。<br />
对于not null约束,用alter table modify子句来删除<br />
alter table poetry modify title null;</p>

<p>3、关闭约束<br />
alter table poetry disable constraint fkey cascade; &nbsp; //如果没有被引用则不需cascade关键字<br />
当你生成一个约束时,约束自动打开(除非你指定了disable子句0,当用disable关闭unique或者primary key约束时,oracle会自动删除相关的唯一索引,再次打开时,oracle又会自动建立的.4、打开约束<br />
alter table poetry enable constraint fkey; //注意,打开一个先前关闭的被引用的主键约束,并不能自动打开相关的外部键约束<br />
*/</p>

<h2>mysql添加表注释、字段注释、查看与修改注释</h2>

<p>1 创建表的时候写注释<br />
create table test1<br />
(<br />
field_name int comment &#39;字段的注释&#39;<br />
)comment=&#39;表的注释&#39;;<br />
<br />
2 修改表的注释<br />
alter table test1 comment &#39;修改后的表的注释&#39;;<br />
<br />
3 修改字段的注释<br />
alter table test1 modify column field_name int comment &#39;修改后的字段注释&#39;;<br />
--注意：字段名和字段类型照写就行</p>

<p>&nbsp;alter table roll_schoolroll modify column degree_verify_status tinyint(2) comment &#39;是否申请学位：0未申请；1审核通过 ; 2审核驳回；3已申请待审核&#39;;<br />
<br />
4 查看表注释的方法<br />
--在生成的SQL语句中看<br />
show create table test1;<br />
--在元数据的表里面看<br />
use information_schema;<br />
select * from TABLES where TABLE_SCHEMA=&#39;my_db&#39; and TABLE_NAME=&#39;test1&#39; \G<br />
<br />
5 查看字段注释的方法<br />
--show<br />
show full columns from test1;<br />
--在元数据的表里面看<br />
select * from COLUMNS where TABLE_SCHEMA=&#39;my_db&#39; and TABLE_NAME=&#39;test1&#39; \G</p>
