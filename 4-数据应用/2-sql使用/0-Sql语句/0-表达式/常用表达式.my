<h1>常用的一些表达式</h1>

<h2>判断字符串中是否有某个字符</h2>

<p>find_in_set</p>

<p>SELECT * FROM user WHERE FIND_IN_SET(&quot;喜&quot;,name);&nbsp; //在user表中查找名字中有&quot;喜&quot;字的人信息。</p>

<h2>sql把字串字段相加串连的方法（CONCAT字符串连接函数）</h2>

<p>有的时候，我们有需要将由不同栏位获得的资料串连在一起。每一种资料库都有提供方法来达到这个目的：</p>

<ul>
	<li>access : 数加用&ldquo;+&rdquo;，字串加用&ldquo;&amp;&rdquo;</li>
	<li>MySQL: CONCAT()</li>
	<li>Oracle: CONCAT(), ||</li>
	<li>SQL Server: +</li>
</ul>

<p>CONCAT() 的语法如下：</p>

<p><strong>CONCAT(字串1, 字串2, 字串3, ...)</strong>: 将字串1、字串2、字串3，等字串连在一起。</p>

<p>请注意，Oracle的CONCAT()只允许两个参数；</p>

<p>换言之，一次只能将两个字串串连起来。不过，在Oracle中，我们可以用&#39;||&#39;来一次串连多个字串。</p>

<p>来看几个例子。假设我们有以下的表格：</p>

<p>Geography 表格</p>

<table border="1">
	<tbody>
		<tr>
			<td>region_name</td>
			<td>store_name</td>
		</tr>
		<tr>
			<td>East</td>
			<td>Boston</td>
		</tr>
		<tr>
			<td>East</td>
			<td>New York</td>
		</tr>
		<tr>
			<td>West</td>
			<td>Los Angeles</td>
		</tr>
		<tr>
			<td>West</td>
			<td>San Diego</td>
		</tr>
	</tbody>
</table>

<p>例子1:</p>

<p><strong>MySQL/Oracle</strong>:<br />
<strong>SELECT CONCAT(region_name,store_name) FROM Geography<br />
WHERE store_name = &#39;Boston&#39;;</strong></p>

<p><em>结果</em>：</p>

<p><strong>&#39;EastBoston&#39;</strong></p>

<p>例子2:</p>

<p><strong>Oracle</strong>:<br />
<strong>SELECT region_name || &#39; &#39; || store_name FROM Geography<br />
WHERE store_name = &#39;Boston&#39;;</strong></p>

<p><em>结果</em>：</p>

<p><strong>&#39;East Boston&#39;</strong></p>

<p>例子3:</p>

<p><strong>SQL Server</strong>:<br />
<strong>SELECT region_name + &#39; &#39; + store_name FROM Geography<br />
WHERE store_name = &#39;Boston&#39;;</strong></p>

<p><em>结果</em>：</p>

<p><strong>&#39;East Boston&#39;</strong></p>

<p><strong>注：如果字段为&lsquo;NULL&rsquo;连出来的结果也是&lsquo;NULL&rsquo;了（sql server）</strong></p>

<p>&nbsp;</p>

<p><strong>ACCESS的&amp;&nbsp;运算符</strong></p>

<p>以下摘自&nbsp;Microsoft&nbsp;Access&nbsp;Help<br />
<br />
<strong>&amp;&nbsp;运算符</strong><br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />
<br />
用来强制两个表达式作字符串连接。<br />
<br />
语法<br />
<br />
result&nbsp;=&nbsp;expression1&nbsp;&amp;&nbsp;expression2<br />
<br />
&amp;&nbsp;运算符的语法具有以下几个部分：<br />
<br />
部分&nbsp;描述&nbsp;<br />
result&nbsp;必需的；任何&nbsp;String或&nbsp;Variant&nbsp;变量。&nbsp;<br />
expression1&nbsp;必需的；任何表达式。&nbsp;<br />
expression2&nbsp;必需的；任何表达式。&nbsp;<br />
<br />
说明<br />
<br />
如果&nbsp;expression&nbsp;不是字符串，则将其转换成&nbsp;String&nbsp;变体。如果两个表达式都是字符串表达式，则&nbsp;result&nbsp;的数据类型是&nbsp;String；否则&nbsp;result&nbsp;是&nbsp;String&nbsp;变体。如果两个表达式都是&nbsp;Null，则&nbsp;result&nbsp;也是&nbsp;Null。但是，只要有一个&nbsp;expression&nbsp;是&nbsp;Null，那么在与其它表达式连接时，都将其作为长度为零的字符串&nbsp;(&quot;&quot;)&nbsp;处理。任何&nbsp;Empty&nbsp;类型表达式也作为长度为零的字符串处理。</p>

<p>&nbsp;</p>

<h2>&nbsp;</h2>

<p>&nbsp;</p>
