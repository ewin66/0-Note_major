<h1>SQL的主键和外键的作用</h1>

<h2>SQL的主键和外键的作用：</h2>

<p>外键取值规则：空值或参照的主键值。</p>

<p>(1)插入非空值时，如果主键表中没有这个值，则不能插入。</p>

<p>(2)更新时，不能改为主键表中没有的值。</p>

<p>(3)删除主键表记录时，你可以在建外键时选定外键记录一起级联删除还是拒绝删除。</p>

<p>(4)更新主键记录时，同样有级联更新和拒绝执行的选择。</p>

<p>简而言之，<strong>SQL的主键和外键就是起约束作用。</strong></p>

<p>定义主键和外键主要是为了维护关系<a href="http://lib.csdn.net/base/mysql" target="_blank" title="MySQL知识库">数据库</a>的完整性，总结一下：</p>

<p>一、主键是能确定一条记录的唯一标识，比如，一条记录包括身份正号，姓名，年龄。身份证号是唯一能确定你这个人的，其他都可能有重复，所以，身份证号是主键。</p>

<p>外键用于与另一张表的关联。是能确定另一张表记录的字段，用于保持数据的一致性。比如，A表中的一个字段，是B表的主键，那他就可以是A表的外键。</p>

<p>&nbsp;</p>

<h2>二、主键、外键和索引的区别</h2>

<p>定义：</p>

<p><strong>主键--唯一标识一条记录，不能有重复的，不允许为空</strong></p>

<p><strong>外键--表的外键是另一表的主键,&nbsp;外键可以有重复的,&nbsp;可以是空值</strong></p>

<p><strong>索引--该字段没有重复值，但可以有一个空值</strong></p>

<p>作用：</p>

<p>主键--用来保证数据完整性</p>

<p>外键--用来和其他表建立联系用的</p>

<p>索引--是提高查询排序的速度</p>

<p>个数：</p>

<p>主键--主键只能有一个</p>

<p>外键--一个表可以有多个外键</p>

<p>索引--一个表可以有多个唯一索引</p>

<p>&nbsp;</p>

<h2>创建SQL的主键和外键约束的方法：</h2>

<h3>--普通的建表语句</h3>

<p>create&nbsp;table&nbsp;Student &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;--建表格式:create table&nbsp;自定义的表名</p>

<p>( &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; --字段名一般为有一定意义的英文</p>

<p>StudentName&nbsp;nvarchar(15), &nbsp;--&nbsp;格式：字段名类型()括号里面的是允许输入的长度</p>

<p>StudentAge&nbsp;int, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; --int型的后面不需要接长度</p>

<p>StudentSex&nbsp;nvarchar(2) &nbsp; &nbsp; &nbsp; &nbsp; --最后一个字段后面不要逗号</p>

<p>)</p>

<p>&nbsp;</p>

<h3>--在创建表时就可以对字段加上约束:</h3>

<p>create&nbsp;table&nbsp;Student</p>

<p>(</p>

<p>StudentNo&nbsp;int&nbsp;PRIMARY&nbsp;KEY&nbsp;IDENTITY(1,1), &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;--加主键约束,还有标识列属性（两者构成实体完整性）</p>

<p>StudentName&nbsp;nvarchar(15)&nbsp;not&nbsp;null, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;--加非空约束,不加&quot;not null&quot;&nbsp;默认为：可以为空</p>

<p>StudentAge&nbsp;int&nbsp;DEFAULT&nbsp;((0)), &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;--加默认值约束</p>

<p>StudentSchool&nbsp;text(20)&nbsp;FOREIGN&nbsp;KEY&nbsp;REFERENCES&nbsp;SchoolTable(SchoolName),&nbsp;--加外键约束,格式:FOREIGN KEY REFERENCES&nbsp;关联的表名(字段名)</p>

<p>StudentSex&nbsp;nvarchar(2)&nbsp;CHECK(StudentSex=N&#39;男&#39;&nbsp;or&nbsp;StudentSex=N&#39;女&#39;)&nbsp;--加检查约束,格式:check (条件表达式)</p>

<p>)</p>

<p>&nbsp;</p>

<h3>--如果在表创建好了以后再加约束，则格式分别为：</h3>

<p>--&nbsp;主键:</p>

<p>alter&nbsp;table&nbsp;表名</p>

<p>add&nbsp;constraint&nbsp;PK_字段名--&quot;PK&quot;为主键的缩写，字段名为要在其上创建主键的字段名,&#39;PK_字段名&#39;就为约束名</p>

<p>primary&nbsp;key&nbsp;(字段名)&nbsp;--字段名同上</p>

<p>&nbsp;</p>

<p>--唯一约束:</p>

<p>alter&nbsp;table&nbsp;表名</p>

<p>add&nbsp;constraint&nbsp;UQ_字段名</p>

<p>unique&nbsp;(字段名)</p>

<p>&nbsp;</p>

<p>--外键约束：</p>

<p>alter&nbsp;table&nbsp;表名</p>

<p>add&nbsp;constraint&nbsp;FK_字段名--&quot;FK&quot;为外键的缩写</p>

<p>foreign&nbsp;key&nbsp;(字段名)&nbsp;references&nbsp;关联的表名(关联的字段名)&nbsp;--注意&#39;关联的表名&#39;和&#39;关联的字段名&#39;</p>

<p>&nbsp;</p>

<p>alter&nbsp;table&nbsp;表A&nbsp;add&nbsp;constraint&nbsp;FK_B&nbsp;foreign&nbsp;key&nbsp;(ticket_no)&nbsp;references&nbsp;表B(ticket_no)</p>

<p>alter&nbsp;table&nbsp;表A&nbsp;add&nbsp;constraint&nbsp;FK_C&nbsp;foreign&nbsp;key&nbsp;(person_no)&nbsp;references&nbsp;表C(person_no)</p>

<p>&nbsp;</p>

<p>alter&nbsp;table&nbsp;成绩表&nbsp;add&nbsp;constraint FK_StudentNo&nbsp;foreign&nbsp;key&nbsp;(StudentNo)&nbsp;references&nbsp;Student(StudentNo)</p>

<p>ON&nbsp;UPDATE&nbsp;CASCADE&nbsp;ON&nbsp;DELETE&nbsp;CASCADE</p>

<p>级联更新，级联删除，这样在删除主表Student时，成绩表中该学生的所有成绩都会删除。</p>

<p>&nbsp;</p>

<p>--检查约束:</p>

<p>alter&nbsp;table&nbsp;表名</p>

<p>add&nbsp;constraint&nbsp;CK_字段名</p>

<p>check&nbsp;(条件表达式)&nbsp;--条件表达式中的条件用关系运算符连接</p>

<p>&nbsp;</p>

<p>--默认值约束:</p>

<p>alter&nbsp;table&nbsp;表名</p>

<p>add&nbsp;constraint&nbsp;DF_字段名</p>

<p>default&nbsp;&#39;默认值&#39;&nbsp;for&nbsp;字段名--其中的&#39;默认值&#39;为你想要默认的值，注意&#39;for&#39;</p>

<p>&nbsp;</p>

<h3>--删除创建的约束:</h3>

<p>alter&nbsp;table&nbsp;表名 drop&nbsp;constraint&nbsp;约束名--约束名为你前面创建的如：PK_字段这样的约束名</p>

<p>alter table [test] drop &nbsp;[foreign key] &nbsp;FK_test_student;</p>

<p>--注意：如果约束是在创建表的时候创建的，则不能用命令删除</p>

<p>--只能在&#39;企业管理器&#39;里面删除</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<h3>--&nbsp;获取SqlServer中表结构</h3>

<p>SELECT&nbsp;syscolumns.name,systypes.name,syscolumns.isnullable,</p>

<p>syscolumns.length</p>

<p>FROM&nbsp;syscolumns,systypes</p>

<p>WHERE&nbsp;syscolumns.xusertype&nbsp;=&nbsp;systypes.xusertype</p>

<p>AND&nbsp;syscolumns.id&nbsp;=&nbsp;OBJECT_ID(&#39;Student&#39;)</p>

<p>&nbsp;</p>

<h3>--&nbsp;单独查询表递增字段</h3>

<p>SELECT&nbsp;[name]&nbsp;FROM&nbsp;syscolumns&nbsp;WHERE</p>

<p>id&nbsp;=&nbsp;OBJECT_ID(N&#39;Student&#39;)&nbsp;AND&nbsp;COLUMNPROPERTY(id,name,&#39;IsIdentity&#39;)=1</p>

<p>&nbsp;</p>

<h3>--&nbsp;获取表主外键约束</h3>

<p>EXEC&nbsp;sp_helpconstraint&nbsp;&#39;StuResults&#39;</p>

<p>&nbsp;</p>

<h3>--&nbsp;查询表主键外键信息</h3>

<p>SELECT&nbsp;sysobjects.id objectId,OBJECT_NAME(sysobjects.parent_obj)&nbsp;tableName,</p>

<p>sysobjects.name&nbsp;constraintName,&nbsp;sysobjects.xtype&nbsp;AS&nbsp;constraintType,</p>

<p>syscolumns.name&nbsp;AS&nbsp;columnName</p>

<p>FROM&nbsp;sysobjects&nbsp;INNER&nbsp;JOIN&nbsp;sysconstraints</p>

<p>ON&nbsp;sysobjects.xtype&nbsp;in(&#39;C&#39;,&nbsp;&#39;F&#39;,&nbsp;&#39;PK&#39;,&nbsp;&#39;UQ&#39;,&nbsp;&#39;D&#39;)</p>

<p>AND&nbsp;sysobjects.id&nbsp;=&nbsp;sysconstraints.constid</p>

<p>LEFT&nbsp;OUTER&nbsp;JOIN&nbsp;syscolumns&nbsp;ON&nbsp;sysconstraints.id&nbsp;=&nbsp;syscolumns.id</p>

<p>WHERE&nbsp;OBJECT_NAME(sysobjects.parent_obj)=&#39;StuResults&#39;</p>
