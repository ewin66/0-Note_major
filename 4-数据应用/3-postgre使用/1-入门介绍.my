<h1>PostgreSQL</h1>

<p>PostgreSQL是以<a href="https://baike.baidu.com/item/%E5%8A%A0%E5%B7%9E%E5%A4%A7%E5%AD%A6" target="_blank">加州大学</a>伯克利分校计算机系开发的 POSTGRES，现在已经更名为PostgreSQL，版本 4.2为基础的对象<a href="https://baike.baidu.com/item/%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F" target="_blank">关系型数据库管理系统</a>（ORDBMS）。PostgreSQL支持大部分 SQL标准并且提供了许多其他现代特性：复杂查询、<a href="https://baike.baidu.com/item/%E5%A4%96%E9%94%AE/1232333" target="_blank">外键</a>、<a href="https://baike.baidu.com/item/%E8%A7%A6%E5%8F%91%E5%99%A8/16782" target="_blank">触发器</a>、视图、<a href="https://baike.baidu.com/item/%E4%BA%8B%E5%8A%A1/5945882" target="_blank">事务</a>完整性、<a href="https://baike.baidu.com/item/MVCC" target="_blank">MVCC</a>。同样，PostgreSQL 可以用许多方法扩展，比如， 通过增加新的数据类型、函数、操作符、<a href="https://baike.baidu.com/item/%E8%81%9A%E9%9B%86%E5%87%BD%E6%95%B0/6704258" target="_blank">聚集函数</a>、索引。免费使用、修改、和分发 PostgreSQL，不管是私用、商用、还是学术研究使用。</p>

<h2>主要特点</h2>

<h3>特点与优势</h3>

<p><a href="https://baike.baidu.com/item/PostgreSQL/530240" target="_blank">PostgreSQL</a> 是一个免费的对象-关系数据库服务器(数据库管理系统)，它在灵活的 BSD-风格许可证下发行。它提供了相对其他开放源代码数据库系统(比如 MySQL 和 Firebird)，和专有系统(比如 Oracle、Sybase、IBM 的 DB2 和 Microsoft SQL Server)之外的另一种选择。</p>

<p>PostgreSQL 不寻常的名字导致一些读者停下来尝试拼读它，特别是那些把SQL拼读为"sequel"的人。PostgreSQL 开发者把它拼读为 "post-gress-Q-L"。它也经常被简略念为 "postgres"。<sup> [1]</sup></p>

<p>事实上， PostgreSQL 的特性覆盖了 SQL-2/SQL-92 和 SQL-3/SQL-99，首先，它包括了可以说是目前世界上最丰富的数据类型的支持，其中有些数据类型可以说连商业数据库都不具备， 比如 IP 类型和几何类型等；其次，PostgreSQL 是全功能的自由软件数据库，很长时间以来，PostgreSQL 是唯一支持<a href="https://baike.baidu.com/item/%E4%BA%8B%E5%8A%A1" target="_blank">事务</a>、<a href="https://baike.baidu.com/item/%E5%AD%90%E6%9F%A5%E8%AF%A2" target="_blank">子查询</a>、多版本并行控制系统（<a href="https://baike.baidu.com/item/MVCC" target="_blank">MVCC</a>）、<a href="https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E5%AE%8C%E6%95%B4%E6%80%A7" target="_blank">数据完整性</a>检查等特性的唯一的一种自由软件的<a href="https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F" target="_blank">数据库管理系统</a>。 Inprise 的 InterBase 以及<a href="https://baike.baidu.com/item/SAP" target="_blank">SAP</a>等厂商将其原先专有软件开放为自由软件之后才打破了这个唯一。最后，PostgreSQL拥有一支非常活跃的开发队伍，而且在许多黑客的努力下，PostgreSQL 的质量日益提高。</p>

<p>从技术角度来讲，PostgreSQL 采用的是比较经典的<a href="https://baike.baidu.com/item/C%2FS" target="_blank">C/S</a>（client/server）结构，也就是一个客户端对应一个服务器端<a href="https://baike.baidu.com/item/%E5%AE%88%E6%8A%A4%E8%BF%9B%E7%A8%8B" target="_blank">守护进程</a>的模式，这个守护进程分析客户端来的查询请求，生成规划树，进行数据检索并最终把结果格式化输出后返回给客户端。为了便于客户端的程序的编写，由<a href="https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%9C%8D%E5%8A%A1%E5%99%A8" target="_blank">数据库服务器</a>提供了统一的客户端 C 接口。而不同的客户端接口都是源自这个 C 接口，比如<a href="https://baike.baidu.com/item/ODBC" target="_blank">ODBC</a>，<a href="https://baike.baidu.com/item/JDBC" target="_blank">JDBC</a>，<a href="https://baike.baidu.com/item/Python" target="_blank">Python</a>，<a href="https://baike.baidu.com/item/Perl" target="_blank">Perl</a>，<a href="https://baike.baidu.com/item/Tcl" target="_blank">Tcl</a>，<a href="https://baike.baidu.com/item/C%2FC%2B%2B" target="_blank">C/C++</a>，<a href="https://baike.baidu.com/item/ESQL" target="_blank">ESQL</a>等， 同时也要指出的是，PostgreSQL 对接口的支持也是非常丰富的，几乎支持所有类型的数据库客户端接口。这一点也可以说是 PostgreSQL 一大优点。</p>

<h3>架构</h3>

<p>PostgreSQL强壮的一个原因源于它的架构。和商业数据库一样，PostgreSQL可以用于C/S(客户/服务器)环境。这对于用户和开发人员有很多好处。</p>

<p>PostgreSQL安装核心是数据库服务端进程。它允许在一个独立服务器上。需要访问存储在数据库中的数据的应用程序必须通过数据库进程。这些客户端程序无法直接访问数据，即使它们和服务程序在同一台机器上。<sup> [2]</sup></p>

<h2>版本历史</h2>

<p><strong>早期版本</strong></p>

<p>被称为 PostgreSQL (发音为Post-gress-cue-ell)的对象-<a href="https://baike.baidu.com/item/%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F" target="_blank">关系型数据库管理系统</a>（有一段时间被称为 Postgres95）是从伯克利写的 POSTGRES 软件包发展而来的。经过十几年的发展， PostgreSQL 是世界上可以获得的最先进的开放源码的<a href="https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F" target="_blank">数据库系统</a>， 它提供了多版本并发控制，支持几乎所有 SQL<a href="https://baike.baidu.com/item/%E6%9E%84%E4%BB%B6" target="_blank">构件</a>（包括<a href="https://baike.baidu.com/item/%E5%AD%90%E6%9F%A5%E8%AF%A2" target="_blank">子查询</a>，事务和用户定 义类型和函数）， 并且可以获得非常广阔范围的（开发）语言绑定 （包括 C，C++，<a href="https://baike.baidu.com/item/Java/85979" target="_blank">Java</a>，perl，tcl，和 python）。</p>

<p><strong>Postgres95</strong></p>

<p>在 1994 年， Andrew Yu 和 Jolly Chen 向 POSTGRES 中增加了 SQL 语言的<a href="https://baike.baidu.com/item/%E8%A7%A3%E9%87%8A%E5%99%A8" target="_blank">解释器</a>。并随后将 Postgres95 源代码发布到互联网上供大家使用， 成为一个开放源码的，原先伯克利 POSTGRES 代码的继承者。</p>

<p>Postgres95 所有源代码都是完全的 ANSI C ， 而且代码量减少了 25%。并且有许多内部修改以利于提高性能和代码的维护性。 Postgres95 版本 1.0.x 在进行 Wisconsin Benchmark 测试时大概比 POSTGRES v4.2 快 30-50%。</p>

<p><strong>目前版本</strong></p>

<p>到了 1996 年， "Postgres95"改成新名字 PostgreSQL 用于反映最初的 POSTGRES 和最新的使用 SQL 的版本之间的关系。 同时版本号也 重新从 6.0 开始， 将版本号放回到最初的由 伯克利 POSTGRES 项目开始的顺序中。</p>

<p>Postgres95 版本的开发重点放在标明和理解现有的后端代码的问题上。 PostgreSQL 开发重点转到了 一些有争议的特性和功能上面，当然各个方面的工作同时都在进行。</p>

<p>目前，PostgresSQL的稳定版本到了9.6.3，具有非常丰富的特性和商业级数据库管理系统的质量。</p>

<h2>软件改进</h2>

<p>除了修正了一些错误，下面的是一些主要改进：</p>

<h3>查询语言</h3>

<p>原来的查询语言 PostQUEL 被 SQL 取代（在 server 端实现）。在 PostgreSQL 之前还不支持<a href="https://baike.baidu.com/item/%E5%AD%90%E6%9F%A5%E8%AF%A2" target="_blank">子查询</a>）（但这个功能可以在 Postgres95 里面由用户定义的 SQL 函数实现）。重新实现了聚集。同时还增加了对 GROUP BY 查询子句的支持。 C 程序仍可以调用 libpq<a href="https://baike.baidu.com/item/%E6%8E%A5%E5%8F%A3%E5%87%BD%E6%95%B0" target="_blank">接口函数</a>。</p>

<p>新增加了利用 GNU Readline 进行交互 SQL 查询（psql）。 这个程序很大程度上取代了老的 monitor 程序。</p>

<h3>前端库</h3>

<p>增加了新的前端库， libpgtcl， 用以支持以 Tcl为基础的客户端。一个样本 shell， pgtclsh，提供了新的 Tcl 命令用于 Tcl 程序和 Postgres95 后端之间的交互。</p>

<p>彻底重写了大对象的接口。 保留了将大对象倒转（Inversion ）作为存储大对象的唯一机制。 （去掉了倒转（Inversion ）文件系统。）</p>

<p>去掉了记录级（instance-level ）的规则系统。 但我们仍然可以通过重写规则使用规则。</p>

<h3>特性教程</h3>

<p>在发布的源码中增加了一个简短的常用 SQL 和 Postgres95 特有的 SQL 特性的教程。</p>

<p>用GNU make （取代了 BSD make）用于制作。 Postgres95 可以使用不加补丁的 GCC （修正了偶数字节数据（ doubles ）的对齐问题）。</p>

<h2>软件项目</h2>

<p>Michael Stonebraker 领导的 POSTGRES 项目是由防务高级研究项目局（DARPA）， 陆军研究办公室（ARO），国家科学基金（NSF）， 以及 ESL, Inc 共同赞助的。 POSTGRES 的实现始于 1986 年， 该系统最初的概念详见 POSTGRES的设计。 最早的数据模型定义见 The POSTGRES Data Model。 当时的规则<a href="https://baike.baidu.com/item/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1" target="_blank">系统设计</a>在 POSTGRES 规则系统的设计 里描述. 存储管理器的理论基础和<a href="https://baike.baidu.com/item/%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84" target="_blank">体系结构</a>在 POSTGRES<a href="https://baike.baidu.com/item/%E5%AD%98%E5%82%A8%E7%B3%BB%E7%BB%9F" target="_blank">存储系统</a>的设计 里有详细描述。</p>

<p>从那以后，POSTGRES 经历了几次主要的版本更新。 第一个"演示性"系统在 1987 年便可使用了， 并且在 1988 年的 ACM-SIGMOD 大会上展出。在 1989 年六月发布了版本 1给一些外部的用户使用。 为了回应用户对第一个规则系统的批评，作者重新设计了规则系统，并在1990年6月发布了使用新规则系统的版本 2。 版本 3 在1991年出现， 增加了多存储管理器的支持， 并且改进了查 询执行器， 重新编写了规则系统。 从那以后，随后的版本直到 Postgres95 发布前工作都集中在移植性和可靠性上。</p>

<p>POSTGRES 已经在许多研究或实际的应用中得到了应用。 这些应用包括： 一个财务数据分析系统，一个喷气引擎性能监控软件包，一个小行星跟踪数据库， 一个医疗信息数据库和一些地理信息系统。 POSTGRES 还被许多大学用于教学用途。 Illustra Information Technologies Illustra Information Technologies (并入 Informix) 拿到代码并使之商业化。在 1992 年 POSTGRES 成为 Sequoia 2000 科学计算计划的首要数据管理器。</p>

<p>到了 1993 年，外部用户的数量几乎翻番。随着用户的增加。 用于<a href="https://baike.baidu.com/item/%E6%BA%90%E4%BB%A3%E7%A0%81" target="_blank">源代码</a>维护的时间日益增加 占用了太多本应该用于数据库研究的时间， 为了减少支持的负担，伯克利的POSTGRES 项目在版本 4.2 时正式终止。</p>

<h2>版本发布</h2>

<p>2013年10月10日，PostgreSQL 正式发布9.3.1版本。</p>

<p>2012年09月10日，PostgreSQL 宣布 9.2 正式版发布了！该版本主要在性能方面有很大的提升，也包括一些新的 SQL 特性以及复制支持方面，主要内容包括：</p>

<p>允许查询直接从索引中获取数据，避免访问堆数据 (<em>index-only scans</em>)</p>

<p>允许查询计划器为指定参数值生成自定义的计划，甚至是用了 Prepared Statement</p>

<p>提升计划器通过内部索引扫描来使用嵌套循环</p>

<p>允许流复制从节点将数据转到其他从节点 (cascading replication)</p>

<p>允许pg_basebackup对待机的服务器进行基准备份</p>

<p>增加新工具pg_receivexlog用来收集WAL 文件的改动</p>

<p>增加SP-GiST(Space-Partitioned GiST) 索引访问方法</p>

<p>支持range data types</p>

<p>增加<a href="https://baike.baidu.com/item/JSON" target="_blank">JSON</a>数据类型</p>

<p>为视图增加security_barrier选项</p>

<p>允许 libpq 连接字符串使用URI格式</p>

<p>支技HP-UX</p>

<p>为 libpq 增加single-row processing mode以更好的处理大结果集。<sup> [3-4]</sup></p>

<h2>软件特征</h2>

<h3>函数</h3>

<p>通过函数，可以在数据库服务器端执行指令程序。尽管这样的指令程序可以使用基本的SQL语句写成，但是由于其缺乏<a href="https://baike.baidu.com/item/%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6" target="_blank">流程控制</a>等功能，所以在PostgreSQL中引入了使用其它程序语言编写函数的能力，包括：</p>

<ul>
<li>
<p>一个内置的名为<a href="https://baike.baidu.com/item/PL%2FpgSQL" target="_blank">PL/pgSQL</a>的过程语言，类似于Oracle的<a href="https://baike.baidu.com/item/PL%2FSQL" target="_blank">PL/SQL</a>；</p>
</li>
<li>
<p>包括PL/Perl，plPHP，PL/Python，PL/Ruby，PL/sh，PL/Tcl与PL/Scheme在内的脚本语言；</p>
</li>
<li>
<p>编译语言：C，<a href="https://baike.baidu.com/item/C%2B%2B" target="_blank">C++</a>，或Java（通过PL/Java）。</p>
</li>
<li>
<p>R统计语言（PL/R）。</p>
</li>
</ul>

<p>以上部分的语言，甚至可以在触发器内执行。PostgreSQL支持行返回函数：它们的输出是一系列行类型数据的集合，可以在查询中当作表来使用。函数也可以被定义成以创建者或者调用者的身份运行。在某些场合，或者其他的数据库产品中，函数也会被称为“<a href="https://baike.baidu.com/item/%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B" target="_blank">存储过程</a>”，但技术上这两者并未有太大分别。</p>

<h3>索引</h3>

<p>在PostgreSQL中，用户可以自定义<a href="https://baike.baidu.com/item/%E7%B4%A2%E5%BC%95" target="_blank">索引</a>方法，或使用内置的<a href="https://baike.baidu.com/item/B-tree" target="_blank">B-tree</a>，<a href="https://baike.baidu.com/item/%E5%93%88%E5%B8%8C%E8%A1%A8" target="_blank">哈希表</a>与<a href="https://baike.baidu.com/item/GiST" target="_blank">GiST</a>索引。PostgreSQL的索引功能同时也具有以下功能：</p>

<ul>
<li>
<p>反向索引检索：无须额外的索引就能实现类似ORDER BY<em>field</em>DESC的操作。</p>
</li>
<li>
<p><strong>表达式索引</strong>：可以建立基于表达式值而非数值或列的索引。</p>
</li>
<li>
<p><strong>部分索引</strong>：仅索引表的部分，可以通过在CREATE INDEX语句口添加WHERE从句以创建更小的索引。</p>
</li>
<li>
<p><strong><a href="https://baike.baidu.com/item/%E4%BD%8D%E5%9B%BE%E7%B4%A2%E5%BC%95" target="_blank">位图索引</a></strong>扫描：从8.1版开始支持此功能。该功能将读取多个索引，生成表示它们之间符合查询标准的<a href="https://baike.baidu.com/item/%E5%A4%9A%E5%85%83%E7%BB%84" target="_blank">多元组</a><a href="https://baike.baidu.com/item/%E4%BA%A4%E9%9B%86" target="_blank">交集</a>的位图。这样解决了混合索引的问题。在一个具有20列的表中，理论上能创建20! 个索引，在实际应用中已不现实。使用位图索引扫描后，在每次查询时，它将能把约束条件中所涉及列各自的索引进行任意的排列组合。</p>
</li>
</ul>

<h3>触发器</h3>

<p>触发器是由SQL语句查询所触发的事件。如：一个INSERT语句可能触发一个检查数据完整性的触发器。触发器通常由INSERT或UPDATE语句触发。</p>

<p>在PostgreSQL中，可在数据表上设置<a href="https://baike.baidu.com/item/%E8%A7%A6%E5%8F%91%E5%99%A8" target="_blank">触发器</a>，但无法在视图中设置（对视图的UPDATE或者INSERT操作可以使用规则（RULE）定义）。多个触发器可依据字母顺序依次执行。此外，除了使用内嵌的PL/PgSQL语言之外，触发器的函数也可以用PL/Perl，PL/Python等语言编写。</p>

<h3>并发控制</h3>

<p>PostgreSQL使用多版本并发控制（MVCC，Multiversion concurrency control）系统进行<a href="https://baike.baidu.com/item/%E5%B9%B6%E5%8F%91%E6%8E%A7%E5%88%B6" target="_blank">并发控制</a>，该系统向每个用户提供了一个数据库的“快照”，用户在事务内所作的每个修改，对于其他的用户都不可见，直到该事务成功提交。这从很大程度上减少了对读取锁的依赖，同时保证了数据库高效地符合ACID原则。</p>

<h3>规则</h3>

<p>规则（RULE）允许一个查询能被重写，通常被用作实现可更新的视图。</p>

<h3>数据类型</h3>

<p>PostgreSQL内置丰富的数据类型，包括：</p>

<ul>
<li>
<p>任意精度的数值</p>
</li>
<li>
<p>无限制长度文本</p>
</li>
<li>
<p>几何图元</p>
</li>
<li>
<p><a href="https://baike.baidu.com/item/IP%E5%9C%B0%E5%9D%80" target="_blank">IP地址</a>与<a href="https://baike.baidu.com/item/IPv6" target="_blank">IPv6</a>地址</p>
</li>
<li>
<p><a href="https://baike.baidu.com/item/%E6%97%A0%E7%B1%BB%E5%9F%9F%E9%97%B4%E8%B7%AF%E7%94%B1" target="_blank">无类域间路由</a>地址块，<a href="https://baike.baidu.com/item/MAC%E5%9C%B0%E5%9D%80" target="_blank">MAC地址</a></p>
</li>
<li>
<p>数组</p>
</li>
</ul>

<p>此外，用户可以创建自定义数据类型，通常通过PostgreSQL的<a href="https://baike.baidu.com/item/GiST" target="_blank">GiST</a>机制，它们也能被很好得索引，比如<a href="https://baike.baidu.com/item/PostGIS" target="_blank">PostGIS</a><a href="https://baike.baidu.com/item/%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F" target="_blank">地理信息系统</a>的数据类型。</p>

<h3>定义对象</h3>

<p>用户可以为数据库内几乎所有的对象定义新的类型，包括：</p>

<ul>
<li>
<p>索引</p>
</li>
<li>
<p>操作符（可<a href="https://baike.baidu.com/item/%E9%87%8D%E8%BD%BD" target="_blank">重载</a>现有操作符。）</p>
</li>
<li>
<p><a href="https://baike.baidu.com/item/%E8%81%9A%E5%90%88%E5%87%BD%E6%95%B0" target="_blank">聚合函数</a></p>
</li>
<li>
<p>数据域</p>
</li>
<li>
<p>数据类型转换</p>
</li>
<li>
<p>会话（编码转换）</p>
</li>
</ul>

<h3>继承</h3>

<p>数据表的结构及属性可从一个“父”表中继承，数据将在两者间共享。对子表中数据的插入或者删除也将在父表中体现，同样，对父表作出的修改，比如添加列等操作也会导致子表产生相应改动。该功能尚未完全实现，实际上，表的约束尚不能继承。比如，在一张外联参考了父表id字段的表中，插入一条具有子表中某条记录id数据的记录会导致失败，因为PostgreSQL在对父表的外键约束检查中不会检查子表的内容。</p>

<p>扩展</p>

<ul>
<li>
<p>地理数据对象：<a href="https://baike.baidu.com/item/PostGIS" target="_blank">PostGIS</a>GPL</p>
</li>
<li>
<p><a href="https://baike.baidu.com/item/%E5%85%A8%E6%96%87%E6%A3%80%E7%B4%A2" target="_blank">全文检索</a>：通过Tsearch2或OpenFTS， 将在8.3版本中内嵌Tsearch2。GPL</p>
</li>
<li>
<p>多种异步主/从复制方案，包括Slony-I（BSD授权），Mammoth Replicator</p>
</li>
<li>
<p>XML/XSLT支持contrib软件包中的XPath扩展GPL</p>
</li>
</ul>
