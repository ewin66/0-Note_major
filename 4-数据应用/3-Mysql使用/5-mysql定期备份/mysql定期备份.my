<h1><a href="http://www.cnblogs.com/taomylife/p/8022104.html" id="cb_post_title_url">linux下如何实现mysql数据库每天自动备份定时备份</a></h1>

<h1>概述</h1>

<p>&emsp;&emsp;备份是容灾的基础，是指为防止系统出现操作失误或系统故障导致数据丢失，而将全部或部分数据集合从应用主机的硬盘或阵列复制到其它的存储介质的过程。而对于一些网站、系统来说，数据库就是一切，所以做好数据库的备份是至关重要的！</p>

<h2>备份是什么？</h2>

<p><img alt="这里写图片描述" src="http://img.blog.csdn.net/20150930153104216" title="" /></p>

<h2>为什么要备份</h2>

<p><img alt="这里写图片描述" src="http://img.blog.csdn.net/20150930153226713" title="" /></p>

<h2>容灾方案建设</h2>

<p><img alt="这里写图片描述" src="http://img.blog.csdn.net/20150930153209031" title="" /></p>

<h2>存储介质</h2>

<p>光盘&nbsp;<br />
磁带&nbsp;<br />
硬盘&nbsp;<br />
磁盘阵列&nbsp;<br />
DAS：直接附加存储&nbsp;<br />
NAS：网络附加存储&nbsp;<br />
SAN：存储区域网络&nbsp;<br />
云存储</p>

<p>这里主要以本地磁盘为存储介质讲一下计划任务的添加使用，基本的备份脚本，其它存储介质只是介质的访问方式可能不大一样。</p>

<h1>1、查看磁盘空间情况：</h1>

<p>既然是定时备份，就要选择一个空间充足的磁盘空间，避免出现因空间不足导致备份失败，数据丢失的恶果！&nbsp;<br />
存储到当前磁盘这是最简单，却是最不推荐的；服务器有多块硬盘，最好是把备份存放到另一块硬盘上；有条件就选择更好更安全的存储介质；</p>

<pre>
<code># df -h
Filesystem                    Size  Used Avail Use% Mounted on
/dev/mapper/VolGroup-lv_root   50G   46G  1.6G  97% /
tmpfs                         1.9G   92K  1.9G   1% /dev/shm
/dev/sda1                     485M   39M  421M   9% /boot
/dev/mapper/VolGroup-lv_home  534G  3.6G  503G   1% /home</code></pre>

<h1>2、创建备份目录：</h1>

<p>上面我们使用命令看出/home下空间比较充足，所以可以考虑在/home保存备份文件；</p>

<pre>
<code>cd /home
mkdir backup
cd backup</code></pre>

<h1>3、创建备份Shell脚本:</h1>

<p>注意把以下命令中的DatabaseName换为实际的数据库名称；&nbsp;<br />
当然，你也可以使用其实的命名规则！</p>

<pre>
<code>vi bkDatabaseName.sh</code></pre>

<p>输入/粘贴以下内容：</p>

<pre>
<code>#!/bin/bash
mysqldump -uusername -ppassword DatabaseName &gt; /home/backup/DatabaseName_$(date +%Y%m%d_%H%M%S).sql</code></pre>

<p>对备份进行压缩：</p>

<pre>
<code>#!/bin/bash
mysqldump -uusername -ppassword DatabaseName | gzip &gt; /home/backup/DatabaseName_$(date +%Y%m%d_%H%M%S).sql.gz</code></pre>

<p><strong>注意：</strong>&nbsp;<br />
把 username 替换为实际的用户名；&nbsp;<br />
把 password 替换为实际的密码；&nbsp;<br />
把 DatabaseName 替换为实际的数据库名；</p>

<h1>4、添加可执行权限：</h1>

<pre>
<code>chmod u+x bkDatabaseName.sh</code></pre>

<p>添加可执行权限之后先执行一下，看看脚本有没有错误，能不能正常使用；</p>

<pre>
<code>./bkDatabaseName.sh</code></pre>

<h1>5、添加计划任务</h1>

<h2>检测或安装 crontab</h2>

<p>确认crontab是否安装：&nbsp;<br />
执行 crontab 命令如果报 command not found，就表明没有安装</p>

<pre>
<code># crontab
-bash: crontab: command not found</code></pre>

<ul>
	<li>1</li>
	<li>2</li>
</ul>

<p>如时没有安装 crontab，需要先安装它，具体步骤请参考：&nbsp;<br />
<a href="http://blog.csdn.net/testcs_dn/article/details/48780971" target="_blank">CentOS下使用yum命令安装计划任务程序crontab</a>&nbsp;<br />
<a href="http://blog.csdn.net/testcs_dn/article/details/48781553" target="_blank">使用rpm命令从CentOS系统盘安装计划任务程序crontab</a></p>

<h2>添加计划任务</h2>

<p>执行命令：</p>

<pre>
<code>crontab -e</code></pre>

<p>这时就像使用vi编辑器一样，可以对计划任务进行编辑。&nbsp;<br />
输入以下内容并保存：</p>

<pre>
<code>*/1 * * * * /home/backup/bkDatabaseName.sh</code></pre>

<p>具体是什么意思呢？&nbsp;<br />
意思是每一分钟执行一次shell脚本&ldquo;/home/backup/bkDatabaseName.sh&rdquo;。</p>

<h1>6、测试任务是否执行</h1>

<p>很简单，我们就执行几次&ldquo;ls&rdquo;命令，看看一分钟过后文件有没有被创建就可以了！</p>

<p>如果任务执行失败了，可以通过以下命令查看任务日志：</p>

<pre>
<code># tail -f /var/log/cron</code></pre>

<p>输出类似如下：</p>

<pre>
<code>Sep 30 14:01:01 bogon run-parts(/etc/cron.hourly)[2503]: starting 0anacron
Sep 30 14:01:01 bogon run-parts(/etc/cron.hourly)[2512]: finished 0anacron
Sep 30 15:01:01 bogon CROND[3092]: (root) CMD (run-parts /etc/cron.hourly)
Sep 30 15:01:01 bogon run-parts(/etc/cron.hourly)[3092]: starting 0anacron
Sep 30 15:01:02 bogon run-parts(/etc/cron.hourly)[3101]: finished 0anacron
Sep 30 15:50:44 bogon crontab[3598]: (root) BEGIN EDIT (root)
Sep 30 16:01:01 bogon CROND[3705]: (root) CMD (run-parts /etc/cron.hourly)
Sep 30 16:01:01 bogon run-parts(/etc/cron.hourly)[3705]: starting 0anacron
Sep 30 16:01:01 bogon run-parts(/etc/cron.hourly)[3714]: finished 0anacron
Sep 30 16:15:29 bogon crontab[3598]: (root) END EDIT (root)</code></pre>
