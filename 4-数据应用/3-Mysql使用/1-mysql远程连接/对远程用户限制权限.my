<h1><a href="https://www.cnblogs.com/bethal/p/5512755.html" id="cb_post_title_url">mysql grant授权</a></h1>

<h2>grant 授权语法</h2>

<p>MySQL 赋予用户权限命令的简单格式可概括为：</p>

<p>grant&nbsp;权限&nbsp;on&nbsp;数据库对象&nbsp;to&nbsp;用户</p>

<h2>一、grant 普通数据用户，查询、插入、更新、删除 数据库中所有表数据的权利。</h2>

<p>grant&nbsp;select&nbsp;on&nbsp;testdb.*&nbsp;to&nbsp;common_user@&#39;%&#39;<br />
grant&nbsp;insert&nbsp;on&nbsp;testdb.*&nbsp;to&nbsp;common_user@&#39;%&#39;<br />
grant&nbsp;update&nbsp;on&nbsp;testdb.*&nbsp;to&nbsp;common_user@&#39;%&#39;<br />
grant&nbsp;delete&nbsp;on&nbsp;testdb.*&nbsp;to&nbsp;common_user@&#39;%&#39;</p>

<p>或者，用一条 MySQL 命令来替代：</p>

<p>grant&nbsp;select,&nbsp;insert,&nbsp;update,&nbsp;delete&nbsp;on&nbsp;testdb.*&nbsp;to&nbsp;common_user@&#39;%&#39;</p>

<h2>二、grant 数据库开发人员，创建表、索引、视图、存储过程、函数。。。等权限。</h2>

<p>grant 创建、修改、删除 MySQL 数据表结构权限。</p>

<p>grant&nbsp;create&nbsp;on&nbsp;testdb.*&nbsp;to&nbsp;developer@&#39;192.168.0.%&#39;;<br />
grant&nbsp;alter&nbsp;on&nbsp;testdb.*&nbsp;to&nbsp;developer@&#39;192.168.0.%&#39;;<br />
grant&nbsp;drop&nbsp;on&nbsp;testdb.*&nbsp;to&nbsp;developer@&#39;192.168.0.%&#39;;</p>

<p>grant 操作 MySQL 外键权限。</p>

<p>grant&nbsp;references&nbsp;on&nbsp;testdb.*&nbsp;to&nbsp;developer@&#39;192.168.0.%&#39;;</p>

<p>grant 操作 MySQL 临时表权限。</p>

<p>grant&nbsp;create&nbsp;temporary&nbsp;tables&nbsp;on&nbsp;testdb.*&nbsp;to&nbsp;developer@&#39;192.168.0.%&#39;;</p>

<p>grant 操作 MySQL 索引权限。</p>

<p>grant&nbsp;index&nbsp;on&nbsp;testdb.*&nbsp;to&nbsp;developer@&#39;192.168.0.%&#39;;</p>

<p>grant 操作 MySQL 视图、查看视图源代码 权限。</p>

<p>grant&nbsp;create&nbsp;view&nbsp;on&nbsp;testdb.*&nbsp;to&nbsp;developer@&#39;192.168.0.%&#39;;<br />
grant&nbsp;show&nbsp;view&nbsp;on&nbsp;testdb.*&nbsp;to&nbsp;developer@&#39;192.168.0.%&#39;;</p>

<p>grant 操作 MySQL 存储过程、函数 权限。</p>

<p>grant&nbsp;create&nbsp;routine&nbsp;on&nbsp;testdb.*&nbsp;to&nbsp;developer@&#39;192.168.0.%&#39;;&nbsp;--&nbsp;now, can show procedure status<br />
grant&nbsp;alter&nbsp;routine&nbsp;on&nbsp;testdb.*&nbsp;to&nbsp;developer@&#39;192.168.0.%&#39;;&nbsp;--&nbsp;now, you can drop a procedure<br />
grant&nbsp;execute&nbsp;on&nbsp;testdb.*&nbsp;to&nbsp;developer@&#39;192.168.0.%&#39;;</p>

<h2>三、grant 普通 DBA 管理某个 MySQL 数据库的权限。</h2>

<p>grant&nbsp;all&nbsp;privileges&nbsp;on&nbsp;testdb&nbsp;to&nbsp;dba@&#39;localhost&#39;</p>

<p>其中，关键字 &ldquo;privileges&rdquo; 可以省略。</p>

<h2>四、grant 高级 DBA 管理 MySQL 中所有数据库的权限。</h2>

<p>grant&nbsp;all&nbsp;on&nbsp;*.*&nbsp;to&nbsp;dba@&#39;localhost&#39;</p>

<h2>五、MySQL grant 权限，分别可以作用在多个层次上。</h2>

<p>1. grant 作用在整个 MySQL 服务器上：</p>

<p>grant&nbsp;select&nbsp;on&nbsp;*.*&nbsp;to&nbsp;dba@localhost;&nbsp;--&nbsp;dba 可以查询 MySQL 中所有数据库中的表。<br />
grant&nbsp;all&nbsp;on&nbsp;*.*&nbsp;to&nbsp;dba@localhost;&nbsp;--&nbsp;dba 可以管理 MySQL 中的所有数据库</p>

<p>2. grant 作用在单个数据库上：</p>

<p>grant&nbsp;select&nbsp;on&nbsp;testdb.*&nbsp;to&nbsp;dba@localhost;&nbsp;--&nbsp;dba 可以查询 testdb 中的表。</p>

<p>3. grant 作用在单个数据表上：</p>

<p>grant&nbsp;select,&nbsp;insert,&nbsp;update,&nbsp;delete&nbsp;on&nbsp;testdb.orders&nbsp;to&nbsp;dba@localhost;</p>

<p>这里在给一个用户授权多张表时，可以多次执行以上语句。例如：</p>

<p>grant&nbsp;select(user_id,username)&nbsp;on&nbsp;smp.users&nbsp;to&nbsp;mo_user@&#39;%&#39;&nbsp;identified&nbsp;by&nbsp;&#39;123345&#39;;<br />
grant&nbsp;select&nbsp;on&nbsp;smp.mo_sms&nbsp;to&nbsp;mo_user@&#39;%&#39;&nbsp;identified&nbsp;by&nbsp;&#39;123345&#39;;<br />
4. grant 作用在表中的列上：</p>

<p>grant&nbsp;select(id, se, rank)&nbsp;on&nbsp;testdb.apache_log&nbsp;to&nbsp;dba@localhost;</p>

<p>5. grant 作用在存储过程、函数上：</p>

<p>grant&nbsp;execute&nbsp;on&nbsp;procedure&nbsp;testdb.pr_add&nbsp;to&nbsp;&#39;dba&#39;@&#39;localhost&#39;<br />
grant&nbsp;execute&nbsp;on&nbsp;function&nbsp;testdb.fn_add&nbsp;to&nbsp;&#39;dba&#39;@&#39;localhost&#39;</p>

<h2>六、查看 MySQL 用户权限</h2>

<p>查看当前用户（自己）权限：</p>

<p>show grants;</p>

<p>查看其他 MySQL 用户权限：</p>

<p>show grants&nbsp;for&nbsp;dba@localhost;</p>

<h2>七、撤销已经赋予给 MySQL 用户权限的权限。</h2>

<p>revoke 跟 grant 的语法差不多，只需要把关键字 &ldquo;to&rdquo; 换成 &ldquo;from&rdquo; 即可：</p>

<p>grant&nbsp;all&nbsp;on&nbsp;*.*&nbsp;to&nbsp;dba@localhost;<br />
revoke&nbsp;all&nbsp;on&nbsp;*.*&nbsp;from&nbsp;dba@localhost;</p>

<h2>八、MySQL grant、revoke 用户权限注意事项</h2>

<p>1. grant, revoke 用户权限后，该用户只有重新连接 MySQL 数据库，权限才能生效。</p>

<p>2. 如果想让授权的用户，也可以将这些权限 grant 给其他用户，需要选项 &ldquo;grant option&ldquo;</p>

<p>grant&nbsp;select&nbsp;on&nbsp;testdb.*&nbsp;to&nbsp;dba@localhost&nbsp;with&nbsp;grant&nbsp;option;</p>

<p>这个特性一般用不到。实际中，数据库权限最好由 DBA 来统一管理。</p>

<p>*************************************************************************************************</p>

<p>遇到 SELECT command denied to user &#39;用户名&#39;@&#39;主机名&#39; for table &#39;表名&#39; 这种错误，解决方法是需要把吧后面的表名授权，即是要你授权核心数据库也要。</p>

<p>我遇到的是SELECT command denied to user &#39;my&#39;@&#39;%&#39; for table &#39;proc&#39;，是调用存储过程的时候出现，原以为只要把指定的数据库授权就行了，什么存储过程、函数等都不用再管了，谁知道也要把数据库mysql的proc表授权</p>

<p>*************************************************************************************************</p>

<p>mysql授权表共有5个表：user、db、host、tables_priv和columns_priv。</p>

<p>授权表的内容有如下用途：<br />
<strong>user表</strong><br />
user表列出可以连接服务器的用户及其口令，并且它指定他们有哪种全局（超级用户）权限。在user表启用的任何权限均是全局权限，并适用于所有数据库。例如，如果你启用了DELETE权限，在这里列出的用户可以从任何表中删除记录，所以在你这样做之前要认真考虑。</p>

<p><strong>db表</strong><br />
db表列出数据库，而用户有权限访问它们。在这里指定的权限适用于一个数据库中的所有表。</p>

<p><strong>host表</strong><br />
host表与db表结合使用在一个较好层次上控制特定主机对数据库的访问权限，这可能比单独使用db好些。这个表不受GRANT和REVOKE语句的影响，所以，你可能发觉你根本不是用它。</p>

<p><strong>tables_priv表</strong><br />
tables_priv表指定表级权限，在这里指定的一个权限适用于一个表的所有列。</p>

<p><strong>columns_priv表</strong><br />
columns_priv表指定列级权限。这里指定的权限适用于一个表的特定列。</p>
