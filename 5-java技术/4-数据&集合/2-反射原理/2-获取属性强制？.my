<h1>反射可以强制获取属性</h1>

<h2>field</h2>

<p>通过Class实例获取field信息:</p>

<ul>
<li>getField(name):获取某个public的field(包括父类).</li>
<li>getDeclaredField(name):获取当前类的某个field(不限定public不包括父类).</li>
<li>getFields():所以public的field(包含父类).</li>
<li>getDeclaredFields(name):获取当前类的所有field(不限定public不包含父类).<br />
一个Field对象包含一个field的所有信息:</li>
<li>getName():获得名称.</li>
<li>getType():属性定一个类型.</li>
<li>getModifiers():获得属性定义的修饰符(public/private/等).<br />
通过Field对象或得field的值:</li>
<li>获取field的值<br />
通过get(Object获取一个实例的该字段.制作演示,Integer中的value是private,无法直接获取.)</li>
<li>设置field的值.<br />
通过set(Object,Object)设置一个实例中该字段的值.</li>
</ul>

<p>注意:</p>

<ol>
<li>当field的限制符为private的时候,不能通过field.get(Object)和field.set(Object,Object)来操作这个字符,这是需要在前面加上field.setAccessible(true)来强制访问.</li>
<li>操作非静态字段的时候通过field.get(Object)获取,而静态字段不需要实例化对象所以采用field.get(null)即可.field.set(Object,Object)也变为field.set(null,Object).</li>
<li>setAccessible(true)可能会失败,应为java定义了SecurityManager,SecurityManager的规则可以阻止对该Field设置accessible,例如该规则应用于所有java和javax开头的package(java核心类).</li>
</ol>

<h2>小节小结.</h2>

<ul>
<li>Field对象封装了字段的所有信息.</li>
<li>通过Class实例方法可以获得Field实例:getField/getFields/getDeclaredField/getDeclaredFields.</li>
<li>通过Field实例可以获取字段的信息:getName/getType/getModifiers</li>
<li>通过Field实例可以读取或者设置某个对象的字段:get(Object instance)/set(Object instance,Object fieldValue)</li>
<li>通过设置setAccessible(true)来访问非public字段(除了java核心类).</li>
</ul>
