<h1>提供一个Java中操作JSON格式的公共类</h1>

<p>JSON(JavaScript Object Notation) 是一种轻量级的数据交换格式。 它易于人阅读和编写，同时也易于程序解析和生成，相比XML它的体积更小。首先需要自己下载并引入JSON-lib包，JSON-lib包是一个beans,collections,maps,java arrays 和XML和JSON互相转换的包。</p>

<p>Java代码  收藏代码</p>

<p>import java.util.HashMap;   <br />
import java.util.Map;   <br />
import net.sf.json.JSONArray;   <br />
import net.sf.json.JSONObject;  <br />
public final class JSONUtil {  <br />
   <br />
    // 将String转换成JSON   <br />
    public static String string2json(String key, String value) {   <br />
        JSONObject object = new JSONObject();   <br />
        object.put(key, value);   <br />
        return object.toString();   <br />
    }  <br />
   <br />
    // 将数组转换成JSON   <br />
    public static String array2json(Object object) {   <br />
        JSONArray jsonArray = JSONArray.fromObject(object);   <br />
        return jsonArray.toString();   <br />
    }  <br />
   <br />
    // 将Map转换成JSON   <br />
    public static String map2json(Object object) {   <br />
        JSONObject jsonObject = JSONObject.fromObject(object);   <br />
        return jsonObject.toString();   <br />
    }  <br />
   <br />
    // 将domain对象转换成JSON   <br />
    public static String bean2json(Object object) {   <br />
        JSONObject jsonObject = JSONObject.fromObject(object);   <br />
        return jsonObject.toString();   <br />
    }  <br />
   <br />
    // 将JSON转换成domain对象,其中beanClass为domain对象的Class   <br />
    public static Object json2Object(String json, Class beanClass) {   <br />
        return JSONObject.toBean(JSONObject.fromObject(json), beanClass);   <br />
    }  <br />
   <br />
    // 将JSON转换成String   <br />
    public static String json2String(String json, String key) {   <br />
        JSONObject jsonObject = JSONObject.fromObject(json);   <br />
        return jsonObject.get(key).toString();   <br />
    }   <br />
  <br />
    // 将JSON转换成数组,其中valueClass为数组中存放对象的Class   <br />
    public static Object json2Array(String json, Class valueClass) {   <br />
        JSONArray jsonArray = JSONArray.fromObject(json);   <br />
        return JSONArray.toArray(jsonArray, valueClass);   <br />
    }  <br />
  <br />
    // 将JSON转换成Map,其中valueClass为Map中value的Class,keyArray为Map的key   <br />
    public static Map json2Map(Object[] keyArray, String json, Class valueClass) {   <br />
        JSONObject jsonObject = JSONObject.fromObject(json);   <br />
        Map classMap = new HashMap();  <br />
   <br />
        for (int i = 0; i < keyArray.length; i++) {   <br />
            classMap.put(keyArray[i], valueClass);   <br />
        }   <br />
        return (Map) JSONObject.toBean(jsonObject, Map.class, classMap);   <br />
    }  <br />
}  </p>
