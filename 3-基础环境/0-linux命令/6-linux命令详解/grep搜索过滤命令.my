<h1><a href="http://www.cnblogs.com/forestwolf/p/6413916.html" id="cb_post_title_url">Linux常用指令---grep(搜索过滤)</a></h1>

<p>Linux系统中grep命令是一种强大的文本搜索工具，它能使用正则表达式搜索文本，并把匹&nbsp;配的行打印出来。grep全称是Global&nbsp;Regular&nbsp;Expression&nbsp;Print，表示全局正则表达式版本，它的使用权限是所有用户。</p>

<p>grep的工作方式是这样的，它在一个或多个文件中搜索字符串模板。如果模板包括空格，则必须被引用，模板后的所有字符串被看作文件名。搜索的结果被送到标准输出，不影响原文件内容。</p>

<p>grep可用于shell脚本，因为grep通过返回一个状态值来说明搜索的状态，如果模板搜索成功，则返回0，如果搜索不成功，则返回1，如果搜索的文件不存在，则返回2。我们利用这些返回值就可进行一些自动化的文本处理工作。</p>

<h2>1．命令格式：</h2>

<p>grep&nbsp;[option]&nbsp;pattern&nbsp;file</p>

<h2>2．命令功能：</h2>

<p>用于过滤/搜索的特定字符。可使用正则表达式能多种命令配合使用，使用上十分灵活。</p>

<h2>3．命令参数：</h2>

<p>-a&nbsp;&nbsp;&nbsp;--text&nbsp;&nbsp;&nbsp;#不要忽略二进制的数据。&nbsp;&nbsp;&nbsp;</p>

<p>-A&lt;显示行数&gt;&nbsp;&nbsp;&nbsp;--after-context=&lt;显示行数&gt;&nbsp;&nbsp;&nbsp;#除了显示符合范本样式的那一列之外，并显示该行之后的内容。&nbsp;&nbsp;&nbsp;</p>

<p>-b&nbsp;&nbsp;&nbsp;--byte-offset&nbsp;&nbsp;&nbsp;#在显示符合样式的那一行之前，标示出该行第一个字符的编号。&nbsp;&nbsp;&nbsp;</p>

<p>-B&lt;显示行数&gt;&nbsp;&nbsp;&nbsp;--before-context=&lt;显示行数&gt;&nbsp;&nbsp;&nbsp;#除了显示符合样式的那一行之外，并显示该行之前的内容。&nbsp;&nbsp;&nbsp;</p>

<p>-c&nbsp;&nbsp;&nbsp;&nbsp;--count&nbsp;&nbsp;&nbsp;#计算符合样式的列数。&nbsp;&nbsp;&nbsp;</p>

<p>-C&lt;显示行数&gt;&nbsp;&nbsp;&nbsp;&nbsp;--context=&lt;显示行数&gt;或-&lt;显示行数&gt;&nbsp;&nbsp;&nbsp;#除了显示符合样式的那一行之外，并显示该行之前后的内容。&nbsp;&nbsp;&nbsp;</p>

<p>-d&nbsp;&lt;动作&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--directories=&lt;动作&gt;&nbsp;&nbsp;&nbsp;#当指定要查找的是目录而非文件时，必须使用这项参数，否则grep指令将回报信息并停止动作。&nbsp;&nbsp;&nbsp;</p>

<p>-e&lt;范本样式&gt;&nbsp;&nbsp;--regexp=&lt;范本样式&gt;&nbsp;&nbsp;&nbsp;#指定字符串做为查找文件内容的样式。&nbsp;&nbsp;&nbsp;</p>

<p>-E&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--extended-regexp&nbsp;&nbsp;&nbsp;#将样式为延伸的普通表示法来使用。&nbsp;&nbsp;&nbsp;</p>

<p>-f&lt;规则文件&gt;&nbsp;&nbsp;--file=&lt;规则文件&gt;&nbsp;&nbsp;&nbsp;#指定规则文件，其内容含有一个或多个规则样式，让grep查找符合规则条件的文件内容，格式为每行一个规则样式。&nbsp;&nbsp;&nbsp;</p>

<p>-F&nbsp;&nbsp;&nbsp;--fixed-regexp&nbsp;&nbsp;&nbsp;#将样式视为固定字符串的列表。&nbsp;&nbsp;&nbsp;</p>

<p>-G&nbsp;&nbsp;&nbsp;--basic-regexp&nbsp;&nbsp;&nbsp;#将样式视为普通的表示法来使用。&nbsp;&nbsp;&nbsp;</p>

<p>-h&nbsp;&nbsp;&nbsp;--no-filename&nbsp;&nbsp;&nbsp;#在显示符合样式的那一行之前，不标示该行所属的文件名称。&nbsp;&nbsp;&nbsp;</p>

<p>-H&nbsp;&nbsp;&nbsp;--with-filename&nbsp;&nbsp;&nbsp;#在显示符合样式的那一行之前，表示该行所属的文件名称。&nbsp;&nbsp;&nbsp;</p>

<p>-i&nbsp;&nbsp;&nbsp;&nbsp;--ignore-case&nbsp;&nbsp;&nbsp;#忽略字符大小写的差别。&nbsp;&nbsp;&nbsp;</p>

<p>-l&nbsp;&nbsp;&nbsp;&nbsp;--file-with-matches&nbsp;&nbsp;&nbsp;#列出文件内容符合指定的样式的文件名称。&nbsp;&nbsp;&nbsp;</p>

<p>-L&nbsp;&nbsp;&nbsp;--files-without-match&nbsp;&nbsp;&nbsp;#列出文件内容不符合指定的样式的文件名称。&nbsp;&nbsp;&nbsp;</p>

<p>-n&nbsp;&nbsp;&nbsp;--line-number&nbsp;&nbsp;&nbsp;#在显示符合样式的那一行之前，标示出该行的列数编号。&nbsp;&nbsp;&nbsp;</p>

<p>-q&nbsp;&nbsp;&nbsp;--quiet或--silent&nbsp;&nbsp;&nbsp;#不显示任何信息。&nbsp;&nbsp;&nbsp;</p>

<p>-r&nbsp;&nbsp;&nbsp;--recursive&nbsp;&nbsp;&nbsp;#此参数的效果和指定&ldquo;-d&nbsp;recurse&rdquo;参数相同。&nbsp;&nbsp;&nbsp;</p>

<p>-s&nbsp;&nbsp;&nbsp;--no-messages&nbsp;&nbsp;&nbsp;#不显示错误信息。&nbsp;&nbsp;&nbsp;</p>

<p>-v&nbsp;&nbsp;&nbsp;--revert-match&nbsp;&nbsp;&nbsp;#显示不包含匹配文本的所有行。&nbsp;&nbsp;&nbsp;</p>

<p>-V&nbsp;&nbsp;&nbsp;--version&nbsp;&nbsp;&nbsp;#显示版本信息。&nbsp;&nbsp;&nbsp;</p>

<p>-w&nbsp;&nbsp;&nbsp;--word-regexp&nbsp;&nbsp;&nbsp;#只显示全字符合的列。&nbsp;&nbsp;&nbsp;</p>

<p>-x&nbsp;&nbsp;&nbsp;&nbsp;--line-regexp&nbsp;&nbsp;&nbsp;#只显示全列符合的列。&nbsp;&nbsp;&nbsp;</p>

<p>-y&nbsp;&nbsp;&nbsp;#此参数的效果和指定&ldquo;-i&rdquo;参数相同。</p>

<h2>4．规则表达式：</h2>

<p>grep的规则表达式:</p>

<p>^&nbsp;&nbsp;#锚定行的开始&nbsp;如：&#39;^grep&#39;匹配所有以grep开头的行。&nbsp;&nbsp;&nbsp;&nbsp;</p>

<p>$&nbsp;&nbsp;#锚定行的结束&nbsp;如：&#39;grep$&#39;匹配所有以grep结尾的行。&nbsp;&nbsp;&nbsp;&nbsp;</p>

<p>.&nbsp;&nbsp;#匹配一个非换行符的字符&nbsp;如：&#39;gr.p&#39;匹配gr后接一个任意字符，然后是p。&nbsp;&nbsp;&nbsp;&nbsp;</p>

<p>*&nbsp;&nbsp;#匹配零个或多个先前字符&nbsp;如：&#39;*grep&#39;匹配所有一个或多个空格后紧跟grep的行。&nbsp;&nbsp;&nbsp;&nbsp;</p>

<p>.*&nbsp;&nbsp;&nbsp;#一起用代表任意字符。&nbsp;&nbsp;&nbsp;</p>

<p>[]&nbsp;&nbsp;&nbsp;#匹配一个指定范围内的字符，如&#39;[Gg]rep&#39;匹配Grep和grep。&nbsp;&nbsp;&nbsp;&nbsp;</p>

<p>[^]&nbsp;&nbsp;#匹配一个不在指定范围内的字符，如：&#39;[^A-FH-Z]rep&#39;匹配不包含A-R和T-Z的一个字母开头，紧跟rep的行。&nbsp;&nbsp;&nbsp;&nbsp;</p>

<p>\(..\)&nbsp;&nbsp;#标记匹配字符，如&#39;\(love\)&#39;，love被标记为1。&nbsp;&nbsp;&nbsp;&nbsp;</p>

<p>\&lt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#锚定单词的开始，如:&#39;\&lt;grep&#39;匹配包含以grep开头的单词的行。&nbsp;&nbsp;&nbsp;&nbsp;</p>

<p>\&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#锚定单词的结束，如&#39;grep\&gt;&#39;匹配包含以grep结尾的单词的行。&nbsp;&nbsp;&nbsp;&nbsp;</p>

<p>x\{m\}&nbsp;&nbsp;#重复字符x，m次，如：&#39;0\{5\}&#39;匹配包含5个o的行。&nbsp;&nbsp;&nbsp;&nbsp;</p>

<p>x\{m,\}&nbsp;&nbsp;#重复字符x,至少m次，如：&#39;o\{5,\}&#39;匹配至少有5个o的行。&nbsp;&nbsp;&nbsp;&nbsp;</p>

<p>x\{m,n\}&nbsp;&nbsp;#重复字符x，至少m次，不多于n次，如：&#39;o\{5,10\}&#39;匹配5--10个o的行。&nbsp;&nbsp;&nbsp;</p>

<p>\w&nbsp;&nbsp;&nbsp;&nbsp;#匹配文字和数字字符，也就是[A-Za-z0-9]，如：&#39;G\w*p&#39;匹配以G后跟零个或多个文字或数字字符，然后是p。&nbsp;&nbsp;&nbsp;</p>

<p>\W&nbsp;&nbsp;&nbsp;&nbsp;#\w的反置形式，匹配一个或多个非单词字符，如点号句号等。&nbsp;&nbsp;&nbsp;</p>

<p>\b&nbsp;&nbsp;&nbsp;&nbsp;#单词锁定符，如:&nbsp;&#39;\bgrep\b&#39;只匹配grep。&nbsp;&nbsp;</p>

<p>POSIX字符:</p>

<p>为了在不同国家的字符编码中保持一至，POSIX(The&nbsp;Portable&nbsp;Operating&nbsp;System&nbsp;Interface)增加了特殊的字符类，如[:alnum:]是[A-Za-z0-9]的另一个写法。要把它们放到[]号内才能成为正则表达式，如[A-&nbsp;Za-z0-9]或[[:alnum:]]。在linux下的grep除fgrep外，都支持POSIX的字符类。</p>

<p>[:alnum:]&nbsp;&nbsp;&nbsp;&nbsp;#文字数字字符&nbsp;&nbsp;&nbsp;</p>

<p>[:alpha:]&nbsp;&nbsp;&nbsp;&nbsp;#文字字符&nbsp;&nbsp;&nbsp;</p>

<p>[:digit:]&nbsp;&nbsp;&nbsp;&nbsp;#数字字符&nbsp;&nbsp;&nbsp;</p>

<p>[:graph:]&nbsp;&nbsp;&nbsp;&nbsp;#非空字符（非空格、控制字符）&nbsp;&nbsp;&nbsp;</p>

<p>[:lower:]&nbsp;&nbsp;&nbsp;&nbsp;#小写字符&nbsp;&nbsp;&nbsp;</p>

<p>[:cntrl:]&nbsp;&nbsp;&nbsp;&nbsp;#控制字符&nbsp;&nbsp;&nbsp;</p>

<p>[:print:]&nbsp;&nbsp;&nbsp;&nbsp;#非空字符（包括空格）&nbsp;&nbsp;&nbsp;</p>

<p>[:punct:]&nbsp;&nbsp;&nbsp;&nbsp;#标点符号&nbsp;&nbsp;&nbsp;</p>

<p>[:space:]&nbsp;&nbsp;&nbsp;&nbsp;#所有空白字符（新行，空格，制表符）&nbsp;&nbsp;&nbsp;</p>

<p>[:upper:]&nbsp;&nbsp;&nbsp;&nbsp;#大写字符&nbsp;&nbsp;&nbsp;</p>

<p>[:xdigit:]&nbsp;&nbsp;&nbsp;#十六进制数字（0-9，a-f，A-F）&nbsp;&nbsp;</p>

<h2>5．使用实例：</h2>

<h3>实例1：查找指定进程</h3>

<p>命令：</p>

<p>ps&nbsp;-ef|grep&nbsp;svn</p>

<p>输出：</p>

<p>[root@localhost&nbsp;~]#&nbsp;ps&nbsp;-ef|grep&nbsp;svn</p>

<p>root&nbsp;4943&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;Dec05&nbsp;?&nbsp;&nbsp;&nbsp;00:00:00&nbsp;svnserve&nbsp;-d&nbsp;-r&nbsp;/opt/svndata/grape/</p>

<p>root&nbsp;16867&nbsp;16838&nbsp;&nbsp;0&nbsp;19:53&nbsp;pts/0&nbsp;&nbsp;&nbsp;&nbsp;00:00:00&nbsp;grep&nbsp;svn</p>

<p>[root@localhost&nbsp;~]#</p>

<p>说明：</p>

<p>第一条记录是查找出的进程；第二条结果是grep进程本身，并非真正要找的进程。</p>

<h3>实例2：查找指定进程个数</h3>

<p>命令：</p>

<p>ps&nbsp;-ef|grep&nbsp;svn&nbsp;-c</p>

<p>ps&nbsp;-ef|grep&nbsp;-c&nbsp;svn</p>

<p>输出：</p>

<p>[root@localhost&nbsp;~]#&nbsp;ps&nbsp;-ef|grep&nbsp;svn&nbsp;-c</p>

<p>2</p>

<p>[root@localhost&nbsp;~]#&nbsp;ps&nbsp;-ef|grep&nbsp;-c&nbsp;svn&nbsp;</p>

<p>2</p>

<p>[root@localhost&nbsp;~]#</p>

<p>说明：</p>

<h3>实例3：从文件中读取关键词进行搜索</h3>

<p>命令：</p>

<p>cat&nbsp;test.txt&nbsp;|&nbsp;grep&nbsp;-f&nbsp;test2.txt</p>

<p>输出：</p>

<p>[root@localhost&nbsp;test]#&nbsp;cat&nbsp;test.txt&nbsp;</p>

<p>hnlinux</p>

<p>peida.cnblogs.com</p>

<p>ubuntu</p>

<p>ubuntu&nbsp;linux</p>

<p>redhat</p>

<p>Redhat</p>

<p>linuxmint</p>

<p>[root@localhost&nbsp;test]#&nbsp;cat&nbsp;test2.txt&nbsp;</p>

<p>linux</p>

<p>Redhat</p>

<p>[root@localhost&nbsp;test]#&nbsp;cat&nbsp;test.txt&nbsp;|&nbsp;grep&nbsp;-f&nbsp;test2.txt</p>

<p>hnlinux</p>

<p>ubuntu&nbsp;linux</p>

<p>Redhat</p>

<p>linuxmint</p>

<p>[root@localhost&nbsp;test]#</p>

<p>说明：</p>

<p>输出test.txt文件中含有从test2.txt文件中读取出的关键词的内容行</p>

<h3>实例4：从文件中读取关键词进行搜索&nbsp;且显示行号</h3>

<p>命令：</p>

<p>cat&nbsp;test.txt&nbsp;|&nbsp;grep&nbsp;-nf&nbsp;test2.txt</p>

<p>输出：</p>

<p>[root@localhost&nbsp;test]#&nbsp;cat&nbsp;test.txt&nbsp;</p>

<p>hnlinux</p>

<p>peida.cnblogs.com</p>

<p>ubuntu</p>

<p>ubuntu&nbsp;linux</p>

<p>redhat</p>

<p>Redhat</p>

<p>linuxmint</p>

<p>[root@localhost&nbsp;test]#&nbsp;cat&nbsp;test2.txt&nbsp;</p>

<p>linux</p>

<p>Redhat</p>

<p>[root@localhost&nbsp;test]#&nbsp;cat&nbsp;test.txt&nbsp;|&nbsp;grep&nbsp;-nf&nbsp;test2.txt</p>

<p>1:hnlinux</p>

<p>4:ubuntu&nbsp;linux</p>

<p>6:Redhat</p>

<p>7:linuxmint</p>

<p>[root@localhost&nbsp;test]#</p>

<p>说明：</p>

<p>输出test.txt文件中含有从test2.txt文件中读取出的关键词的内容行，并显示每一行的行号</p>

<h3>实例5：从文件中查找关键词</h3>

<p>命令：</p>

<p>grep&nbsp;&#39;linux&#39;&nbsp;test.txt</p>

<p>输出：</p>

<p>[root@localhost&nbsp;test]#&nbsp;grep&nbsp;&#39;linux&#39;&nbsp;test.txt&nbsp;</p>

<p>hnlinux</p>

<p>ubuntu&nbsp;linux</p>

<p>linuxmint</p>

<p>[root@localhost&nbsp;test]#&nbsp;grep&nbsp;-n&nbsp;&#39;linux&#39;&nbsp;test.txt&nbsp;</p>

<p>1:hnlinux</p>

<p>4:ubuntu&nbsp;linux</p>

<p>7:linuxmint</p>

<p>[root@localhost&nbsp;test]#</p>

<p>说明：</p>

<h3>实例6：从多个文件中查找关键词</h3>

<p>命令：</p>

<p>grep&nbsp;&#39;linux&#39;&nbsp;test.txt&nbsp;test2.txt</p>

<p>输出：</p>

<p>[root@localhost&nbsp;test]#&nbsp;grep&nbsp;-n&nbsp;&#39;linux&#39;&nbsp;test.txt&nbsp;test2.txt&nbsp;</p>

<p>test.txt:1:hnlinux</p>

<p>test.txt:4:ubuntu&nbsp;linux</p>

<p>test.txt:7:linuxmint</p>

<p>test2.txt:1:linux</p>

<p>[root@localhost&nbsp;test]#&nbsp;grep&nbsp;&#39;linux&#39;&nbsp;test.txt&nbsp;test2.txt&nbsp;</p>

<p>test.txt:hnlinux</p>

<p>test.txt:ubuntu&nbsp;linux</p>

<p>test.txt:linuxmint</p>

<p>test2.txt:linux</p>

<p>[root@localhost&nbsp;test]#</p>

<p>说明：</p>

<p>多文件时，输出查询到的信息内容行时，会把文件的命名在行最前面输出并且加上&quot;:&quot;作为标示符</p>

<p>实例7：grep不显示本身进程</p>

<p>命令：</p>

<p>ps&nbsp;aux|grep&nbsp;\[s]sh</p>

<p>ps&nbsp;aux&nbsp;|&nbsp;grep&nbsp;ssh&nbsp;|&nbsp;grep&nbsp;-v&nbsp;&quot;grep&quot;</p>

<p>输出：</p>

<p>[root@localhost&nbsp;test]#&nbsp;ps&nbsp;aux|grep&nbsp;ssh</p>

<p>root&nbsp;&nbsp;&nbsp;2720&nbsp;&nbsp;0.0&nbsp;&nbsp;0.0&nbsp;&nbsp;62656&nbsp;&nbsp;1212&nbsp;?&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ss&nbsp;&nbsp;&nbsp;Nov02&nbsp;&nbsp;&nbsp;0:00&nbsp;/usr/sbin/sshd</p>

<p>root&nbsp;&nbsp;16834&nbsp;&nbsp;0.0&nbsp;&nbsp;0.0&nbsp;&nbsp;88088&nbsp;&nbsp;3288&nbsp;?&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ss&nbsp;&nbsp;&nbsp;19:53&nbsp;&nbsp;&nbsp;0:00&nbsp;sshd:&nbsp;root@pts/0&nbsp;</p>

<p>root&nbsp;&nbsp;16901&nbsp;&nbsp;0.0&nbsp;&nbsp;0.0&nbsp;&nbsp;61180&nbsp;&nbsp;&nbsp;764&nbsp;pts/0&nbsp;&nbsp;S+&nbsp;&nbsp;&nbsp;20:31&nbsp;&nbsp;&nbsp;0:00&nbsp;grep&nbsp;ssh</p>

<p>[root@localhost&nbsp;test]#&nbsp;ps&nbsp;aux|grep&nbsp;\[s]sh]</p>

<p>[root@localhost&nbsp;test]#&nbsp;ps&nbsp;aux|grep&nbsp;\[s]sh</p>

<p>root&nbsp;&nbsp;&nbsp;2720&nbsp;&nbsp;0.0&nbsp;&nbsp;0.0&nbsp;&nbsp;62656&nbsp;&nbsp;1212&nbsp;?&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ss&nbsp;&nbsp;&nbsp;Nov02&nbsp;&nbsp;&nbsp;0:00&nbsp;/usr/sbin/sshd</p>

<p>root&nbsp;&nbsp;16834&nbsp;&nbsp;0.0&nbsp;&nbsp;0.0&nbsp;&nbsp;88088&nbsp;&nbsp;3288&nbsp;?&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ss&nbsp;&nbsp;&nbsp;19:53&nbsp;&nbsp;&nbsp;0:00&nbsp;sshd:&nbsp;root@pts/0&nbsp;</p>

<p>[root@localhost&nbsp;test]#&nbsp;ps&nbsp;aux&nbsp;|&nbsp;grep&nbsp;ssh&nbsp;|&nbsp;grep&nbsp;-v&nbsp;&quot;grep&quot;</p>

<p>root&nbsp;&nbsp;&nbsp;2720&nbsp;&nbsp;0.0&nbsp;&nbsp;0.0&nbsp;&nbsp;62656&nbsp;&nbsp;1212&nbsp;?&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ss&nbsp;&nbsp;&nbsp;Nov02&nbsp;&nbsp;&nbsp;0:00&nbsp;/usr/sbin/sshd</p>

<p>root&nbsp;&nbsp;16834&nbsp;&nbsp;0.0&nbsp;&nbsp;0.0&nbsp;&nbsp;88088&nbsp;&nbsp;3288&nbsp;?&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ss&nbsp;&nbsp;&nbsp;19:53&nbsp;&nbsp;&nbsp;0:00&nbsp;sshd:&nbsp;root@pts/0</p>

<p>说明：</p>

<p>实例8：找出已u开头的行内容</p>

<p>命令：</p>

<p>cat&nbsp;test.txt&nbsp;|grep&nbsp;^u</p>

<p>输出：</p>

<p>[root@localhost&nbsp;test]#&nbsp;cat&nbsp;test.txt&nbsp;|grep&nbsp;^u</p>

<p>ubuntu</p>

<p>ubuntu&nbsp;linux</p>

<p>[root@localhost&nbsp;test]#</p>

<p>说明：</p>

<p>实例9：输出非u开头的行内容</p>

<p>命令：</p>

<p>cat&nbsp;test.txt&nbsp;|grep&nbsp;^[^u]</p>

<p>输出：</p>

<p>[root@localhost&nbsp;test]#&nbsp;cat&nbsp;test.txt&nbsp;|grep&nbsp;^[^u]</p>

<p>hnlinux</p>

<p>peida.cnblogs.com</p>

<p>redhat</p>

<p>Redhat</p>

<p>linuxmint</p>

<p>[root@localhost&nbsp;test]#</p>

<p>说明：</p>

<p>实例10：输出以hat结尾的行内容</p>

<p>命令：</p>

<p>cat&nbsp;test.txt&nbsp;|grep&nbsp;hat$</p>

<p>输出：</p>

<p>[root@localhost&nbsp;test]#&nbsp;cat&nbsp;test.txt&nbsp;|grep&nbsp;hat$</p>

<p>redhat</p>

<p>Redhat</p>

<p>[root@localhost&nbsp;test]#</p>

<p>说明：</p>

<p>实例11：输出ip地址</p>

<p>命令：</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ifconfig&nbsp;eth0|grep&nbsp;-E&nbsp;&quot;([0-9]{1,3}\.){3}[0-9]&quot;</p>

<p>输出：</p>

<p>[root@localhost&nbsp;test]#&nbsp;ifconfig&nbsp;eth0|grep&nbsp;&quot;[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}&quot;</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;inet&nbsp;addr:192.168.120.204&nbsp;&nbsp;Bcast:192.168.120.255&nbsp;&nbsp;Mask:255.255.255.0</p>

<p>[root@localhost&nbsp;test]#&nbsp;ifconfig&nbsp;eth0|grep&nbsp;-E&nbsp;&quot;([0-9]{1,3}\.){3}[0-9]&quot;</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;inet&nbsp;addr:192.168.120.204&nbsp;&nbsp;Bcast:192.168.120.255&nbsp;&nbsp;Mask:255.255.255.0</p>

<p>[root@localhost&nbsp;test]#</p>

<p>说明：</p>

<p>实例12：显示包含ed或者at字符的内容行</p>

<p>命令：</p>

<p>cat&nbsp;test.txt&nbsp;|grep&nbsp;-E&nbsp;&quot;ed|at&quot;</p>

<p>输出：</p>

<p>[root@localhost&nbsp;test]#&nbsp;cat&nbsp;test.txt&nbsp;|grep&nbsp;-E&nbsp;&quot;peida|com&quot;</p>

<p>peida.cnblogs.com</p>

<p>[root@localhost&nbsp;test]#&nbsp;cat&nbsp;test.txt&nbsp;|grep&nbsp;-E&nbsp;&quot;ed|at&quot;</p>

<p>redhat</p>

<p>Redhat</p>

<p>[root@localhost&nbsp;test]#</p>

<p>说明：</p>

<p>实例13：显示当前目录下面以.txt&nbsp;结尾的文件中的所有包含每个字符串至少有7个连续小写字符的字符串的行</p>

<p>命令：</p>

<p>grep&nbsp;&#39;[a-z]\{7\}&#39;&nbsp;*.txt</p>

<p>输出：</p>

<p>[root@localhost&nbsp;test]#&nbsp;grep&nbsp;&#39;[a-z]\{7\}&#39;&nbsp;*.txt</p>

<p>test.txt:hnlinux</p>

<p>test.txt:peida.cnblogs.com</p>

<p>test.txt:linuxmint</p>

<p>[root@localhost&nbsp;test]#</p>

<p>&nbsp;</p>

<p>实例14:日志文件过大，不好查看，我们要从中查看自己想要的内容，或者得到同一类数据，比如说没有404日志信息的</p>

<p>命令：</p>

<p>grep&nbsp;&#39;.&#39;&nbsp;access1.log|grep&nbsp;-Ev&nbsp;&#39;404&#39;&nbsp;&gt;&nbsp;access2.log</p>

<p>grep&nbsp;&#39;.&#39;&nbsp;access1.log|grep&nbsp;-Ev&nbsp;&#39;(404|/photo/|/css/)&#39;&nbsp;&gt;&nbsp;access2.log</p>

<p>grep&nbsp;&#39;.&#39;&nbsp;access1.log|grep&nbsp;-E&nbsp;&#39;404&#39;&nbsp;&gt;&nbsp;access2.log</p>

<p>输出：</p>

<p>[root@localhost&nbsp;test]#&nbsp;grep&nbsp;&ldquo;.&rdquo;access1.log|grep&nbsp;-Ev&nbsp;&ldquo;404&rdquo;&nbsp;&gt;&nbsp;access2.log</p>

<p>说明：上面3句命令前面两句是在当前目录下对access1.log文件进行查找，找到那些不包含404的行，把它们放到access2.log中,后面去掉&rsquo;v&rsquo;,即是把有404的行放入access2.log</p>
