<h1>systemctl 命令完全指南</h1>

<p>本文导航</p>

<ul>
	<li><a href="javascript:void(0);" onclick="menuFolder(this);">-</a><a href="https://linux.cn/article-5926-1.html#3_782">Systemd初体验和Systemctl基础</a>02%

	<ul>
		<li>-<a href="https://linux.cn/article-5926-1.html#4_838">1. 首先检查你的系统中是否安装有systemd并确定当前安装的版本</a>03%</li>
		<li>-<a href="https://linux.cn/article-5926-1.html#4_1199">2. 检查systemd和systemctl的二进制文件和库文件的安装位置</a>04%</li>
		<li>-<a href="https://linux.cn/article-5926-1.html#4_1552">3. 检查systemd是否运行</a>05%</li>
		<li>-<a href="https://linux.cn/article-5926-1.html#4_2586">4. 分析systemd启动进程</a>09%</li>
		<li>-<a href="https://linux.cn/article-5926-1.html#4_2796">5. 分析启动时各个进程花费的时间</a>10%</li>
		<li>-<a href="https://linux.cn/article-5926-1.html#4_3198">6. 分析启动时的关键链</a>11%</li>
		<li>-<a href="https://linux.cn/article-5926-1.html#4_4685">7. 列出所有可用单元</a>17%</li>
		<li>-<a href="https://linux.cn/article-5926-1.html#4_5367">8. 列出所有运行中单元</a>19%</li>
		<li>-<a href="https://linux.cn/article-5926-1.html#4_6998">9. 列出所有失败单元</a>25%</li>
		<li>-<a href="https://linux.cn/article-5926-1.html#4_7604">10. 检查某个单元（如 cron.service）是否启用</a>28%</li>
		<li>-<a href="https://linux.cn/article-5926-1.html#4_7787">11. 检查某个单元或服务是否运行</a>28%</li>
	</ul>
	</li>
	<li><a href="javascript:void(0);" onclick="menuFolder(this);">-</a><a href="https://linux.cn/article-5926-1.html#3_8471">使用Systemctl控制并管理服务</a>31%
	<ul>
		<li>-<a href="https://linux.cn/article-5926-1.html#4_8530">12. 列出所有服务（包括启用的和禁用的）</a>31%</li>
		<li>-<a href="https://linux.cn/article-5926-1.html#4_9363">13. Linux中如何启动、重启、停止、重载服务以及检查服务（如 httpd.service）状态</a>34%</li>
		<li>-<a href="https://linux.cn/article-5926-1.html#4_10903">14. 如何激活服务并在启动时启用或禁用服务（即系统启动时自动启动服务）</a>40%</li>
		<li>-<a href="https://linux.cn/article-5926-1.html#4_11187">15. 如何屏蔽（让它不能启动）或显示服务（如 httpd.service）</a>41%</li>
		<li>-<a href="https://linux.cn/article-5926-1.html#4_11506">16. 使用systemctl命令杀死服务</a>42%</li>
	</ul>
	</li>
	<li><a href="javascript:void(0);" onclick="menuFolder(this);">-</a><a href="https://linux.cn/article-5926-1.html#3_13133">使用Systemctl控制并管理挂载点</a>48%
	<ul>
		<li>-<a href="https://linux.cn/article-5926-1.html#4_13195">17. 列出所有系统挂载点</a>48%</li>
		<li>-<a href="https://linux.cn/article-5926-1.html#4_13668">18. 挂载、卸载、重新挂载、重载系统挂载点并检查系统中挂载点状态</a>50%</li>
		<li>-<a href="https://linux.cn/article-5926-1.html#4_14650">19. 在启动时激活、启用或禁用挂载点（系统启动时自动挂载）</a>54%</li>
		<li>-<a href="https://linux.cn/article-5926-1.html#4_14905">20. 在Linux中屏蔽（让它不能启用）或可见挂载点</a>55%</li>
	</ul>
	</li>
	<li><a href="javascript:void(0);" onclick="menuFolder(this);">-</a><a href="https://linux.cn/article-5926-1.html#3_15197">使用Systemctl控制并管理套接口</a>56%
	<ul>
		<li>-<a href="https://linux.cn/article-5926-1.html#4_15259">21. 列出所有可用系统套接口</a>56%</li>
		<li>-<a href="https://linux.cn/article-5926-1.html#4_15912">22. 在Linux中启动、重启、停止、重载套接口并检查其状态</a>59%</li>
		<li>-<a href="https://linux.cn/article-5926-1.html#4_16614">23. 在启动时激活套接口，并启用或禁用它（系统启动时自启动）</a>61%</li>
		<li>-<a href="https://linux.cn/article-5926-1.html#4_16877">24. 屏蔽（使它不能启动）或显示套接口</a>62%</li>
	</ul>
	</li>
	<li><a href="javascript:void(0);" onclick="menuFolder(this);">-</a><a href="https://linux.cn/article-5926-1.html#3_17162">服务的CPU利用率（分配额）</a>63%
	<ul>
		<li>-<a href="https://linux.cn/article-5926-1.html#4_17221">25. 获取当前某个服务的CPU分配额（如httpd）</a>63%</li>
		<li>-<a href="https://linux.cn/article-5926-1.html#4_17553">26. 将某个服务（httpd.service）的CPU分配份额限制为2000 CPUShares/</a>65%</li>
		<li>-<a href="https://linux.cn/article-5926-1.html#4_18269">27. 检查某个服务的所有配置细节</a>67%</li>
		<li>-<a href="https://linux.cn/article-5926-1.html#4_18852">28. 分析某个服务（httpd）的关键链</a>70%</li>
		<li>-<a href="https://linux.cn/article-5926-1.html#4_20164">29. 获取某个服务（httpd）的依赖性列表</a>74%</li>
		<li>-<a href="https://linux.cn/article-5926-1.html#4_20763">30. 按等级列出控制组</a>77%</li>
		<li>-<a href="https://linux.cn/article-5926-1.html#4_21576">31. 按CPU、内存、输入和输出列出控制组</a>80%</li>
	</ul>
	</li>
	<li><a href="javascript:void(0);" onclick="menuFolder(this);">-</a><a href="https://linux.cn/article-5926-1.html#3_24188">控制系统运行等级</a>89%
	<ul>
		<li>-<a href="https://linux.cn/article-5926-1.html#4_24235">32. 启动系统救援模式</a>89%</li>
		<li>-<a href="https://linux.cn/article-5926-1.html#4_24488">33. 进入紧急模式</a>90%</li>
		<li>-<a href="https://linux.cn/article-5926-1.html#4_24794">34. 列出当前使用的运行等级</a>92%</li>
		<li>-<a href="https://linux.cn/article-5926-1.html#4_24955">35. 启动运行等级5，即图形模式</a>92%</li>
		<li>-<a href="https://linux.cn/article-5926-1.html#4_25155">36. 启动运行等级3，即多用户模式（命令行）</a>93%</li>
		<li>-<a href="https://linux.cn/article-5926-1.html#4_25373">36. 设置多用户模式或图形模式为默认运行等级</a>94%</li>
		<li>-<a href="https://linux.cn/article-5926-1.html#4_25598">37. 重启、停止、挂起、休眠系统或使系统进入混合睡眠</a>95%</li>
	</ul>
	</li>
</ul>

<p>Systemctl是一个systemd工具，主要负责控制systemd系统和服务管理器。</p>

<p>Systemd是一个系统管理守护进程、工具和库的集合，用于取代System V初始进程。Systemd的功能是用于集中管理和配置类UNIX系统。</p>

<p>在Linux生态系统中，Systemd被部署到了大多数的标准Linux发行版中，只有为数不多的几个发行版尚未部署。Systemd通常是所有其它守护进程的父进程，但并非总是如此。</p>

<p><img alt="使用Systemctl管理Linux服务" src="https://dn-linuxcn.qbox.me/data/attachment/album/201507/30/210221zg6czg8yogegegay.jpg" title="使用Systemctl管理Linux服务" /></p>

<p><em>使用Systemctl管理Linux服务</em></p>

<p>本文旨在阐明在运行systemd的系统上&ldquo;如何控制系统和服务&rdquo;。</p>

<h3>Systemd初体验和Systemctl基础</h3>

<h4>1. 首先检查你的系统中是否安装有systemd并确定当前安装的版本</h4>

<ol>
	<li><code># systemctl --version</code></li>
	<li>&nbsp;</li>
	<li><code>systemd 215</code></li>
	<li><code>+PAM +AUDIT +SELINUX +IMA +SYSVINIT +LIBCRYPTSETUP +GCRYPT +ACL +XZ -SECCOMP -APPARMOR</code></li>
</ol>

<p>上例中很清楚地表明，我们安装了215版本的systemd。</p>

<h4>2. 检查systemd和systemctl的二进制文件和库文件的安装位置</h4>

<ol>
	<li><code># whereis systemd </code></li>
	<li><code>systemd: /usr/lib/systemd /etc/systemd /usr/share/systemd /usr/share/man/man1/systemd.1.gz</code></li>
	<li>&nbsp;</li>
	<li>&nbsp;</li>
	<li><code># whereis systemctl</code></li>
	<li><code>systemctl: /usr/bin/systemctl /usr/share/man/man1/systemctl.1.gz</code></li>
</ol>

<h4>3. 检查systemd是否运行</h4>

<ol>
	<li><code># ps -eaf | grep [s]ystemd</code></li>
	<li>&nbsp;</li>
	<li><code>root 1 0 0 16:27 ? 00:00:00 /usr/lib/systemd/systemd --switched-root --system --deserialize 23</code></li>
	<li><code>root 444 1 0 16:27 ? 00:00:00 /usr/lib/systemd/systemd-journald</code></li>
	<li><code>root 469 1 0 16:27 ? 00:00:00 /usr/lib/systemd/systemd-udevd</code></li>
	<li><code>root 555 1 0 16:27 ? 00:00:00 /usr/lib/systemd/systemd-logind</code></li>
	<li><code>dbus 556 1 0 16:27 ? 00:00:00 /bin/dbus-daemon --system --address=systemd: --nofork --nopidfile --systemd-activation</code></li>
</ol>

<p><strong>注意</strong>：systemd是作为父进程（PID=1）运行的。在上面带（-e）参数的ps命令输出中，选择所有进程，（-a）选择除会话前导外的所有进程，并使用（-f）参数输出完整格式列表（即 -eaf）。</p>

<p>也请注意上例中后随的方括号和例子中剩余部分。方括号表达式是grep的字符类表达式的一部分。</p>

<h4>4. 分析systemd启动进程</h4>

<ol>
	<li><code># systemd-analyze</code></li>
	<li><code>Startup finished in 487ms (kernel) + 2.776s (initrd) + 20.229s (userspace) = 23.493s</code></li>
</ol>

<h4>5. 分析启动时各个进程花费的时间</h4>

<ol>
	<li><code># systemd-analyze blame</code></li>
	<li>&nbsp;</li>
	<li><code>8.565s mariadb.service</code></li>
	<li><code>7.991s webmin.service</code></li>
	<li><code>6.095s postfix.service</code></li>
	<li><code>4.311s httpd.service</code></li>
	<li><code>3.926s firewalld.service</code></li>
	<li><code>3.780s kdump.service</code></li>
	<li><code>3.238s tuned.service</code></li>
	<li><code>1.712s network.service</code></li>
	<li><code>1.394s lvm2-monitor.service</code></li>
	<li><code>1.126s systemd-logind.service</code></li>
	<li><code>....</code></li>
</ol>

<h4>6. 分析启动时的关键链</h4>

<ol>
	<li><code># systemd-analyze critical-chain</code></li>
	<li>&nbsp;</li>
	<li><code>The time after the unit is active or started is printed after the &quot;@&quot; character.</code></li>
	<li><code>The time the unit takes to start is printed after the &quot;+&quot; character.</code></li>
	<li>&nbsp;</li>
	<li><code>multi-user.target @20.222s</code></li>
	<li><code>└─mariadb.service @11.657s +8.565s</code></li>
	<li><code>└─network.target @11.168s</code></li>
	<li><code>└─network.service @9.456s +1.712s</code></li>
	<li><code>└─NetworkManager.service @8.858s +596ms</code></li>
	<li><code>└─firewalld.service @4.931s +3.926s</code></li>
	<li><code>└─basic.target @4.916s</code></li>
	<li><code>└─sockets.target @4.916s</code></li>
	<li><code>└─dbus.socket @4.916s</code></li>
	<li><code>└─sysinit.target @4.905s</code></li>
	<li><code>└─systemd-update-utmp.service @4.864s +39ms</code></li>
	<li><code>└─auditd.service @4.563s +301ms</code></li>
	<li><code>└─systemd-tmpfiles-setup.service @4.485s +69ms</code></li>
	<li><code>└─rhel-import-state.service @4.342s +142ms</code></li>
	<li><code>└─local-fs.target @4.324s</code></li>
	<li><code>└─boot.mount @4.286s +31ms</code></li>
	<li><code>└─systemd-fsck@dev-disk-by\x2duuid-79f594ad\x2da332\x2d4730\x2dbb5f\x2d85d19608096</code></li>
	<li><code>└─dev-disk-by\x2duuid-79f594ad\x2da332\x2d4730\x2dbb5f\x2d85d196080964.device @4</code></li>
</ol>

<p><strong>重要</strong>：Systemctl接受服务（.service），挂载点（.mount），套接口（.socket）和设备（.device）作为单元。</p>

<h4>7. 列出所有可用单元</h4>

<ol>
	<li><code># systemctl list-unit-files</code></li>
	<li>&nbsp;</li>
	<li><code>UNIT FILE STATE </code></li>
	<li><code>proc-sys-fs-binfmt_misc.automount static </code></li>
	<li><code>dev-hugepages.mount static </code></li>
	<li><code>dev-mqueue.mount static </code></li>
	<li><code>proc-sys-fs-binfmt_misc.mount static </code></li>
	<li><code>sys-fs-fuse-connections.mount static </code></li>
	<li><code>sys-kernel-config.mount static </code></li>
	<li><code>sys-kernel-debug.mount static </code></li>
	<li><code>tmp.mount disabled</code></li>
	<li><code>brandbot.path disabled</code></li>
	<li><code>.....</code></li>
</ol>

<h4>8. 列出所有运行中单元</h4>

<ol>
	<li><code># systemctl list-units</code></li>
	<li>&nbsp;</li>
	<li><code>UNIT LOAD ACTIVE SUB DESCRIPTION</code></li>
	<li><code>proc-sys-fs-binfmt_misc.automount loaded active waiting Arbitrary Executable File Formats File Syste</code></li>
	<li><code>sys-devices-pc...0-1:0:0:0-block-sr0.device loaded active plugged VBOX_CD-ROM</code></li>
	<li><code>sys-devices-pc...:00:03.0-net-enp0s3.device loaded active plugged PRO/1000 MT Desktop Adapter</code></li>
	<li><code>sys-devices-pc...00:05.0-sound-card0.device loaded active plugged 82801AA AC&#39;97 Audio Controller</code></li>
	<li><code>sys-devices-pc...:0:0-block-sda-sda1.device loaded active plugged VBOX_HARDDISK</code></li>
	<li><code>sys-devices-pc...:0:0-block-sda-sda2.device loaded active plugged LVM PV Qzyo3l-qYaL-uRUa-Cjuk-pljo-qKtX-VgBQ8</code></li>
	<li><code>sys-devices-pc...0-2:0:0:0-block-sda.device loaded active plugged VBOX_HARDDISK</code></li>
	<li><code>sys-devices-pl...erial8250-tty-ttyS0.device loaded active plugged /sys/devices/platform/serial8250/tty/ttyS0</code></li>
	<li><code>sys-devices-pl...erial8250-tty-ttyS1.device loaded active plugged /sys/devices/platform/serial8250/tty/ttyS1</code></li>
	<li><code>sys-devices-pl...erial8250-tty-ttyS2.device loaded active plugged /sys/devices/platform/serial8250/tty/ttyS2</code></li>
	<li><code>sys-devices-pl...erial8250-tty-ttyS3.device loaded active plugged /sys/devices/platform/serial8250/tty/ttyS3</code></li>
	<li><code>sys-devices-virtual-block-dm\x2d0.device loaded active plugged /sys/devices/virtual/block/dm-0</code></li>
	<li><code>sys-devices-virtual-block-dm\x2d1.device loaded active plugged /sys/devices/virtual/block/dm-1</code></li>
	<li><code>sys-module-configfs.device loaded active plugged /sys/module/configfs</code></li>
	<li><code>...</code></li>
</ol>

<h4>9. 列出所有失败单元</h4>

<ol>
	<li><code># systemctl --failed</code></li>
	<li>&nbsp;</li>
	<li><code>UNIT LOAD ACTIVE SUB DESCRIPTION</code></li>
	<li><code>kdump.service loaded failed failed Crash recovery kernel arming</code></li>
	<li>&nbsp;</li>
	<li><code>LOAD = Reflects whether the unit definition was properly loaded.</code></li>
	<li><code>ACTIVE = The high-level unit activation state, i.e. generalization of SUB.</code></li>
	<li><code>SUB = The low-level unit activation state, values depend on unit type.</code></li>
	<li>&nbsp;</li>
	<li><code>1 loaded units listed. Pass --all to see loaded but inactive units, too.</code></li>
	<li><code>To show all installed unit files use &#39;systemctl list-unit-files&#39;.</code></li>
</ol>

<h4>10. 检查某个单元（如 cron.service）是否启用</h4>

<ol>
	<li><code># systemctl is-enabled crond.service</code></li>
	<li>&nbsp;</li>
	<li><code>enabled</code></li>
</ol>

<h4>11. 检查某个单元或服务是否运行</h4>

<ol>
	<li><code># systemctl status firewalld.service</code></li>
	<li>&nbsp;</li>
	<li><code>firewalld.service - firewalld - dynamic firewall daemon</code></li>
	<li><code>Loaded: loaded (/usr/lib/systemd/system/firewalld.service; enabled)</code></li>
	<li><code>Active: active (running) since Tue 2015-04-28 16:27:55 IST; 34min ago</code></li>
	<li><code>Main PID: 549 (firewalld)</code></li>
	<li><code>CGroup: /system.slice/firewalld.service</code></li>
	<li><code>└─549 /usr/bin/python -Es /usr/sbin/firewalld --nofork --nopid</code></li>
	<li>&nbsp;</li>
	<li><code>Apr 28 16:27:51 tecmint systemd[1]: Starting firewalld - dynamic firewall daemon...</code></li>
	<li><code>Apr 28 16:27:55 tecmint systemd[1]: Started firewalld - dynamic firewall daemon.</code></li>
</ol>

<h3>使用Systemctl控制并管理服务</h3>

<h4>12. 列出所有服务（包括启用的和禁用的）</h4>

<ol>
	<li><code># systemctl list-unit-files --type=service</code></li>
	<li>&nbsp;</li>
	<li><code>UNIT FILE STATE </code></li>
	<li><code>arp-ethers.service disabled</code></li>
	<li><code>auditd.service enabled </code></li>
	<li><code>autovt@.service disabled</code></li>
	<li><code>blk-availability.service disabled</code></li>
	<li><code>brandbot.service static </code></li>
	<li><code>collectd.service disabled</code></li>
	<li><code>console-getty.service disabled</code></li>
	<li><code>console-shell.service disabled</code></li>
	<li><code>cpupower.service disabled</code></li>
	<li><code>crond.service enabled </code></li>
	<li><code>dbus-org.fedoraproject.FirewallD1.service enabled </code></li>
	<li><code>....</code></li>
</ol>

<h4>13. Linux中如何启动、重启、停止、重载服务以及检查服务（如 httpd.service）状态</h4>

<ol>
	<li><code># systemctl start httpd.service</code></li>
	<li><code># systemctl restart httpd.service</code></li>
	<li><code># systemctl stop httpd.service</code></li>
	<li><code># systemctl reload httpd.service</code></li>
	<li><code># systemctl status httpd.service</code></li>
	<li>&nbsp;</li>
	<li><code>httpd.service - The Apache HTTP Server</code></li>
	<li><code>Loaded: loaded (/usr/lib/systemd/system/httpd.service; enabled)</code></li>
	<li><code>Active: active (running) since Tue 2015-04-28 17:21:30 IST; 6s ago</code></li>
	<li><code>Process: 2876 ExecStop=/bin/kill -WINCH ${MAINPID} (code=exited, status=0/SUCCESS)</code></li>
	<li><code>Main PID: 2881 (httpd)</code></li>
	<li><code>Status: &quot;Processing requests...&quot;</code></li>
	<li><code>CGroup: /system.slice/httpd.service</code></li>
	<li><code>├─2881 /usr/sbin/httpd -DFOREGROUND</code></li>
	<li><code>├─2884 /usr/sbin/httpd -DFOREGROUND</code></li>
	<li><code>├─2885 /usr/sbin/httpd -DFOREGROUND</code></li>
	<li><code>├─2886 /usr/sbin/httpd -DFOREGROUND</code></li>
	<li><code>├─2887 /usr/sbin/httpd -DFOREGROUND</code></li>
	<li><code>└─2888 /usr/sbin/httpd -DFOREGROUND</code></li>
	<li>&nbsp;</li>
	<li><code>Apr 28 17:21:30 tecmint systemd[1]: Starting The Apache HTTP Server...</code></li>
	<li><code>Apr 28 17:21:30 tecmint httpd[2881]: AH00558: httpd: Could not reliably determine the server&#39;s fully q...ssage</code></li>
	<li><code>Apr 28 17:21:30 tecmint systemd[1]: Started The Apache HTTP Server.</code></li>
	<li><code>Hint: Some lines were ellipsized, use -l to show in full.</code></li>
</ol>

<p><strong>注意</strong>：当我们使用systemctl的start，restart，stop和reload命令时，我们不会从终端获取到任何输出内容，只有status命令可以打印输出。</p>

<h4>14. 如何激活服务并在启动时启用或禁用服务（即系统启动时自动启动服务）</h4>

<ol>
	<li><code># systemctl is-active httpd.service</code></li>
	<li><code># systemctl enable httpd.service</code></li>
	<li><code># systemctl disable httpd.service</code></li>
</ol>

<h4>15. 如何屏蔽（让它不能启动）或显示服务（如 httpd.service）</h4>

<ol>
	<li><code># systemctl mask httpd.service</code></li>
	<li><code>ln -s &#39;/dev/null&#39; &#39;/etc/systemd/system/httpd.service&#39;</code></li>
	<li>&nbsp;</li>
	<li><code># systemctl unmask httpd.service</code></li>
	<li><code>rm &#39;/etc/systemd/system/httpd.service&#39;</code></li>
</ol>

<h4>16. 使用systemctl命令杀死服务</h4>

<ol>
	<li><code># systemctl kill httpd</code></li>
	<li><code># systemctl status httpd</code></li>
	<li>&nbsp;</li>
	<li><code>httpd.service - The Apache HTTP Server</code></li>
	<li><code>Loaded: loaded (/usr/lib/systemd/system/httpd.service; enabled)</code></li>
	<li><code>Active: failed (Result: exit-code) since Tue 2015-04-28 18:01:42 IST; 28min ago</code></li>
	<li><code>Main PID: 2881 (code=exited, status=0/SUCCESS)</code></li>
	<li><code>Status: &quot;Total requests: 0; Current requests/sec: 0; Current traffic: 0 B/sec&quot;</code></li>
	<li>&nbsp;</li>
	<li><code>Apr 28 17:37:29 tecmint systemd[1]: httpd.service: Got notification message from PID 2881, but recepti...bled.</code></li>
	<li><code>Apr 28 17:37:29 tecmint systemd[1]: httpd.service: Got notification message from PID 2881, but recepti...bled.</code></li>
	<li><code>Apr 28 17:37:39 tecmint systemd[1]: httpd.service: Got notification message from PID 2881, but recepti...bled.</code></li>
	<li><code>Apr 28 17:37:39 tecmint systemd[1]: httpd.service: Got notification message from PID 2881, but recepti...bled.</code></li>
	<li><code>Apr 28 17:37:49 tecmint systemd[1]: httpd.service: Got notification message from PID 2881, but recepti...bled.</code></li>
	<li><code>Apr 28 17:37:49 tecmint systemd[1]: httpd.service: Got notification message from PID 2881, but recepti...bled.</code></li>
	<li><code>Apr 28 17:37:59 tecmint systemd[1]: httpd.service: Got notification message from PID 2881, but recepti...bled.</code></li>
	<li><code>Apr 28 17:37:59 tecmint systemd[1]: httpd.service: Got notification message from PID 2881, but recepti...bled.</code></li>
	<li><code>Apr 28 18:01:42 tecmint systemd[1]: httpd.service: control process exited, code=exited status=226</code></li>
	<li><code>Apr 28 18:01:42 tecmint systemd[1]: Unit httpd.service entered failed state.</code></li>
	<li><code>Hint: Some lines were ellipsized, use -l to show in full.</code></li>
</ol>

<h3>使用Systemctl控制并管理挂载点</h3>

<h4>17. 列出所有系统挂载点</h4>

<ol>
	<li><code># systemctl list-unit-files --type=mount</code></li>
	<li>&nbsp;</li>
	<li><code>UNIT FILE STATE </code></li>
	<li><code>dev-hugepages.mount static </code></li>
	<li><code>dev-mqueue.mount static </code></li>
	<li><code>proc-sys-fs-binfmt_misc.mount static </code></li>
	<li><code>sys-fs-fuse-connections.mount static </code></li>
	<li><code>sys-kernel-config.mount static </code></li>
	<li><code>sys-kernel-debug.mount static </code></li>
	<li><code>tmp.mount disabled</code></li>
</ol>

<h4>18. 挂载、卸载、重新挂载、重载系统挂载点并检查系统中挂载点状态</h4>

<ol>
	<li><code># systemctl start tmp.mount</code></li>
	<li><code># systemctl stop tmp.mount</code></li>
	<li><code># systemctl restart tmp.mount</code></li>
	<li><code># systemctl reload tmp.mount</code></li>
	<li><code># systemctl status tmp.mount</code></li>
	<li>&nbsp;</li>
	<li><code>tmp.mount - Temporary Directory</code></li>
	<li><code>Loaded: loaded (/usr/lib/systemd/system/tmp.mount; disabled)</code></li>
	<li><code>Active: active (mounted) since Tue 2015-04-28 17:46:06 IST; 2min 48s ago</code></li>
	<li><code>Where: /tmp</code></li>
	<li><code>What: tmpfs</code></li>
	<li><code>Docs: man:hier(7)</code></li>
	<li>&nbsp;</li>
	<li><code>http://www.freedesktop.org/wiki/Software/systemd/APIFileSystems</code></li>
	<li>&nbsp;</li>
	<li><code>Process: 3908 ExecMount=/bin/mount tmpfs /tmp -t tmpfs -o mode=1777,strictatime (code=exited, status=0/SUCCESS)</code></li>
	<li>&nbsp;</li>
	<li><code>Apr 28 17:46:06 tecmint systemd[1]: Mounting Temporary Directory...</code></li>
	<li><code>Apr 28 17:46:06 tecmint systemd[1]: tmp.mount: Directory /tmp to mount over is not empty, mounting anyway.</code></li>
	<li><code>Apr 28 17:46:06 tecmint systemd[1]: Mounted Temporary Directory.</code></li>
</ol>

<h4>19. 在启动时激活、启用或禁用挂载点（系统启动时自动挂载）</h4>

<ol>
	<li><code># systemctl is-active tmp.mount</code></li>
	<li><code># systemctl enable tmp.mount</code></li>
	<li><code># systemctl disable tmp.mount</code></li>
</ol>

<h4>20. 在Linux中屏蔽（让它不能启用）或可见挂载点</h4>

<ol>
	<li><code># systemctl mask tmp.mount</code></li>
	<li>&nbsp;</li>
	<li><code>ln -s &#39;/dev/null&#39; &#39;/etc/systemd/system/tmp.mount&#39;</code></li>
	<li>&nbsp;</li>
	<li><code># systemctl unmask tmp.mount</code></li>
	<li>&nbsp;</li>
	<li><code>rm &#39;/etc/systemd/system/tmp.mount&#39;</code></li>
</ol>

<h3>使用Systemctl控制并管理套接口</h3>

<h4>21. 列出所有可用系统套接口</h4>

<ol>
	<li><code># systemctl list-unit-files --type=socket</code></li>
	<li>&nbsp;</li>
	<li><code>UNIT FILE STATE </code></li>
	<li><code>dbus.socket static </code></li>
	<li><code>dm-event.socket enabled </code></li>
	<li><code>lvm2-lvmetad.socket enabled </code></li>
	<li><code>rsyncd.socket disabled</code></li>
	<li><code>sshd.socket disabled</code></li>
	<li><code>syslog.socket static </code></li>
	<li><code>systemd-initctl.socket static </code></li>
	<li><code>systemd-journald.socket static </code></li>
	<li><code>systemd-shutdownd.socket static </code></li>
	<li><code>systemd-udevd-control.socket static </code></li>
	<li><code>systemd-udevd-kernel.socket static </code></li>
	<li>&nbsp;</li>
	<li><code>11 unit files listed.</code></li>
</ol>

<h4>22. 在Linux中启动、重启、停止、重载套接口并检查其状态</h4>

<ol>
	<li><code># systemctl start cups.socket</code></li>
	<li><code># systemctl restart cups.socket</code></li>
	<li><code># systemctl stop cups.socket</code></li>
	<li><code># systemctl reload cups.socket</code></li>
	<li><code># systemctl status cups.socket</code></li>
	<li>&nbsp;</li>
	<li><code>cups.socket - CUPS Printing Service Sockets</code></li>
	<li><code>Loaded: loaded (/usr/lib/systemd/system/cups.socket; enabled)</code></li>
	<li><code>Active: active (listening) since Tue 2015-04-28 18:10:59 IST; 8s ago</code></li>
	<li><code>Listen: /var/run/cups/cups.sock (Stream)</code></li>
	<li>&nbsp;</li>
	<li><code>Apr 28 18:10:59 tecmint systemd[1]: Starting CUPS Printing Service Sockets.</code></li>
	<li><code>Apr 28 18:10:59 tecmint systemd[1]: Listening on CUPS Printing Service Sockets.</code></li>
</ol>

<h4>23. 在启动时激活套接口，并启用或禁用它（系统启动时自启动）</h4>

<ol>
	<li><code># systemctl is-active cups.socket</code></li>
	<li><code># systemctl enable cups.socket</code></li>
	<li><code># systemctl disable cups.socket</code></li>
</ol>

<h4>24. 屏蔽（使它不能启动）或显示套接口</h4>

<ol>
	<li><code># systemctl mask cups.socket</code></li>
	<li><code>ln -s &#39;/dev/null&#39; &#39;/etc/systemd/system/cups.socket&#39;</code></li>
	<li>&nbsp;</li>
	<li><code># systemctl unmask cups.socket</code></li>
	<li><code>rm &#39;/etc/systemd/system/cups.socket&#39;</code></li>
</ol>

<h3>服务的CPU利用率（分配额）</h3>

<h4>25. 获取当前某个服务的CPU分配额（如httpd）</h4>

<ol>
	<li><code># systemctl show -p CPUShares httpd.service</code></li>
	<li>&nbsp;</li>
	<li><code>CPUShares=1024</code></li>
</ol>

<p><strong>注意</strong>：各个服务的默认CPU分配份额=1024，你可以增加/减少某个进程的CPU分配份额。</p>

<h4>26. 将某个服务（httpd.service）的CPU分配份额限制为2000 CPUShares/</h4>

<ol>
	<li><code># systemctl set-property httpd.service CPUShares=2000</code></li>
	<li><code># systemctl show -p CPUShares httpd.service</code></li>
	<li>&nbsp;</li>
	<li><code>CPUShares=2000</code></li>
</ol>

<p><strong>注意</strong>：当你为某个服务设置CPUShares，会自动创建一个以服务名命名的目录（如 httpd.service），里面包含了一个名为90-CPUShares.conf的文件，该文件含有CPUShare限制信息，你可以通过以下方式查看该文件：</p>

<pre>

&nbsp;</pre>

<ol>
	<li><code># vi /etc/systemd/system/httpd.service.d/90-CPUShares.conf </code></li>
	<li>&nbsp;</li>
	<li><code>[Service]</code></li>
	<li><code>CPUShares=2000 </code></li>
</ol>

<h4>27. 检查某个服务的所有配置细节</h4>

<ol>
	<li><code># systemctl show httpd</code></li>
	<li>&nbsp;</li>
	<li><code>Id=httpd.service</code></li>
	<li><code>Names=httpd.service</code></li>
	<li><code>Requires=basic.target</code></li>
	<li><code>Wants=system.slice</code></li>
	<li><code>WantedBy=multi-user.target</code></li>
	<li><code>Conflicts=shutdown.target</code></li>
	<li><code>Before=shutdown.target multi-user.target</code></li>
	<li><code>After=network.target remote-fs.target nss-lookup.target systemd-journald.socket basic.target system.slice</code></li>
	<li><code>Description=The Apache HTTP Server</code></li>
	<li><code>LoadState=loaded</code></li>
	<li><code>ActiveState=active</code></li>
	<li><code>SubState=running</code></li>
	<li><code>FragmentPath=/usr/lib/systemd/system/httpd.service</code></li>
	<li><code>....</code></li>
</ol>

<h4>28. 分析某个服务（httpd）的关键链</h4>

<ol>
	<li><code># systemd-analyze critical-chain httpd.service</code></li>
	<li>&nbsp;</li>
	<li><code>The time after the unit is active or started is printed after the &quot;@&quot; character.</code></li>
	<li><code>The time the unit takes to start is printed after the &quot;+&quot; character.</code></li>
	<li>&nbsp;</li>
	<li><code>httpd.service +142ms</code></li>
	<li><code>└─network.target @11.168s</code></li>
	<li><code>└─network.service @9.456s +1.712s</code></li>
	<li><code>└─NetworkManager.service @8.858s +596ms</code></li>
	<li><code>└─firewalld.service @4.931s +3.926s</code></li>
	<li><code>└─basic.target @4.916s</code></li>
	<li><code>└─sockets.target @4.916s</code></li>
	<li><code>└─dbus.socket @4.916s</code></li>
	<li><code>└─sysinit.target @4.905s</code></li>
	<li><code>└─systemd-update-utmp.service @4.864s +39ms</code></li>
	<li><code>└─auditd.service @4.563s +301ms</code></li>
	<li><code>└─systemd-tmpfiles-setup.service @4.485s +69ms</code></li>
	<li><code>└─rhel-import-state.service @4.342s +142ms</code></li>
	<li><code>└─local-fs.target @4.324s</code></li>
	<li><code>└─boot.mount @4.286s +31ms</code></li>
	<li><code>└─systemd-fsck@dev-disk-by\x2duuid-79f594ad\x2da332\x2d4730\x2dbb5f\x2d85d196080964.service @4.092s +149ms</code></li>
	<li><code>└─dev-disk-by\x2duuid-79f594ad\x2da332\x2d4730\x2dbb5f\x2d85d196080964.device @4.092s</code></li>
</ol>

<h4>29. 获取某个服务（httpd）的依赖性列表</h4>

<ol>
	<li><code># systemctl list-dependencies httpd.service</code></li>
	<li>&nbsp;</li>
	<li><code>httpd.service</code></li>
	<li><code>├─system.slice</code></li>
	<li><code>└─basic.target</code></li>
	<li><code>├─firewalld.service</code></li>
	<li><code>├─microcode.service</code></li>
	<li><code>├─rhel-autorelabel-mark.service</code></li>
	<li><code>├─rhel-autorelabel.service</code></li>
	<li><code>├─rhel-configure.service</code></li>
	<li><code>├─rhel-dmesg.service</code></li>
	<li><code>├─rhel-loadmodules.service</code></li>
	<li><code>├─paths.target</code></li>
	<li><code>├─slices.target</code></li>
	<li><code>│ ├─-.slice</code></li>
	<li><code>│ └─system.slice</code></li>
	<li><code>├─sockets.target</code></li>
	<li><code>│ ├─dbus.socket</code></li>
	<li><code>....</code></li>
</ol>

<h4>30. 按等级列出控制组</h4>

<ol>
	<li><code># systemd-cgls</code></li>
	<li>&nbsp;</li>
	<li><code>├─1 /usr/lib/systemd/systemd --switched-root --system --deserialize 23</code></li>
	<li><code>├─user.slice</code></li>
	<li><code>│ └─user-0.slice</code></li>
	<li><code>│ └─session-1.scope</code></li>
	<li><code>│ ├─2498 sshd: root@pts/0 </code></li>
	<li><code>│ ├─2500 -bash</code></li>
	<li><code>│ ├─4521 systemd-cgls</code></li>
	<li><code>│ └─4522 systemd-cgls</code></li>
	<li><code>└─system.slice</code></li>
	<li><code>├─httpd.service</code></li>
	<li><code>│ ├─4440 /usr/sbin/httpd -DFOREGROUND</code></li>
	<li><code>│ ├─4442 /usr/sbin/httpd -DFOREGROUND</code></li>
	<li><code>│ ├─4443 /usr/sbin/httpd -DFOREGROUND</code></li>
	<li><code>│ ├─4444 /usr/sbin/httpd -DFOREGROUND</code></li>
	<li><code>│ ├─4445 /usr/sbin/httpd -DFOREGROUND</code></li>
	<li><code>│ └─4446 /usr/sbin/httpd -DFOREGROUND</code></li>
	<li><code>├─polkit.service</code></li>
	<li><code>│ └─721 /usr/lib/polkit-1/polkitd --no-debug</code></li>
	<li><code>....</code></li>
</ol>

<h4>31. 按CPU、内存、输入和输出列出控制组</h4>

<ol>
	<li><code># systemd-cgtop</code></li>
	<li>&nbsp;</li>
	<li><code>Path Tasks %CPU Memory Input/s Output/s</code></li>
	<li>&nbsp;</li>
	<li><code>/ 83 1.0 437.8M - -</code></li>
	<li><code>/system.slice - 0.1 - - -</code></li>
	<li><code>/system.slice/mariadb.service 2 0.1 - - -</code></li>
	<li><code>/system.slice/tuned.service 1 0.0 - - -</code></li>
	<li><code>/system.slice/httpd.service 6 0.0 - - -</code></li>
	<li><code>/system.slice/NetworkManager.service 1 - - - -</code></li>
	<li><code>/system.slice/atop.service 1 - - - -</code></li>
	<li><code>/system.slice/atopacct.service 1 - - - -</code></li>
	<li><code>/system.slice/auditd.service 1 - - - -</code></li>
	<li><code>/system.slice/crond.service 1 - - - -</code></li>
	<li><code>/system.slice/dbus.service 1 - - - -</code></li>
	<li><code>/system.slice/firewalld.service 1 - - - -</code></li>
	<li><code>/system.slice/lvm2-lvmetad.service 1 - - - -</code></li>
	<li><code>/system.slice/polkit.service 1 - - - -</code></li>
	<li><code>/system.slice/postfix.service 3 - - - -</code></li>
	<li><code>/system.slice/rsyslog.service 1 - - - -</code></li>
	<li><code>/system.slice/system-getty.slice/getty@tty1.service 1 - - - -</code></li>
	<li><code>/system.slice/systemd-journald.service 1 - - - -</code></li>
	<li><code>/system.slice/systemd-logind.service 1 - - - -</code></li>
	<li><code>/system.slice/systemd-udevd.service 1 - - - -</code></li>
	<li><code>/system.slice/webmin.service 1 - - - -</code></li>
	<li><code>/user.slice/user-0.slice/session-1.scope 3 - - - -</code></li>
</ol>

<h3>控制系统运行等级</h3>

<h4>32. 启动系统救援模式</h4>

<ol>
	<li><code># systemctl rescue</code></li>
	<li><code>Broadcast message from root@tecmint on pts/0 (Wed 2015-04-29 11:31:18 IST):</code></li>
	<li><code>The system is going down to rescue mode NOW!</code></li>
</ol>

<h4>33. 进入紧急模式</h4>

<ol>
	<li><code># systemctl emergency</code></li>
	<li>&nbsp;</li>
	<li><code>Welcome to emergency mode! After logging in, type &quot;journalctl -xb&quot; to view</code></li>
	<li><code>system logs, &quot;systemctl reboot&quot; to reboot, &quot;systemctl default&quot; to try again</code></li>
	<li><code>to boot into default mode.</code></li>
</ol>

<h4>34. 列出当前使用的运行等级</h4>

<ol>
	<li><code># systemctl get-default</code></li>
	<li>&nbsp;</li>
	<li><code>multi-user.target</code></li>
</ol>

<h4>35. 启动运行等级5，即图形模式</h4>

<ol>
	<li><code># systemctl isolate runlevel5.target</code></li>
	<li><code>或</code></li>
	<li><code># systemctl isolate graphical.target</code></li>
</ol>

<h4>36. 启动运行等级3，即多用户模式（命令行）</h4>

<ol>
	<li><code># systemctl isolate runlevel3.target</code></li>
	<li><code>或</code></li>
	<li><code># systemctl isolate multiuser.target</code></li>
</ol>

<h4>36. 设置多用户模式或图形模式为默认运行等级</h4>

<ol>
	<li><code># systemctl set-default runlevel3.target</code></li>
	<li>&nbsp;</li>
	<li><code># systemctl set-default runlevel5.target</code></li>
</ol>

<h4>37. 重启、停止、挂起、休眠系统或使系统进入混合睡眠</h4>

<ol>
	<li><code># systemctl reboot</code></li>
	<li><code># systemctl halt</code></li>
	<li><code># systemctl suspend</code></li>
	<li><code># systemctl hibernate</code></li>
	<li><code># systemctl hybrid-sleep</code></li>
</ol>

<p>对于不知运行等级为何物的人，说明如下。</p>

<ul>
	<li>Runlevel 0 : 关闭系统</li>
	<li>Runlevel 1 : 救援？维护模式</li>
	<li>Runlevel 3 : 多用户，无图形系统</li>
	<li>Runlevel 4 : 多用户，无图形系统</li>
	<li>Runlevel 5 : 多用户，图形化系统</li>
	<li>Runlevel 6 : 关闭并重启机器</li>
</ul>

<p>到此为止吧。保持连线，进行评论。别忘了在下面的评论中为我们提供一些有价值的反馈哦。喜欢我们、与我们分享，求扩散。</p>
