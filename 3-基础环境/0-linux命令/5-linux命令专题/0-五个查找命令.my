<h1>Linux下的五个查找命令：grep、find、locate、whereis、which、type</h1>

<h2><strong>常用命令</strong></h2>

<p>find &lt;指定目录&gt; &lt;指定条件&gt; &lt;指定动作&gt;&ldquo;；</p>

<p>find / -name &nbsp;&#39;interfaces&#39;&ldquo;&nbsp; //使用find命令搜索在根目录下的所有interfaces文件所在位置。</p>

<h2><strong>文本搜索工具</strong></h2>

<h3><strong>1</strong><strong>、</strong><strong>grep</strong></h3>

<p><a href="http://www.huomo.cn/t/grep/" target="_blank">grep</a>（General Regular Expression Parser，通用规则表达式分析程序）是一种强大的文本搜索工具，它能使用正则表达式搜索文本，并把匹配的行打印出来。</p>

<p>它的使用语法为：</p>

<p><strong>grep [</strong><strong>选项</strong><strong>] pattern [</strong><strong>文件名</strong><strong>]</strong></p>

<p><strong>. 匹配任意一个字符<br />
* 匹配0 个或多个*前的字符<br />
^ 匹配行开头<br />
$ 匹配行结尾<br />
[] 匹配[ ]中的任意一个字符，[]中可用 - 表示范围，<br />
例如[a-z]表示字母a 至z 中的任意一个<br />
\ 转意字符<br />
命令中的选项为：<br />
-b 显示块号<br />
-c 仅显示各指定文件中包含模式的总行数<br />
-i 模式中字母不区分大小写<br />
-h 不将包含模式的文件名显示在该行上<br />
-l 仅显示包含模式的文件名<br />
-n 显示模式所在行的行号<br />
-s 指定文件若不存在或不可读，不提示错误信息<br />
-v 显示所有不包含模式的行</strong></p>

<p>其中，pattern为所要匹配的字符串。如在/etc/passwd文件下查找包含&ldquo;carey&rdquo;字符的行：</p>

<p>$&nbsp;<strong>grep carey /etc/passwd</strong></p>

<p>要用好grep这个工具，其实就是要写好正则表达式，所以这里不对grep的所有功能进行实例讲解，只列几个例子，讲解一个正则表达式的写法。</p>

<p>$&nbsp;<strong>grep &#39;test&#39; d*</strong></p>

<p>显示所有以d开头的文件中包含test的行。</p>

<p>$&nbsp;<strong>ls -l | grep &#39;^public&#39;</strong></p>

<p>通过管道过滤ls -l输出的内容，只显示以public开头的行。</p>

<p>后面的^字符强制grep命令只在每行的开头找public。整个搜索模式（pattern）用单引号括起来，使shell不理会它们。shell只将单引号去掉，将搜索模式送给grep命令。</p>

<p>$&nbsp;<strong>grep -i &#39;hello world&#39; menu.h main.c</strong></p>

<p>显示在menu.h和main.c文件中匹配&ldquo;hello world&rdquo;的行，忽略大小写。</p>

<p>例如:</p>

<p>grep &#39;sample&#39; -R *&nbsp;</p>

<h2><strong>文件查找命令</strong></h2>

<h3><strong>2</strong><strong>、</strong><strong>find</strong></h3>

<p>find是最常见和最强大的查找命令，你可以用它找到任何你想找的文件。</p>

<p>find的使用格式如下：</p>

<p><strong>　　</strong><strong>find &lt;</strong><strong>指定目录</strong><strong>&gt; &lt;</strong><strong>指定条件</strong><strong>&gt; &lt;</strong><strong>指定动作</strong><strong>&gt;</strong></p>

<p>　　- &lt;指定目录&gt;： 所要搜索的目录及其所有子目录。默认为当前目录。</p>

<p>　　- &lt;指定条件&gt;： 所要搜索的文件的特征。</p>

<p>　　- &lt;指定动作&gt;： 对搜索结果进行特定的处理。</p>

<p>如果什么参数也不加，find默认搜索当前目录及其子目录，并且不过滤任何结果（也就是返回所有文件），将它们全都显示在屏幕上。</p>

<p>find的使用实例：</p>

<p><strong>$ find / -name jx</strong></p>

<p>全盘下查找 名叫 jx 的文件夹&nbsp;</p>

<p>$&nbsp;<strong>find . -name &#39;my*&#39; &ndash;ls</strong></p>

<p>搜索当前目录（含子目录，下同）中所有文件名以my开头的文件，并显示它们的详细信息。</p>

<p>$&nbsp;<strong>find /home -user rtos</strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>

<p>搜索/home下拥有者为rtos的文件</p>

<p>$&nbsp;<strong>find . -type f -mmin -10</strong></p>

<p>搜索当前目录中，在过去10分钟中更新过的所有的普通文件。如果不加-type f参数，则搜索普通文件+特殊文件+目录。</p>

<p>$&nbsp;<strong>find / -type f -size +100M</strong></p>

<p>查找系统中所有大于100M的文件</p>

<p><strong>说明：</strong>&nbsp;如果你要寻找一个档案的话，那么使用 find 会是一个不错的主意。不过，由于 find 在寻找数据的时候相当的耗硬盘，所以没事情不要使用 find 啦！有更棒的指令可以取代呦，那就是 whereis 与 locate 咯~</p>

<h3><strong>3</strong><strong>、</strong><strong>locate</strong></h3>

<p>locate命令其实是&ldquo;find -name&rdquo;的另一种写法，但是要比后者快得多，原因在于它不搜索具体目录，而是搜索一个数据库（/var/lib/locatedb），这个数据库中含有本地所有文件信息。Linux系统自动创建这个数据库，并且每天自动更新一次，所以使用locate命令查不到最新变动过的文件。为了避免这种情况，可以在使用locate之前，先使用updatedb命令，手动更新数据库。</p>

<p>locate命令的使用实例：</p>

<p>$&nbsp;<strong>locate /etc/sh</strong></p>

<p>搜索etc目录下所有以sh开头的文件。</p>

<p>$&nbsp;<strong>locate -i ~/m</strong></p>

<p>搜索用户主目录下，所有以m开头的文件，并且忽略大小写。</p>

<h2><strong>程序命令搜索</strong></h2>

<h3><strong>4</strong><strong>、</strong><strong>whereis</strong></h3>

<p>whereis命令只能用于程序名的搜索，而且只搜索二进制文件（参数-b）、man说明文件（参数-m）和源代码文件（参数-s）。如果省略参数，则返回所有信息。</p>

<p>whereis命令的使用实例：</p>

<p>$&nbsp;<strong>whereis grep</strong></p>

<p>grep: /bin/grep /usr/share/man/man1p/grep.1p.gz /usr/share/man/man1/grep.1.gz</p>

<h3><strong>5</strong><strong>、</strong><strong>which</strong></h3>

<p>which命令的作用是，在PATH变量指定的路径中，搜索某个系统命令的位置，并且返回第一个搜索结果。也就是说，使用which命令，就可以看到某个系统命令是否存在，以及执行的到底是哪一个位置的命令。</p>

<p>which命令的使用实例：</p>

<p>$&nbsp;<strong>which grep</strong></p>

<p>/bin/grep</p>

<h3><strong>6、type</strong></h3>

<p>使用type命令查看系统中的某个命令是否为系统自带的命令。使用type命令查看cd命令是否为系统自带的命令；查看grep 是否为系统自带的命令。</p>

<p>[root@centos7 bin]# type cd<br />
cd is a shell builtin<br />
[root@centos7 bin]# type grep<br />
grep is aliased to `grep --color=auto&#39;<br />
[root@centos7 bin]# type my<br />
my is /sbin/my&nbsp; //这个是我自定义的脚本<br />
&nbsp;</p>
