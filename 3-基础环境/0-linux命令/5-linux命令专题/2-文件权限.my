<h1>Linux基础之&mdash;&mdash;文件权限（一）</h1>

<p>本节所讲内容:</p>

<p>&bull; 文件基本权限</p>

<p>&bull; 文件高级权限</p>

<p>&bull; 实战-创建一个让 root 都无法删除的黑客文件</p>

<p>&nbsp;</p>

<h2><strong>一、查看权限信息</strong></h2>

<ol>
	<li>
	<p>linux下命令&ldquo;ll&rdquo;是&ldquo;<a href="https://www.baidu.com/s?wd=ls&amp;tn=44039180_cpr&amp;fenlei=mv6quAkxTZn0IZRqIHckPjm4nH00T1Yvm19hnvDYPHN9n1uWPHfs0ZwV5Hcvrjm3rH6sPfKWUMw85HfYnjn4nH6sgvPsT6KdThsqpZwYTjCEQLGCpyw9Uz4Bmy-bIi4WUvYETgN-TLwGUv3EPj64PjTdn1c1n1cvnW0vPHTz" target="_blank">ls</a>&nbsp;<a href="https://www.baidu.com/s?wd=-l&amp;tn=44039180_cpr&amp;fenlei=mv6quAkxTZn0IZRqIHckPjm4nH00T1Yvm19hnvDYPHN9n1uWPHfs0ZwV5Hcvrjm3rH6sPfKWUMw85HfYnjn4nH6sgvPsT6KdThsqpZwYTjCEQLGCpyw9Uz4Bmy-bIi4WUvYETgN-TLwGUv3EPj64PjTdn1c1n1cvnW0vPHTz" target="_blank">-l</a>&quot;的别名。别名相当于windows里的快捷方式。</p>

	<p><a href="https://gss0.baidu.com/94o3dSag_xI4khGko9WTAnF6hhy/zhidao/pic/item/95eef01f3a292df538c7204bba315c6034a8736c.jpg" rel="nofollow" target="_blank" title="点击查看大图"><img src="https://gss0.baidu.com/94o3dSag_xI4khGko9WTAnF6hhy/zhidao/wh%3D600%2C800/sign=c3ec1400dbc451daf6a304ed86cd7e5e/95eef01f3a292df538c7204bba315c6034a8736c.jpg" /></a></p>
	</li>
	<li>
	<p>所以&quot;ll&quot;和&ldquo;<a href="https://www.baidu.com/s?wd=ls&amp;tn=44039180_cpr&amp;fenlei=mv6quAkxTZn0IZRqIHckPjm4nH00T1Yvm19hnvDYPHN9n1uWPHfs0ZwV5Hcvrjm3rH6sPfKWUMw85HfYnjn4nH6sgvPsT6KdThsqpZwYTjCEQLGCpyw9Uz4Bmy-bIi4WUvYETgN-TLwGUv3EPj64PjTdn1c1n1cvnW0vPHTz" target="_blank">ls</a>&nbsp;<a href="https://www.baidu.com/s?wd=-l&amp;tn=44039180_cpr&amp;fenlei=mv6quAkxTZn0IZRqIHckPjm4nH00T1Yvm19hnvDYPHN9n1uWPHfs0ZwV5Hcvrjm3rH6sPfKWUMw85HfYnjn4nH6sgvPsT6KdThsqpZwYTjCEQLGCpyw9Uz4Bmy-bIi4WUvYETgN-TLwGUv3EPj64PjTdn1c1n1cvnW0vPHTz" target="_blank">-l</a>&rdquo;的功能是相同的。</p>
	</li>
	<li>
	<p>所以&quot;ll&quot;和&quot;<a href="https://www.baidu.com/s?wd=ls&amp;tn=44039180_cpr&amp;fenlei=mv6quAkxTZn0IZRqIHckPjm4nH00T1Yvm19hnvDYPHN9n1uWPHfs0ZwV5Hcvrjm3rH6sPfKWUMw85HfYnjn4nH6sgvPsT6KdThsqpZwYTjCEQLGCpyw9Uz4Bmy-bIi4WUvYETgN-TLwGUv3EPj64PjTdn1c1n1cvnW0vPHTz" target="_blank">ls</a>&quot;的区别其实是&ldquo;ls&rdquo;和&quot;ls&nbsp;<a href="https://www.baidu.com/s?wd=-l&amp;tn=44039180_cpr&amp;fenlei=mv6quAkxTZn0IZRqIHckPjm4nH00T1Yvm19hnvDYPHN9n1uWPHfs0ZwV5Hcvrjm3rH6sPfKWUMw85HfYnjn4nH6sgvPsT6KdThsqpZwYTjCEQLGCpyw9Uz4Bmy-bIi4WUvYETgN-TLwGUv3EPj64PjTdn1c1n1cvnW0vPHTz" target="_blank">-l</a>&quot;的区别。</p>
	</li>
	<li>
	<p>&rdquo;ls&ldquo;是显示当前目录下文件，&rdquo;ls -l&ldquo;是显示当前目录下文件详细信息。</p>

	<p><a href="https://gss0.baidu.com/-vo3dSag_xI4khGko9WTAnF6hhy/zhidao/pic/item/55e736d12f2eb9385e3df7acd3628535e5dd6f18.jpg" rel="nofollow" target="_blank" title="点击查看大图"><img src="https://gss0.baidu.com/-vo3dSag_xI4khGko9WTAnF6hhy/zhidao/wh%3D600%2C800/sign=5a5040b2d700baa1ba794fbd7720952a/55e736d12f2eb9385e3df7acd3628535e5dd6f18.jpg" /></a></p>
	</li>
	<li>
	<p><strong>ll会列出该文件下的所有文件信息，包括隐藏的文件，而ls -l只列出显式文件，说明这两个命令还是不等同的！</strong></p>
	</li>
	<li>
	<p>&nbsp;</p>

	<p><strong>ll 文件名， 直接查看某一个文件的权限信息</strong></p>
	</li>
</ol>

<h2><strong>二、文件基本权限</strong></h2>

<h3><strong>1 基本权限:(不适用于 root)</strong></h3>

<p>-&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;rwx&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;r-x&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;r-x&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;user1&nbsp; &nbsp; user1&nbsp; &nbsp; FILENAME</p>

<p>类型&nbsp; &nbsp;拥有者的权限&nbsp; &nbsp;所属组的权限&nbsp; &nbsp;其他人的权限&nbsp; &nbsp;拥有者&nbsp; &nbsp; 属组&nbsp; &nbsp; &nbsp; 对象</p>

<p><strong>对于文件:r读 w写 x执行</strong></p>

<p><strong>对于目录:r 读(看到目录里面有什么)</strong></p>

<p><strong>w 建文件、删除、移动</strong></p>

<p><strong>x 进入</strong></p>

<p>&nbsp;</p>

<p><strong>例子：</strong></p>

<p>-rwxrw-r‐-1&nbsp;root&nbsp;root&nbsp;1213&nbsp;Feb&nbsp;2&nbsp;09:39&nbsp;abc</p>

<p>-&nbsp;第一个字符代表文件（-）、目录（d），链接（l）-&nbsp;10个字符确定不同用户能对文件干什么</p>

<p>-&nbsp;其余字符每3个一组（rwx），读（r）、写（w）、执行（x）</p>

<p>-&nbsp;第一组rwx：文件所有者的权限是读、写和执行</p>

<p>-&nbsp;第二组rw-：与文件所有者同一组的用户的权限是读、写但不能执行</p>

<p>-&nbsp;第三组r--：不与文件所有者同组的其他用户的权限是读不能写和执行</p>

<p>也可用数字表示为：r=4，w=2，x=1&nbsp;&nbsp;因此rwx=4+2+1=7</p>

<p>-&nbsp;1&nbsp;表示连接的文件数</p>

<p>-&nbsp;root&nbsp;表示用户</p>

<p>-&nbsp;root表示用户所在的组</p>

<p>-&nbsp;1213&nbsp;表示文件大小（字节）</p>

<p>-&nbsp;Feb&nbsp;2&nbsp;09:39&nbsp;表示最后修改日期</p>

<p>-&nbsp;abc&nbsp;表示文件名</p>

<h3><strong>2 修改权限的相关命令</strong></h3>

<p><strong>2.1 chmod</strong></p>

<p>作用:修改文件权限</p>

<p>u+r</p>

<p>g-w</p>

<p>o=x</p>

<p>a+x</p>

<p><strong>2.1.1 修改普通文件权限</strong></p>

<pre>
chmod u+x file.sh 就表示对<a href="https://www.baidu.com/s?wd=%E5%BD%93%E5%89%8D%E7%9B%AE%E5%BD%95&amp;tn=44039180_cpr&amp;fenlei=mv6quAkxTZn0IZRqIHckPjm4nH00T1Ydm1wbPHDzujn4mWmdnvfd0ZwV5Hcvrjm3rH6sPfKWUMw85HfYnjn4nH6sgvPsT6KdThsqpZwYTjCEQLGCpyw9Uz4Bmy-bIi4WUvYETgN-TLwGUv3EnW0knHcYPWbdPWfvn16dn1Tsr0" target="_blank">当前目录</a>下的file.sh文件的所有者增加可执行权限。</pre>

<p>[root@xuegod63 ~]#&nbsp;<strong>chmod u+x a.txt</strong></p>

<p>[root@xuegod63 ~]#&nbsp;<strong>ll !$ &nbsp;</strong><em>执行上一次的ll命令。</em></p>

<p>ll a.txt</p>

<p>-rwxr--r-- 1 root root 0 Jan 24 20:34 a.txt</p>

<p><strong>chmod g+/-/= rwx</strong></p>

<p>用法同上</p>

<p><strong>2.1.2 修改文件夹权限</strong></p>

<p>[root@localhost test]#&nbsp;<strong>mkdir a</strong></p>

<p>[root@localhost test]#&nbsp;<strong>ll &ndash;d a</strong></p>

<p>drwxr-xr-x 2 root root 4096 Oct 15 15:45 a</p>

<p>[root@localhost test]#&nbsp;<strong>chmod g+w a</strong></p>

<p>[root@localhost test]#<strong>ll &ndash;d a</strong></p>

<p><strong>2.1.3 修改 other 权限</strong></p>

<p><strong>chmod o+/-/= r 、w 、 x</strong></p>

<p>用法同上</p>

<p><strong>chmod o+/-/= rwx 用法同上</strong></p>

<p><strong>chmod a+/-/= rwx 用法同上</strong></p>

<p><strong>chmod +/-/= rwx 用法同上</strong>&nbsp;#不写 a 也可以</p>

<p>【例】</p>

<p>root@xuegod63 ~]#&nbsp;<strong>chmod o+w a</strong></p>

<p>[root@xuegod63 ~]#<strong>ll -d a</strong></p>

<p>drwxrwxrwx 2 root root 4096 Jan 24 20:44 a</p>

<p>[root@xuegod63 ~]#&nbsp;<strong>chmod o-w a</strong></p>

<p>root@localhost test]#&nbsp;<strong>chmod &ndash;x a.txt</strong></p>

<p>[root@localhost test]#&nbsp;<strong>chmod a+x a.txt</strong></p>

<p>使用数字表示权限</p>

<p>- rwx r-x r-x user1 user1 FILENAME</p>

<p>类型 拥有者的权限 所属组的权限 其他人的权限 属主 属组</p>

<p>对象</p>

<p>rwx</p>

<p>r-- -w- --x</p>

<p>100 010 001</p>

<p>r=4 w=2 x=1</p>

<p>【例】 权限的计算</p>

<p>rw- 的值是多少 ? 4+2=6</p>

<p>rwx r-x r-x 的值是多少 ? rwx=4+2+1=7;</p>

<p>r-x=4+1=5</p>

<p>r-x=4+1=5</p>

<p>rwxr-xr-x=755</p>

<p>补充:chmod a=rwx b.txt 等于 chmod 777 b.txt</p>

<p><strong>2.2 chown</strong></p>

<p>作用:修改文件拥有者和所属组</p>

<p>语法:</p>

<p><strong>chown USER:GROUP 对象</strong></p>

<p><strong>chown USER 对象</strong></p>

<p><strong>chown :GROUP 对象</strong></p>

<p><strong>-R 递归</strong>(目录下的所有内容全部更改,否则只修改目录)</p>

<p>【例】</p>

<p><strong>chown -R wang:wang dirName</strong></p>

<p>[root@localhost test]#&nbsp;<strong>chown mk:root a.txt</strong></p>

<p>[root@localhost test]#&nbsp;<strong>useradd mk1</strong></p>

<p>[root@localhost test]#&nbsp;<strong>chown mk1 a.txt</strong></p>

<p>[root@localhost test]#&nbsp;<strong>chown :mk a.txt</strong></p>

<p>[root@localhost test]#<strong>ll a.txt</strong></p>

<p>---xr-xr-x 1 mk1 mk 0 Oct 15 15:37 a.txt</p>

<p>一个文件只有读的权限,拥有者是否可以写这个文件?文件所有者一定可以写文件？？？？？？？</p>

<p>【例】</p>

<p>[root@bogon ~]#&nbsp;<strong>useradd shen</strong></p>

<p>[root@bogon ~]#<strong>su - shen</strong></p>

<p>[shen@bogon ~]$&nbsp;<strong>touch a.txt</strong></p>

<p>[root@bogon ~]#&nbsp;<strong>chmod 444 /home/shen/a.txt</strong></p>

<p>[root@bogon ~]#&nbsp;<strong>ll /home/shen/a.txt</strong></p>

<p>-r--r--r--. 1 shen shen 0 8 月 10 15:02 /home/shen/a.txt</p>

<p>[root@bogon ~]#<strong>su - shen</strong></p>

<p>[shen@bogon ~]$&nbsp;<strong>vim a.txt</strong></p>

<p><strong>#写入数据成功。</strong></p>

<h2><strong>三、高级权限</strong></h2>

<h3>1 umask</h3>

<p><strong>系统用户:#umask 022</strong></p>

<p><strong>普通用户:#umask 002</strong></p>

<p>计算方法:</p>

<p>文件默认权限=666-umask 值</p>

<p>666-022=644</p>

<p>目录默认权限=777-umask 值</p>

<p>777-022=755</p>

<p>#这是一个好的记忆方法,但不严谨。</p>

<p>666-033=633 rw- -wx -wx</p>

<p>umask 掩码为 033 . 666-033=633 结果为: 644</p>

<p>计算方法:</p>

<p><strong>6 6 6 umask 0333</strong></p>

<p><strong>110 110 110 000 011 011 | 取反</strong></p>

<p><strong>111 100 100 \/</strong></p>

<p><strong>110 110 110 与 111 100 100</strong></p>

<p><strong>110 100 100</strong></p>

<p><strong>6 4 4</strong></p>

<p>了解:</p>

<p><strong>/etc/bashrc</strong></p>

<p><strong>if [ $UID -gt 99 ] &amp;&amp; [ &quot;`id -gn`&quot; = &quot;`id -un`&quot; ]; then # id -gn 显示组名,id -un 显示</strong></p>

<p><strong>用户名</strong></p>

<p><strong>umask 002 #普通用户</strong></p>

<p><strong>else</strong></p>

<p><strong>umask 022 #系统用户</strong></p>

<p><strong>fi</strong></p>

<h3>2 特殊权限</h3>

<p><strong>SUID SGID Stickybit</strong></p>

<p><strong>s 对应的数值为:4 s , 2 t , 1</strong></p>

<p><img alt="Linux基础之——文件权限（一）" src="http://p3.pstatp.com/large/2edf0003d2e4a338c1af" /></p>

<h4>2.1&nbsp;<strong>SUID</strong></h4>

<p><strong>限定:只能设置在二进制可执行程序上面。对目录文本设置无效。</strong></p>

<p><strong>功能:程序运行时的权限从执行者变更成程序所有者。</strong></p>

<p>[root@xuegod63 ~]#&nbsp;<strong>ll /usr/bin/passwd</strong></p>

<p>-rwsr-xr-x 1 root root 32680 Jan 29 2010 /usr/bin/passwd</p>

<p><strong>注:s 小写表示 user 有 x 权限,S 大写表示 user 没有 x 权限</strong></p>

<p>【例】</p>

<p>[root@xuegod63 ~]#&nbsp;<strong>useradd mk</strong></p>

<p>[root@xuegod63 ~]#&nbsp;<strong>su - mk</strong></p>

<p>$less /etc/shadow #看不到内容</p>

<p>[root@xuegod63 ~]#&nbsp;<strong>chmod u+s /usr/bin/less</strong></p>

<p>[root@xuegod63 ~]#&nbsp;<strong>su - mk</strong></p>

<p>[mk@xuegod63 ~]$ l<strong>ess</strong><strong>/etc/shadow</strong>&nbsp;#看到</p>

<p>查看 u+s 后的效果:</p>

<p>[root@xuegod63 ~]#&nbsp;<strong>ll /usr/bin/less</strong></p>

<p>-rwsr-xr-x 1 root root 154536 Sep 26 2011 /usr/bin/less</p>

<p>另外:</p>

<p>[root@xuegod63 ~]#&nbsp;<strong>chmod 4755 /usr/bin/less</strong>&nbsp;# 等同于chmod u+s /usr/bin/less</p>

<h4>2.2 SGID</h4>

<p>限定:<strong>既可以给二进制可执行程序设置,也可以给目录设置。</strong></p>

<p>所属组</p>

<p>[root@xuegod63 ~]#&nbsp;<strong>mkdir test</strong></p>

<p>[root@xuegod63 ~]#&nbsp;<strong>ll -d test</strong></p>

<p>drwxr-xr-x 2 root root 4096 Jan 24 20:14 test</p>

<p>[root@xuegod63 ~]#&nbsp;<strong>chmod g+s test</strong></p>

<p>[root@xuegod63 ~]#&nbsp;<strong>!ll</strong></p>

<p>[root@xuegod63 ~]#&nbsp;<strong>ll -d test</strong></p>

<p>drwxr-<strong>s</strong>r-x 2 root root 4096 Jan 24 20:14 test</p>

<p>测试:sgid 效果</p>

<p>[root@xuegod63 ~]#&nbsp;<strong>chown :bin test/</strong></p>

<p>[root@xuegod63 ~]#&nbsp;<strong>touch test/a.txt</strong></p>

<p>[root@xuegod63 ~]#&nbsp;<strong>ll !$</strong></p>

<p>[root@xuegod63 ~]#&nbsp;<strong>ll test/a.txt</strong></p>

<p>-rw-r--r-- 1 root&nbsp;<strong>bin</strong>0 Jan 24 20:15 test/a.txt</p>

<h4>2.3 Stickybit</h4>

<p><strong>限定:只作用于目录</strong></p>

<p><strong>功能:目录下创建的文件只有 root、文件创建者、目录所有者才能删除。</strong></p>

<p>[root@xuegod63 ~]#<strong>ll -d /tmp/</strong></p>

<p>drwxrwxrwt. 10 root root 4096 Jan 24 21:17 /tmp/</p>

<p>[root@xuegod63 ~]#&nbsp;<strong>chmod o+t /tmp/</strong></p>

<h2><strong>四、扩展 ACL</strong></h2>

<p><strong>ACL:access control list</strong>&nbsp;访问控制列表</p>

<p>chmod 命令的 ugo 3 个权限控制无法满足,为了提供更高级的权限管理,引出了 acl 访问</p>

<p>控制列表</p>

<h3>1.查看文件系统是否支持 acl 功能</h3>

<p>[root@localhost test]#&nbsp;<strong>tune2fs -l /dev/sda5 |grep options</strong></p>

<p>Default mount options: (none) 不支持 acl 功能</p>

<h3>2.设置 acl 功能</h3>

<p>[root@localhost ~]#&nbsp;<strong>tune2fs -o acl /dev/sda5</strong>设置磁盘 acl 功能</p>

<p>[root@localhost ~]#&nbsp;<strong>tune2fs -o ^acl /dev/sda5</strong>&nbsp;取消设置磁盘 acl 功能</p>

<p>[root@localhost ~]#&nbsp;<strong>tune2fs -l /dev/sda5 |grep options</strong></p>

<p>Default mount options: acl 支持 acl 功能</p>

<p>用 mount 命令去查看</p>

<p>注:<strong>在安装过程中创建的磁盘默认是带有 acl 功能,后期新建的磁盘必须使用 acl 参数进行</strong><strong>挂载才能启用 acl 功能</strong></p>

<h3>3.修改文件和目录的 acl 权限</h3>

<p>[root@localhost test]#&nbsp;<strong>setfacl -m u:student:rwx test1</strong></p>

<p>设置 student 用户对 test1 文件拥有 rwx 权限</p>

<p>[root@localhost test]#&nbsp;<strong>setfacl -m u:teacher:rw test1</strong></p>

<p>设置 teacher 用户对 test1 文件拥有 rw 权限</p>

<p>[root@localhost test]#&nbsp;<strong>getfacl test1</strong>#查看 test1 文件的 acl 权限</p>

<p>[root@localhost test]#&nbsp;<strong>setfacl -m g:test1:rwx test2</strong></p>

<p>设置 test1 组对 test2 这个文件拥有 rwx 权限 #用户和组相同名的可以有权限</p>

<p><img alt="Linux基础之——文件权限（一）" src="http://p3.pstatp.com/large/2ed90003e413dd2300a6" /></p>

<p>[root@suifeng128 test]#&nbsp;<strong>setfacl -m u:sf:rwx file1</strong></p>

<p>[root@suifeng128 test]#&nbsp;<strong>ll file1</strong></p>

<p>-rw-rwxr--+ 1 root root 0 12 月 14 14:58 file1</p>

<p>[root@suifeng128 test]#&nbsp;<strong>getfacl file1</strong></p>

<p><strong># file: file1</strong></p>

<p><strong># owner: root</strong></p>

<p><strong># group: root</strong></p>

<p><strong>user::rw-</strong></p>

<p><strong>user:sf:rwx</strong></p>

<p><strong>group::r--</strong></p>

<p><strong>mask::rwx</strong></p>

<p><strong>other::r--</strong></p>

<p>[root@suifeng128 test]#<strong>chmod 644 file1</strong>#对文件设置了 644 权限</p>

<p>[root@suifeng128 test]#&nbsp;<strong>getfacl file1</strong></p>

<p># file: file1</p>

<p># owner: root</p>

<p># group: root</p>

<p>user::rw-</p>

<p>user:sf:rwx #effective:r-- #sf(账户)有 rwx 权限,但是对 file1 只要 r--权限</p>

<p>group::r--</p>

<p>mask::r--</p>

<p>other::r--</p>

<h3>4 .setfacl 参数</h3>

<p><strong>-m :设置 acl 权限</strong></p>

<p><strong>u:给用户设置 g:给组设置</strong></p>

<p><strong>stduent:给 student 设置</strong></p>

<p><strong>rwx:给 student 设置的权限</strong></p>

<p><strong>test1:给 test1 这个文件</strong></p>

<p>-x u:student test1 取消用户 student 的权限</p>

<p>[root@localhost test]#&nbsp;<strong>setfacl -x u:student test1</strong></p>

<p>#取消 student 对 test1 的 acl 权限</p>

<p>-b test1</p>

<p>[root@localhost test]#&nbsp;<strong>setfacl -b test1</strong>&nbsp;#取消所有的 acl 权限 #只对 test1 目录有效对目录下的文件和目录无效</p>

<p>-d, --default operations apply to the default ACL</p>

<p>注:<strong>d 参数只能给目录设置</strong></p>

<p><strong>setfacl: test1: Only directories can have default ACLs</strong></p>

<p>setfacl -m d:g:test1:rwx test2</p>

<p>test2 组下的所有字目录或文件讲继承 test2 的默认权限(理解可以参考下 SGID)</p>

<p><strong>#d 的认只对使用命令后所创建的目录有效,对文件也有效默</strong></p>

<p><img alt="Linux基础之——文件权限（一）" src="http://p1.pstatp.com/large/31bc00030c661321ef0e" /></p>

<p>-k 取消默认的 acl 设置</p>

<p>[root@localhost test]#&nbsp;<strong>setfacl -k tes</strong><strong>t2/</strong>#只取消当前目录 acl,不对目录下的目录有效</p>

<p><img alt="Linux基础之——文件权限（一）" src="http://p3.pstatp.com/large/2ed90003e412be4b6168" /></p>

<p><strong>setfacl -R -m u:student:rwx test2</strong>#对命令使用前所创建的目录和目录下的文件都设置了 acl 权限 # -R 参数 必须在最前面</p>

<p>&nbsp;</p>

<h2><strong>实战:创建一个让 root 都无法删除的黑客文件</strong></h2>

<p>(REHL6 Linux 文件系统扩展属性:chattr lsattr)</p>

<p>+a 只能追加内容</p>

<p>+i 不能被修改</p>

<p>例: 让 root 都无法编辑的文件。在黑客时可以使用此命令</p>

<p>[root@bogon b]#&nbsp;<strong>chattr +a a.txt</strong></p>

<p>[root@bogon b]#<strong>echo aaaa &gt;&gt; a.txt</strong>#可以执行成功。</p>

<p>[root@bogon b]#<strong>vim a.txt</strong>#vim 编辑在后面添加是不行的</p>

<p>[root@bogon b]#&nbsp;<strong>chattr +i a.txt</strong></p>

<p>[root@bogon b]#&nbsp;<strong>echo aaaaaaa &gt;&gt; a.txt</strong></p>

<p>-bash: a.txt: 权限不够</p>

<p>[root@bogon b]#&nbsp;<strong>rm -rf a.txt</strong></p>

<p>rm: 无法删除&quot;a.txt&quot;: 不允许的操作</p>

<p>#注:添加了 a 或 i 权限后,root 就无法删除了</p>

<p>[root@localhost test]#&nbsp;<strong>chattr -i mk.txt</strong>&nbsp;#取消 -i</p>

<p>[root@localhost test]#&nbsp;<strong>chattr -a mk.txt</strong>&nbsp;#取消 -a</p>

<p>[root@localhost test]#&nbsp;<strong>lsattr !$</strong></p>

<p>lsattr mk.txt</p>

<p>-------------e- mk.txt</p>
