<h1>Linux下Redis的安装</h1>

<h2><strong>一、<a href="http://lib.csdn.net/base/redis" target="_blank" title="Redis知识库">Redis</a>介绍</strong></h2>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="http://lib.csdn.net/base/redis" target="_blank" title="Redis知识库">redis</a>是当前比较热门的NOSQL系统之一，它是一个key-value存储系统。和Memcache类似，但很大程度补偿了Memcache的不足，它支持存储的value类型相对更多，包括string、list、set、zset和hash。这些数据类型都支持push/pop、add/remove及取交集并集和差集及更丰富的操作。在此基础上，Redis支持各种不同方式的排序。</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;和Memcache一样，Redis数据都是缓存在计算机内存中，不同的是，Memcache只能将数据缓存到内存中，无法自动定期写入硬盘，这就表示，一断电或重启，内存清空，数据丢失。所以Memcache的应用场景适用于缓存无需持久化的数据。而Redis不同的是它会周期性的把更新的数据写入磁盘或者把修改操作写入追加的记录文件，实现数据的持久化。</p>

<h2>二、Redis的安装</h2>

<p>下面介绍在<a href="http://lib.csdn.net/base/linux" target="_blank" title="Linux知识库">Linux</a>环境下，Redis的安装与部署</p>

<p>1、首先上官网下载Redis&nbsp;压缩包，地址：<a href="http://redis.io/download" target="_blank">http://redis.io/download</a>&nbsp;下载稳定版3.0.7即可。</p>

<p>2、通过远程管理工具，将压缩包拷贝到<a href="http://lib.csdn.net/base/linux" target="_blank" title="Linux知识库">linux</a>服务器中，执行解压操作</p>

<p>&nbsp;<img alt="" src="http://img.blog.csdn.net/20160201105451649?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" /></p>

<p>3、执行make&nbsp;对Redis解压后文件进行编译</p>

<p>&nbsp;<img alt="" src="http://img.blog.csdn.net/20160201105518649?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" /></p>

<p>&nbsp;&nbsp;&nbsp; 编译完成之后，可以看到解压文件redis-3.0.7&nbsp;中会有对应的src、conf等文件夹，这和windows下安装解压的文件一样，大部分安装包都会有对应的类文件、配置文件和一些命令文件。</p>

<p><img alt="" src="http://img.blog.csdn.net/20160201105703040?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" /></p>

<p>4、编译成功后，进入src文件夹，执行make&nbsp;install进行Redis安装</p>

<p>5、安装完成，界面如下</p>

<p>&nbsp;<img alt="" src="http://img.blog.csdn.net/20160201105829972?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" /></p>

<h2>三、Redis的部署</h2>

<p>安装成功后，下面对Redis&nbsp;进行部署</p>

<p>1、首先为了方便管理，将Redis文件中的conf配置文件和常用命令移动到统一文件中</p>

<p>a)创建bin和redis.conf文件</p>

<p>mkdir&nbsp;-p/usr/local/redis/bin</p>

<p>mkdir&nbsp;-p/usr/local/redis/ect</p>

<p>b)执行Linux文件移动命令：</p>

<p>mv&nbsp;/lamp/redis-3.0.7/redis.conf&nbsp;/usr/local/redis/etc</p>

<p>cd&nbsp;/lamp/redis-3.0.7/src</p>

<p>mv&nbsp;mkreleasdhdr.sh&nbsp;redis-benchmark&nbsp;redis-check-aof&nbsp;redis-check-dump&nbsp;redis-cli&nbsp;redis-server&nbsp;/usr/local/redis/bin</p>

<p>2、执行Redis-server&nbsp;命令，启动Redis&nbsp;服务</p>

<p>&nbsp;<img alt="" src="http://img.blog.csdn.net/20160201111028706?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" /></p>

<p>注意：这里直接执行Redis-server&nbsp;启动的Redis服务，是在前台直接运行的(效果如上图)，也就是说，执行完该命令后，如果Lunix关闭当前会话，则Redis服务也随即关闭。正常情况下，启动Redis服务需要从后台启动，并且指定启动配置文件。&nbsp;</p>

<p>3、后台启动redis服务</p>

<p>a)首先编辑conf文件，将daemonize属性改为yes（表明需要在后台运行）</p>

<p>cd&nbsp;etc/</p>

<p>Vi&nbsp;redis.conf</p>

<p>命令模式下，输入/daemonize 查找到相应位置。</p>

<p>b)再次启动redis服务，并指定启动服务配置文件</p>

<p>redis-server&nbsp;/usr/local/redis/etc/redis.conf</p>

<p>&nbsp;<img alt="" src="http://img.blog.csdn.net/20160201105916098?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" /></p>

<p>4、服务端启动成功后，执行redis-cli启动Redis&nbsp;客户端，查看端口号。</p>

<p>&nbsp;<img alt="" src="http://img.blog.csdn.net/20160201111240006?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" /></p>

<h3>四、总结Linux&nbsp;、Redis&nbsp;操作常用命令</h3>

<p>Linux：</p>

<p>cd&nbsp;/usr&nbsp;从子文件夹进入上级文件夹usr</p>

<p>cd&nbsp;local&nbsp;从父到子</p>

<p>mv&nbsp;/A&nbsp;/B&nbsp;将文件A移动到B</p>

<p>vi&nbsp;usr/local/redis/redis.conf&nbsp;编辑redis.conf&nbsp;文件</p>

<p>:wq&nbsp;&nbsp;保存修改，并退出</p>

<p>Redis：</p>

<p>Redis-server&nbsp;/usr..../redis.conf&nbsp;&nbsp;&nbsp;启动redis服务，并指定配置文件</p>

<p>Redis-cli&nbsp;&nbsp;启动redis&nbsp;客户端</p>

<p>Pkill&nbsp;redis-server&nbsp;&nbsp;&nbsp;关闭redis服务</p>

<p>Redis-cli&nbsp;shutdown&nbsp;关闭redis客户端</p>

<p>Netstat&nbsp;-tunpl|grep&nbsp;6379&nbsp;查看redis&nbsp;默认端口号6379占用情况&nbsp;</p>

<p>&nbsp;</p>

<div class="article_title" style="-webkit-text-stroke-width:0px; margin-bottom:21px; text-align:start">
<h1><span style="font-size:12px"><span style="font-family:&quot;microsoft yahei&quot;"><span style="font-size:18px"><a href="http://blog.csdn.net/daybreak1209/article/details/51493265" style="text-decoration:none; color:#000000">Redis 分布式集群搭建</a></span></span></span></h1>
</div>

<div class="article_content tracking-ad" id="article_content" style="-webkit-text-stroke-width:0px; margin-bottom:35px; margin-left:0px; margin-right:0px; margin-top:35px; text-align:start">
<h2><span style="font-size:15px"><span style="font-family:&quot;microsoft yahei&quot;"><strong><span style="font-size:11pt"><strong><span style="font-family:&quot;Comic Sans MS&quot;">一、Redis集群<a class="replace_word" href="http://lib.csdn.net/base/architecture" style="text-decoration:none; color:#df3434; font-weight:bold" target="_blank" title="大型网站架构知识库">架构</a></span></strong></span></strong></span></span></h2>

<p style="margin-left:21pt; margin-right:0pt"><span style="font-size:15px"><span style="font-family:&quot;microsoft yahei&quot;"><span style="font-size:11pt"><span style="font-family:&quot;Comic Sans MS&quot;">1、Redis集群架构图</span></span></span></span></p>

<p style="margin-left:21pt; margin-right:0pt"><span style="font-size:15px"><span style="font-family:&quot;microsoft yahei&quot;"><span style="font-size:11pt"><span style="font-family:&quot;Comic Sans MS&quot;"><img alt="" src="http://img.blog.csdn.net/20160524202921640?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" style="border:none; height:480px; width:541px" /></span></span></span></span></p>

<p style="margin-left:21pt; margin-right:0pt"><span style="font-size:15px"><span style="font-family:&quot;microsoft yahei&quot;"><span style="font-size:11pt"><span style="font-family:&quot;Comic Sans MS&quot;">蓝色的为Redis集群中的每个node节点，节点之间通过ping 命令，<a class="replace_word" href="http://lib.csdn.net/base/softwaretest" style="text-decoration:none; color:#df3434; font-weight:bold" target="_blank" title="软件测试知识库">测试</a>相互是否连接正常，普通集群没有主从区分，连接任何一个节点操作，都可以转发到其他任意一个节点。</span></span></span></span></p>

<p style="margin-left:21pt; margin-right:0pt"><span style="font-size:15px"><span style="font-family:&quot;microsoft yahei&quot;"><span style="font-size:11pt"><span style="font-family:&quot;Comic Sans MS&quot;">1、</span></span><span style="font-size:11pt"><span style="font-family:&quot;Comic Sans MS&quot;">Redis 容错机制</span></span></span></span></p>

<p style="margin-left:21pt; margin-right:0pt"><span style="font-size:15px"><span style="font-family:&quot;microsoft yahei&quot;"><span style="font-size:11pt"><span style="font-family:&quot;Comic Sans MS&quot;">&nbsp;每Redis提供了节点之间相互发送的ping命令，用于测试每个节点的健康状态，集群中连接正常的节点接收到其他节点发送的ping命令时，会返回一个pong字符串。</span></span></span></span></p>

<p style="margin-left:21pt; margin-right:0pt"><span style="font-size:15px"><span style="font-family:&quot;microsoft yahei&quot;"><span style="font-size:11pt"><span style="font-family:&quot;Comic Sans MS&quot;">Redis投票机制：如果一个节点A给B发送ping没有得到pong返回，那么A就会通知其他节点再次给B发送ping，如果集群中超过一半的节点给B发送ping都没有得到返回，那么B就被坐实game over了，所以为了避免单点故障，一般都会为Redis的每个节点提供一个备份节点，B节点挂掉了立马启动B的备份节点服务器。</span></span></span></span></p>

<p style="margin-left:21pt; margin-right:0pt"><span style="font-size:15px"><span style="font-family:&quot;microsoft yahei&quot;"><span style="font-size:11pt"><span style="font-family:&quot;Comic Sans MS&quot;">2、Redis 集群存储原理</span></span></span></span></p>

<p style="margin-left:21pt; margin-right:0pt"><span style="font-size:15px"><span style="font-family:&quot;microsoft yahei&quot;"><span style="font-family:&quot;Comic Sans MS&quot;"><span style="font-size:11pt">每个节点上的数据都不一样，（一样就是主备了）把数据都分散存放到各个节点上进行存储。如何确定哪些类型数据存入哪个节点呢？Redis中槽slot就用于圈定当前节点的存储范围，分散存储使用hash<a class="replace_word" href="http://lib.csdn.net/base/datastructure" style="text-decoration:none; color:#df3434; font-weight:bold" target="_blank" title="算法与数据结构知识库">算法</a>，确定什么值放到哪个槽里</span><span style="font-size:11pt">。</span></span></span></span></p>

<p style="margin-left:21pt; margin-right:0pt"><span style="font-size:15px"><span style="font-family:&quot;microsoft yahei&quot;"><span style="font-size:11pt"><span style="font-family:&quot;Comic Sans MS&quot;">&nbsp;所以在创建Redis集群时，会首先为每个节点创建槽容量，例如从1~2000，指定数据存储区域。</span></span></span></span></p>

<p style="margin-left:21pt; margin-right:0pt"><span style="font-size:15px"><span style="font-family:&quot;microsoft yahei&quot;"><span style="font-size:11pt"><span style="font-family:&quot;Comic Sans MS&quot;">3、</span></span><span style="font-size:11pt"><span style="font-family:&quot;Comic Sans MS&quot;">Redis 持久化机制</span></span></span></span></p>

<p style="margin-left:21pt; margin-right:0pt"><span style="font-size:15px"><span style="font-family:&quot;microsoft yahei&quot;"><span style="font-size:11pt"><span style="font-family:&quot;Comic Sans MS&quot;">Redis提供了2中数据持久化方式：</span></span></span></span></p>

<p style="margin-left:21pt; margin-right:0pt"><span style="font-size:15px"><span style="font-family:&quot;microsoft yahei&quot;"><span style="font-size:11pt"><span style="font-family:&quot;Comic Sans MS&quot;">Snapshotting：定时的将Redis内存的当前状态保存到RDB文件中,持久化到硬盘。</span></span></span></span></p>

<p style="margin-left:21pt; margin-right:0pt"><span style="font-size:15px"><span style="font-family:&quot;microsoft yahei&quot;"><span style="font-size:11pt"><span style="font-family:&quot;Comic Sans MS&quot;">AOF（append-only file）：将所有的command操作保存到aof文件中，AOP使得同步频率很高，数据即便丢失，粒度也很小，但性能上有所牺牲。默认数据持久化会2s同步一次，也可以进行配置改变同步频率。</span></span></span></span></p>

<p style="margin-left:21pt; margin-right:0pt"><span style="font-size:15px"><span style="font-family:&quot;microsoft yahei&quot;"><span style="font-size:11pt"><span style="font-family:&quot;Comic Sans MS&quot;">&nbsp;翻译自redis-wiki</span></span></span></span></p>

<h2 style="margin-left:21pt; margin-right:0pt"><span style="font-size:15px"><span style="font-family:&quot;microsoft yahei&quot;"><strong><span style="font-size:11pt"><strong><span style="font-family:&quot;Comic Sans MS&quot;">二、Redis集群搭建</span></strong></span></strong></span></span></h2>

<p style="margin-left:21pt; margin-right:0pt"><span style="font-size:15px"><span style="font-family:&quot;microsoft yahei&quot;"><span style="font-size:11pt"><span style="font-family:&quot;Comic Sans MS&quot;">&nbsp; 现在开始搭建具有3各节点和3个备份节点的Redis cluster。端口分别从7001-7006，因为测试机内存的原因，搭建一个使用6个Redis实例搭建一个伪分布式集群。</span></span></span></span></p>

<p style="margin-left:0px; margin-right:0px"><span style="font-size:15px"><span style="font-family:&quot;microsoft yahei&quot;"><span style="font-size:10.5pt"><span style="font-size:11pt"><span style="font-family:&quot;Comic Sans MS&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1、搭建集群所需环境</span></span></span></span></span></p>

<p><span style="font-size:15px"><span style="font-family:&quot;microsoft yahei&quot;"><span style="font-family:&quot;Comic Sans MS&quot;"><span style="font-size:11pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1）使用</span><span style="font-size:10.5pt">yum install ruby</span><span style="font-size:11pt">安装Ruby，因为redis中创建集群的脚本是以rb结尾的ruby文件（下图可见该rb文件）。使用ruby -v查看ruby是否安装成功。</span></span></span></span></p>

<p><span style="font-size:15px"><span style="font-family:&quot;microsoft yahei&quot;"><span style="font-family:&quot;Comic Sans MS&quot;"><span style="font-size:11pt"><img alt="" src="http://img.blog.csdn.net/20160524203254023?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" style="border:none" />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2）使用</span><span style="font-size:10.5pt">&nbsp;yum install rubygems</span><span style="font-size:11pt">安装RubyGems-Ruby组件的打包系统，用于管理Ruby程序包。</span></span></span></span></p>

<p style="margin-left:0px; margin-right:0px"><span style="font-size:15px"><span style="font-family:&quot;microsoft yahei&quot;"><span style="font-size:10.5pt"><span style="font-size:11pt"><span style="font-family:&quot;Comic Sans MS&quot;">2、创建6个Redis实例</span></span></span></span></span></p>

<p style="margin-left:0px; margin-right:0px"><span style="font-size:15px"><span style="font-family:&quot;microsoft yahei&quot;"><span style="font-size:10.5pt"><span style="font-size:10.5pt"><span style="font-family:&quot;Comic Sans MS&quot;">1）将redis的解压包中的bin文件件均拷贝到新创建的redis-cluster（含有redis-trib.rb文件）的redis01文件中</span></span></span></span></span></p>

<p style="margin-left:0px; margin-right:0px"><span style="font-size:15px"><span style="font-family:&quot;microsoft yahei&quot;"><span style="font-size:10.5pt"><span style="font-size:10.5pt"><span style="font-family:&quot;Comic Sans MS&quot;"><img alt="" src="http://img.blog.csdn.net/20160524203639893?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" style="border:none" /></span></span></span></span></span></p>

<p style="margin-left:0px; margin-right:0px"><span style="font-size:15px"><span style="font-family:&quot;microsoft yahei&quot;"><span style="font-size:10.5pt"><span style="font-size:10.5pt"><span style="font-family:&quot;Comic Sans MS&quot;">2）修改redis01的redis.conf文件，修改端口号和cluster-enable属性</span></span></span></span></span></p>

<p style="margin-left:0px; margin-right:0px"><span style="font-size:15px"><span style="font-family:&quot;microsoft yahei&quot;"><span style="font-size:10.5pt"><span style="font-size:10.5pt"><span style="font-family:&quot;Comic Sans MS&quot;"><img alt="" src="http://img.blog.csdn.net/20160524203741737?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" style="border:none" /></span></span></span></span></span></p>

<p style="margin-left:0px; margin-right:0px"><span style="font-size:15px"><span style="font-family:&quot;microsoft yahei&quot;"><span style="font-size:10.5pt"><span style="font-size:10.5pt"><span style="font-family:&quot;Comic Sans MS&quot;">3）依次拷贝redis01为redis02-redis06，修改端口号</span></span></span></span></span></p>

<p style="margin-left:0px; margin-right:0px"><span style="font-size:15px"><span style="font-family:&quot;microsoft yahei&quot;"><span style="font-size:10.5pt"><span style="font-size:10.5pt"><span style="font-family:&quot;Comic Sans MS&quot;"><img alt="" src="http://img.blog.csdn.net/20160524203819467?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" style="border:none" /></span></span></span></span></span></p>

<p style="margin-left:0px; margin-right:0px"><span style="font-size:15px"><span style="font-family:&quot;microsoft yahei&quot;"><span style="font-size:10.5pt"><span style="font-size:10.5pt"><span style="font-family:&quot;Comic Sans MS&quot;">4）编写一个sh脚本，一次性启动6个Redis实例</span></span></span></span></span></p>

<p style="margin-left:0px; margin-right:0px"><span style="font-size:15px"><span style="font-family:&quot;microsoft yahei&quot;"><span style="font-size:10.5pt"><span style="font-size:10.5pt"><span style="font-family:&quot;Comic Sans MS&quot;"><img alt="" src="http://img.blog.csdn.net/20160524203849734?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" style="border:none" /></span></span></span></span></span></p>

<p style="margin-left:0px; margin-right:0px"><span style="font-size:15px"><span style="font-family:&quot;microsoft yahei&quot;"><span style="font-size:10.5pt"><span style="font-size:10.5pt"><span style="font-family:&quot;Comic Sans MS&quot;">5）执行sh脚本，启动redis节点，并查看Redis实例启动情况</span></span></span></span></span></p>

<p style="margin-left:0px; margin-right:0px"><span style="font-size:15px"><span style="font-family:&quot;microsoft yahei&quot;"><span style="font-size:10.5pt"><span style="font-size:10.5pt"><span style="font-family:&quot;Comic Sans MS&quot;"><img alt="" src="http://img.blog.csdn.net/20160524204009454?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" style="border:none" /></span></span></span></span></span></p>

<p style="margin-left:0px; margin-right:0px"><span style="font-size:15px"><span style="font-family:&quot;microsoft yahei&quot;"><span style="font-size:10.5pt"><span style="font-size:10.5pt"><span style="font-family:&quot;Comic Sans MS&quot;">6）执行redis-trib.rb脚本，创建集群。</span></span></span></span></span></p>

<p style="margin-left:0px; margin-right:0px"><span style="font-size:15px"><span style="font-family:&quot;microsoft yahei&quot;"><span style="font-size:12px"><span style="font-family:Consolas,&quot;Courier New&quot;,Courier,mono,serif">./redis-trib.rb&nbsp;create&nbsp;--replicas&nbsp;1&nbsp;192.168.132.128:7001&nbsp;192.168.132.128:7002&nbsp;192.168.132.128:7003&nbsp;192.168.132.128:7004&nbsp;192.168.132.128:7005&nbsp;&nbsp;192.168.132.128:7006&nbsp;&nbsp;</span></span></span></span></p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p style="margin-left:0px; margin-right:0px"><span style="font-size:15px"><span style="font-family:&quot;microsoft yahei&quot;"><span style="font-size:10.5pt"><span style="font-family:&quot;Comic Sans MS&quot;"><span style="font-size:10.5pt"><img alt="" src="http://img.blog.csdn.net/20160524204321006?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" style="border:none" />&nbsp;&nbsp;&nbsp;&nbsp;</span></span></span></span></span></p>

<p style="margin-left:0px; margin-right:0px"><span style="font-size:15px"><span style="font-family:&quot;microsoft yahei&quot;"><span style="font-size:10.5pt"><span style="font-family:&quot;Comic Sans MS&quot;">&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size:10.5pt">在集群的创建日志信息中可以发现，使用hash 创建slots，master节点为01.02.03 ，剩余3个用于做备机节点，并显示了主从对应关系以及每个节点槽范围信息。</span></span></span></span></span></p>

<h2 style="margin-left:0px; margin-right:0px"><span style="font-size:15px"><span style="font-family:&quot;microsoft yahei&quot;"><span style="font-size:10.5pt"><span style="font-family:&quot;Comic Sans MS&quot;"><span style="font-size:10.5pt"><strong>三、</strong></span></span><strong><span style="font-size:11pt"><strong><span style="font-family:&quot;Comic Sans MS&quot;">集群测试</span></strong></span></strong></span></span></span></h2>

<p style="margin-left:0px; margin-right:0px"><span style="font-size:15px"><span style="font-family:&quot;microsoft yahei&quot;"><span style="font-size:10.5pt"><span style="font-size:10.5pt"><span style="font-family:&quot;Comic Sans MS&quot;">1）使用任意一个节点客户端登陆 主要加上 -c参数表示用于集群连接</span></span></span></span></span></p>

<p style="margin-left:0px; margin-right:0px"><span style="font-size:15px"><span style="font-family:&quot;microsoft yahei&quot;"><span style="font-size:10.5pt"><span style="font-size:10.5pt"><span style="font-family:&quot;Comic Sans MS&quot;">2）任意执行一个set命令，节点间会自动转发，将set的值保存到对应的节点slot中。</span></span>&nbsp;</span></span></span></p>

<p style="margin-left:0px; margin-right:0px"><span style="font-size:15px"><span style="font-family:&quot;microsoft yahei&quot;"><span style="font-size:10.5pt"><span style="font-size:10.5pt"><span style="font-family:&quot;Comic Sans MS&quot;"><span style="font-size:10.5pt"><span style="font-family:&quot;Comic Sans MS&quot;"><img alt="" src="http://img.blog.csdn.net/20160524204358725?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" style="border:none" /></span></span></span></span></span></span></span></p>

<p style="margin-left:0px; margin-right:0px"><span style="font-size:15px"><span style="font-family:&quot;microsoft yahei&quot;"><span style="font-size:10.5pt">&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size:10.5pt"><span style="font-family:宋体"><span style="font-family:&quot;Comic Sans MS&quot;"><strong>集群搭建成功。</strong></span></span></span></span></span></span></p>

<h2 style="margin-left:0px; margin-right:0px"><span style="font-size:15px"><span style="font-family:&quot;microsoft yahei&quot;"><span style="font-size:10.5pt"><span style="font-size:10.5pt"><span style="font-family:宋体"><span style="font-family:&quot;Comic Sans MS&quot;"><strong><span style="font-size:14px">四、总结</span></strong></span></span></span></span></span></span></h2>

<p style="margin-left:0px; margin-right:0px"><span style="font-size:15px"><span style="font-family:&quot;microsoft yahei&quot;"><span style="font-size:10.5pt"><span style="font-size:14px"><span style="font-family:&quot;Comic Sans MS&quot;"><span style="font-size:10.5pt"><span style="font-family:宋体">建成功。在创建集群时，笔者出现一个redis节点拒绝连接的错误，以至于集群创建失败。</span></span></span></span></span></span></span></p>

<p style="margin-left:0px; margin-right:0px"><span style="font-size:15px"><span style="font-family:&quot;microsoft yahei&quot;"><span style="font-size:10.5pt"><span style="font-size:14px"><span style="font-family:&quot;Comic Sans MS&quot;"><span style="font-size:10.5pt"><span style="font-family:宋体"><img alt="" src="http://img.blog.csdn.net/20160524204828601?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" style="border:none" /></span></span></span></span></span></span></span></p>

<p style="margin-left:0px; margin-right:0px"><span style="font-size:15px"><span style="font-family:&quot;microsoft yahei&quot;"><span style="font-size:10.5pt"><span style="font-size:14px"><span style="font-family:&quot;Comic Sans MS&quot;"><span style="font-size:10.5pt"><span style="font-family:宋体">经过反复排查发现是自己原来安装的redis进行了权限设置，为方便了方便测试，于是选择取消该权限设置。</span></span></span></span></span></span></span></p>

<p style="margin-left:0px; margin-right:0px">&nbsp;</p>

<h1 style="margin-left:0px; margin-right:0px">Redis 集群运维及java整合</h1>

<p>&nbsp;</p>

<h2><strong>一、<a href="http://lib.csdn.net/base/redis" target="_blank" title="Redis知识库">Redis</a>集群操作</strong></h2>

<p>1、开启<a href="http://lib.csdn.net/base/redis" target="_blank" title="Redis知识库">redis</a>集群</p>

<p>1）执行上文中编写好的shell脚本，先将redis服务全部开启</p>

<p>2）执行redis01/redis-cli -h 192.168.132.128 -p 7005 -c启动01节点客户端连接集群</p>

<p>2、查看Redis集群节点进程</p>

<p>&nbsp;<img alt="" src="http://img.blog.csdn.net/20160524211419689?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" /></p>

<p>3、关闭Redis集群</p>

<p>1)单机中，直接cd到redis/bin下，执行redis-cli连接到服务器， 然后shutdown即可。</p>

<p>2）或者指定redis节点端口号shut down ，统一编写成shell脚本如下：</p>

<p><img alt="" src="http://img.blog.csdn.net/20160524211628659?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" /></p>

<p>3)执行shell脚本,关闭redis集群</p>

<p><img alt="" src="http://img.blog.csdn.net/20160524211530330?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" /></p>

<h2><strong>二、Redis客户端连接集群</strong></h2>

<p>1、自带的redis-cli命令</p>

<p>2、RedisManager 可视化工具</p>

<p>&nbsp;<img alt="" src="http://img.blog.csdn.net/20160524211755442?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" style="height:570px; width:799px" /></p>

<p>&nbsp;&nbsp;&nbsp;&nbsp; 这个工具可用于连接单个redis节点，支持执行<a href="http://lib.csdn.net/base/linux" target="_blank" title="Linux知识库">Linux</a>命令，例如在01中set了一个a，转跳到03中进行保存，进入03便可看到0号<a href="http://lib.csdn.net/base/mysql" target="_blank" title="MySQL知识库">数据库</a>下的key为a的value。另外Redis默认的是有16个数据库，从0号数据库开始，集群环境下默认操作0号数据库。可也对redis.conf对默认数据库数量进行修改</p>

<p><img alt="" src="http://img.blog.csdn.net/20160524212238192?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" /></p>

<p>3、Jedis客户端jar</p>

<p>Jedis是Redis的<a href="http://lib.csdn.net/base/java" target="_blank" title="Java 知识库">Java</a>版本的客户端实现，封装了java操作Redis的一套实现。用于在java中对Redis进行数据操作。</p>

<p>1）首先引入Jedis jar包。</p>

<p>2）使用Jedis封装的API和对象对Redis节点进行数据操作。下面是几种连接方式的<a href="http://lib.csdn.net/base/softwaretest" target="_blank" title="软件测试知识库">测试</a>方法</p>

<p>使用单个Jedis对象创建连接</p>

<p>public&nbsp;void&nbsp;single()&nbsp;{&nbsp;&nbsp;<br />
&nbsp;&nbsp; &nbsp;//&nbsp;创建一个jedis对象&nbsp;&nbsp;<br />
&nbsp;&nbsp; &nbsp;Jedis&nbsp;jedis&nbsp;=&nbsp;new&nbsp;Jedis(&quot;192.168.132.128&quot;,&nbsp;6379);&nbsp;&nbsp;<br />
&nbsp;&nbsp; &nbsp;//&nbsp;调用方法，方法名和redis的命令一样&nbsp;&nbsp;<br />
&nbsp;&nbsp; &nbsp;jedis.set(&quot;key1&quot;,&nbsp;&quot;jedis-test&quot;);&nbsp;&nbsp;<br />
&nbsp;&nbsp; &nbsp;String&nbsp;string&nbsp;=&nbsp;jedis.get(&quot;key1&quot;);&nbsp;&nbsp;<br />
&nbsp;&nbsp; &nbsp;System.out.println(string);&nbsp;&nbsp;<br />
&nbsp;&nbsp; &nbsp;jedis.close();&nbsp;&nbsp;<br />
}</p>

<p>使用Jedis数据连接池创建连接</p>

<p>public&nbsp;void&nbsp;Pool()&nbsp;{&nbsp;&nbsp;<br />
&nbsp;&nbsp; &nbsp;//&nbsp;创建一个jedis连接池对象&nbsp;&nbsp;<br />
&nbsp;&nbsp; &nbsp;JedisPool&nbsp;pool&nbsp;=&nbsp;new&nbsp;JedisPool(&quot;192.168.132.128&quot;,&nbsp;6379);&nbsp;&nbsp;<br />
&nbsp;&nbsp; &nbsp;//&nbsp;从连接池中获取jedis对象&nbsp;&nbsp;<br />
&nbsp;&nbsp; &nbsp;Jedis&nbsp;jedis&nbsp;=&nbsp;pool.getResource();&nbsp;&nbsp;<br />
&nbsp;&nbsp; &nbsp;String&nbsp;string&nbsp;=&nbsp;jedis.get(&quot;key1&quot;);&nbsp;&nbsp;<br />
&nbsp;&nbsp; &nbsp;System.out.println(string);&nbsp;&nbsp;<br />
&nbsp;&nbsp; &nbsp;//&nbsp;注意每次使用完毕都需要关闭jedis连接，否则连接池很容易就到达最大连接数，溢出了。&nbsp;&nbsp;<br />
&nbsp;&nbsp; &nbsp;jedis.close();&nbsp;&nbsp;<br />
}</p>

<p>连接Redis集群</p>

<p>public&nbsp;void&nbsp;Cluster()&nbsp;{&nbsp;&nbsp;<br />
&nbsp;&nbsp; &nbsp;//&nbsp;创建一个hashset、用于存放所有的节点信息&nbsp;&nbsp;<br />
&nbsp;&nbsp; &nbsp;HashSet&lt;HostAndPort&gt;&nbsp;nodes&nbsp;=&nbsp;new&nbsp;HashSet&lt;&gt;();&nbsp;&nbsp;<br />
&nbsp;&nbsp; &nbsp;nodes.add(new&nbsp;HostAndPort(&quot;192.168.132.128&quot;,&nbsp;7001));&nbsp;&nbsp;<br />
&nbsp;&nbsp; &nbsp;nodes.add(new&nbsp;HostAndPort(&quot;192.168.132.128&quot;,&nbsp;7002));&nbsp;&nbsp;<br />
&nbsp;&nbsp; &nbsp;nodes.add(new&nbsp;HostAndPort(&quot;192.168.132.128&quot;,&nbsp;7003));&nbsp;&nbsp;<br />
&nbsp;&nbsp; &nbsp;nodes.add(new&nbsp;HostAndPort(&quot;192.168.132.128&quot;,&nbsp;7004));&nbsp;&nbsp;<br />
&nbsp;&nbsp; &nbsp;nodes.add(new&nbsp;HostAndPort(&quot;192.168.132.128&quot;,&nbsp;7005));&nbsp;&nbsp;<br />
&nbsp;&nbsp; &nbsp;nodes.add(new&nbsp;HostAndPort(&quot;192.168.132.128&quot;,&nbsp;7006));&nbsp;&nbsp;<br />
&nbsp;&nbsp; &nbsp;//&nbsp;创建一个集群&nbsp;&nbsp;<br />
&nbsp;&nbsp; &nbsp;JedisCluster&nbsp;cluster&nbsp;=&nbsp;new&nbsp;JedisCluster(nodes);&nbsp;&nbsp;<br />
&nbsp;&nbsp; &nbsp;cluster.set(&quot;key&quot;,&nbsp;&quot;cluster-connection-success&quot;);&nbsp;&nbsp;<br />
&nbsp;&nbsp; &nbsp;String&nbsp;string&nbsp;=&nbsp;cluster.get(&quot;key&quot;);&nbsp;&nbsp;<br />
&nbsp;&nbsp; &nbsp;System.out.println(string);&nbsp;&nbsp;<br />
&nbsp;&nbsp; &nbsp;<br />
&nbsp;&nbsp; &nbsp;cluster.close();&nbsp;&nbsp;<br />
}</p>

<p>注意：每次建立连接后处理完执行关闭连接操作，以免连接数超过最大连接数导致node 宕掉。</p>
</div>
