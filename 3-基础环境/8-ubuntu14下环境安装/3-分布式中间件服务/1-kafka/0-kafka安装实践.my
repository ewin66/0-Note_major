<h1>kafka安装实践</h1>

<h2>１.下载kafka正式版</h2>

<p>本文使用kafka_2.10-0.8.2.2（在此特别说明下，kafka_2.9.2-0.8.1.1.tgz由于版本相对较低的问题，好多.sh文件时缺少的，比如kafka-topics.sh，所以建议大家在安装的时候不要使用太老的版本，问题较多，并且启动kafka-server-start的时候还报错，始终无法启动成功～）</p>

<p>官网下载链接如下：<a href="http://kafka.apache.org/downloads.html" target="_blank">http://kafka.apache.org/downloads.html</a></p>

<p><strong>镜像下载地址：<a href="http://mirrors.hust.edu.cn/apache/kafka/1.0.0/kafka-1.0.0-src.tgz">http://mirrors.hust.edu.cn/apache/kafka/1.0.0/kafka-1.0.0-src.tgz</a></strong></p>

<h2>２．解压tar包</h2>

<p>命令如下：tar -zxvf kafka_2.10-0.8.2.2.tar.gz</p>

<h2>3.修改server.properties相关配置</h2>

<p>进入kafka根目录下的config/server.properties，主要修改的３个参数如下：</p>

<p>broker.id=0 //broker的标识（正数），集群内各个broker.id不能重复。</p>

<p>port=9092 //端口号，单节点内各个port不能重复(为了方便看最好不同节点端口也不要重复)。</p>

<p>log.dir =/tmp //存储log的地方（数据文件）。可根据自己的日志目录进行修改</p>

<p>以上配置时在单机上的配置，多台机器的配置要根据ｉｐ进行相关配置；</p>

<p>４．修改config下面的log4j.properties、zookeeper.properties的日志目录；</p>

<p>　　　　log4j.properties下面的kafka.logs.dir=logs，可根据自己需要修改成自己的目录；</p>

<p>　　　　zookeeper.properties下面的dataDir=/tmp/zookeeper，可根据需要修改成自己的目录</p>

<p>５．验证是否安装成功</p>

<p><strong>（１）&nbsp; start server</strong></p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 启动一个单节点的ｚｏｏｋｅｅｐｅｒ，命令如下：&gt;bin/zookeeper-server-start.sh config/zookeeper.properties</p>

<p>&nbsp;&nbsp;&nbsp;<strong>　准备启动一个３个ｂｒｏｋｅｒ节点的ｋａｆｋａ集群，因此做如下配置：</strong></p>

<p>　　　$ cp config/server.properties config/server-1.properties&nbsp;<br />
　　　$ cp config/server.properties config/server-2.properties</p>

<p>　　　并做如下修改：</p>

<p>　　　config/server-1.properties:<br />
&nbsp;&nbsp; 　　　　 broker.id=1<br />
&nbsp; &nbsp; 　　　　port=9093<br />
&nbsp;&nbsp; 　　　　 log.dir=/tmp/kafka-logs-1</p>

<p>　　　config/server-2.properties:<br />
&nbsp; 　　　　&nbsp; broker.id=2<br />
&nbsp;&nbsp; 　　　　 port=9094<br />
&nbsp;&nbsp; 　　　　 log.dir=/tmp/kafka-logs-2</p>

<p>　　　说明：<br />
　　　broker.id: broker节点的唯一标识<br />
　　　port: broker节点使用端口号<br />
　　　log.dir: 消息目录位置</p>

<p>　　　<strong>启动3个broker节点</strong><br />
　　　$ JMX_PORT=9997 bin/kafka-server-start.sh config/server-1.properties &amp;<br />
　　　$ JMX_PORT=9998 bin/kafka-server-start.sh config/server-2.properties &amp;<br />
　　　$ JMX_PORT=9999 bin/kafka-server-start.sh config/server.properties &amp;</p>

<p>　　　标红的内容可根据自己的需要进行配置；</p>

<p>&nbsp; 启动单个ｂｒｏｋｅｒ节点的ｋａｆｋａ集群，命令如下：&gt;bin/kafka-server-start.sh config/server.propertie</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 第一行时启动ｋａｆｋａ自带的ｚｏｏｋｅｅｐｅｒ</p>

<p>（２）create a topic</p>

<p>$bin/kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 1 --partitions 1 --topic test</p>

<p>$bin/kafka-topics.sh --list --zookeeper localhost:2181</p>

<p>topic: 3test &nbsp; &nbsp;partition: 0 &nbsp; &nbsp;leader: 2 &nbsp; &nbsp; &nbsp; replicas: 2,1,0 isr: 2,1,0<br />
　topic: test &nbsp; &nbsp; partition: 0 &nbsp; &nbsp;leader: 0 &nbsp; &nbsp; &nbsp; replicas: 0 &nbsp; &nbsp; isr: 0<br />
　topic: test_topic &nbsp; &nbsp; &nbsp; partition: 0 &nbsp; &nbsp;leader: 1 &nbsp; &nbsp; &nbsp; replicas: 0,1,2 isr: 1,2,0<br />
　说明：<br />
　partiton： partion id，由于此处只有一个partition，因此partition id 为0<br />
　leader：当前负责读写的lead broker id<br />
　relicas：当前partition的所有replication broker &nbsp;list<br />
　isr：relicas的子集，只包含出于活动状态的broker</p>

<p><strong>（３）send messag</strong>e</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$bin/kafka-console-producer.sh --broker-list localhost:9092 --topic test</p>

<p>（４）start a consumer</p>

<p>$bin/kafka-console-consumer.sh --zookeeper localhost:2181 --topic test --from-beginning</p>

<p>kafka-console-producer.sh和kafka-console-cousumer.sh只是系统提供的命令行工具。这里启动是为了测试是否能正常生产消费，验证流程正确性，在实际开发中还是要自行开发自己的生产者与消费者。</p>

<p>（５）start a produce</p>

<p><br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $ bin/kafka-console-producer.sh --broker-list localhost:9092 --topic test</p>

<p>　　　这样就可以的命令行输入信息，可以看到ｃｏｎｓｕｍｅｒ可以获得同样的信息～</p>

<p>&nbsp;<strong>&nbsp;6.干掉follow broker</strong></p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 杀掉一个非leader broker命令如下:server-1.properties里面的ｂｒｏｋｅｒ　＝１</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $&nbsp;pkill -9 -f server-1.properties</p>

<p>&nbsp;&nbsp; 　查看topic：<br />
　　　$ bin/kafka-list-topic.sh --zookeeper localhost:2181<br />
　　　topic: 3test &nbsp; &nbsp;partition: 0 &nbsp; &nbsp;leader: 2 &nbsp; &nbsp; &nbsp; replicas: 2,1,0 isr: 2,0<br />
　　　topic: test &nbsp; &nbsp; partition: 0 &nbsp; &nbsp;leader: 2 &nbsp; &nbsp; &nbsp; replicas: 0,1,2 isr: 2,0<br />
　　　此时，存活的broker只有2,0<br />
　　　测试：produce发送消息，consumer能正常接收到</p>

<p>&nbsp;<strong>7.继续干掉leader broker</strong></p>

<p>&nbsp;&nbsp; 干掉leader broker后，连续查看topic状态<br />
&nbsp;&nbsp; $&nbsp;pkill -9 -f server-2.properties &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br />
&nbsp;&nbsp; $ bin/kafka-list-topic.sh --zookeeper localhost:2181<br />
&nbsp;&nbsp; topic:&nbsp;test&nbsp;&nbsp; &nbsp;partition: 0 &nbsp; &nbsp;leader: 2 &nbsp; &nbsp; &nbsp; replicas: 2,1,0 isr: 2,0<br />
&nbsp;&nbsp;<br />
&nbsp;&nbsp; $&nbsp;bin/kafka-list-topic.sh --zookeeper localhost:2181<br />
&nbsp;&nbsp; topic: test &nbsp; &nbsp;partition: 0 &nbsp; &nbsp;leader: 2 &nbsp; &nbsp; &nbsp; replicas: 2,1,0 isr: 2,0<br />
&nbsp;<br />
&nbsp;&nbsp; $ bin/kafka-list-topic.sh --zookeeper localhost:2181<br />
&nbsp;&nbsp; topic: test &nbsp; &nbsp;partition: 0 &nbsp; &nbsp;leader: 0 &nbsp; &nbsp; &nbsp; replicas: 2,1,0 isr: 0<br />
&nbsp;&nbsp;<br />
&nbsp;&nbsp; $&nbsp;bin/kafka-list-topic.sh --zookeeper localhost:2181<br />
&nbsp;&nbsp; topic: test &nbsp; &nbsp;partition: 0 &nbsp; &nbsp;leader: 0 &nbsp; &nbsp; &nbsp; replicas: 2,1,0 isr: 0<br />
&nbsp;&nbsp;<br />
&nbsp;&nbsp; 杀掉leader broker过了一会，broker 0成为新的leader broker<br />
&nbsp;&nbsp; 测试：produce发送消息，consumer能正常接收到</p>

<p><strong>8．kafka常用命令</strong></p>

<p>创建topic</p>

<p>/kafka-topics.sh --create --zookeeper 192.168.153.128:2181 --replication-factor 1--partitions 1 --topic test123</p>

<p>查看topic信息</p>

<p>./kafka-topics.sh --describe --topic test123 --zookeeper 192.168.153.128:2181</p>

<p>修改topic分区</p>

<p>./kafka-topics.sh --alter --topic test123 --partitions 2 --zookeeper 192.168.153.128:2181</p>

<p>删除topic</p>

<p>./kafka-run-class.shkafka.admin.DeleteTopicCommand --topic test1 --zookeeper192.168.35.122:2181,192.168.35.123:2181</p>

<p>只是删除了zookeeper中元数据，数据文件还需手动删除。</p>
