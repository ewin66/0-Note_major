<h1>Hadoop集群安装配置教程_Hadoop2.6.0_Ubuntu/CentOS</h1>

<p>&nbsp;2014-08-09&nbsp;(updated:&nbsp;2016-09-26)&nbsp;126203&nbsp;217</p>

<p>本教程讲述如何配置 Hadoop 集群，默认读者已经掌握了 Hadoop 的单机伪分布式配置，否则请先查看<a href="http://www.powerxing.com/install-hadoop/" target="_blank">Hadoop安装教程_单机/伪分布式配置</a>&nbsp;或&nbsp;<a href="http://www.powerxing.com/install-hadoop-in-centos/" target="_blank">CentOS安装Hadoop_单机/伪分布式配置</a>。</p>

<p>本教程适合于原生 Hadoop 2，包括 Hadoop 2.6.0, Hadoop 2.7.1 等版本，主要参考了<a href="http://hadoop.apache.org/docs/stable/hadoop-project-dist/hadoop-common/ClusterSetup.html" target="_blank">官方安装教程</a>，步骤详细，辅以适当说明，<strong>保证按照步骤来，都能顺利安装并运行 Hadoop</strong>。另外有<a href="http://www.powerxing.com/install-hadoop-simplify/" target="_blank">Hadoop安装配置简略版</a>方便有基础的读者快速完成安装。本教程由<a href="http://www.powerxing.com/" target="_blank">给力星</a>出品，转载请注明。</p>

<p>为了方便新手入门，我们准备了两篇不同系统的 Hadoop 伪分布式配置教程。但其他 Hadoop 教程我们将不再区分，可同时适用于 Ubuntu 和 CentOS/RedHat 系统。例如本教程以 Ubuntu 系统为主要演示环境，但对 Ubuntu/CentOS 的不同配置之处、CentOS 6.x 与 CentOS 7 的操作区别等都会尽量给出注明。</p>

<h2>环境</h2>

<p>本教程使用&nbsp;<strong>Ubuntu 14.04 64位</strong>&nbsp;作为系统环境，基于原生 Hadoop 2，在&nbsp;<strong>Hadoop 2.6.0 (stable)</strong>&nbsp;版本下验证通过，可适合任何 Hadoop 2.x.y 版本，例如 Hadoop 2.7.1，Hadoop 2.4.1 等。</p>

<p>本教程简单的使用两个节点作为集群环境: 一个作为 Master 节点，局域网 IP 为 192.168.1.121；另一个作为 Slave 节点，局域网 IP 为 192.168.1.122。</p>

<h2>准备工作</h2>

<p>Hadoop 集群的安装配置大致为如下流程:</p>

<ol>
	<li>选定一台机器作为 Master</li>
	<li>在 Master 节点上配置 hadoop 用户、安装 SSH server、安装 Java 环境</li>
	<li>在 Master 节点上安装 Hadoop，并完成配置</li>
	<li>在其他 Slave 节点上配置 hadoop 用户、安装 SSH server、安装 Java 环境</li>
	<li>将 Master 节点上的 /usr/local/hadoop 目录复制到其他 Slave 节点上</li>
	<li>在 Master 节点上开启 Hadoop</li>
</ol>

<p>配置 hadoop 用户、安装 SSH server、安装 Java 环境、安装 Hadoop 等过程已经在<a href="http://www.powerxing.com/install-hadoop/" target="_blank">Hadoop安装教程_单机/伪分布式配置</a>&nbsp;或&nbsp;<a href="http://www.powerxing.com/install-hadoop-in-centos/" target="_blank">CentOS安装Hadoop_单机/伪分布式配置</a>中有详细介绍，请前往查看，不再重复叙述。</p>

<p><strong>继续下一步配置前，请先完成上述流程的前 4 个步骤</strong>。</p>

<h2>网络配置</h2>

<p>假设集群所用的节点都位于同一个局域网。</p>

<p>如果使用的是虚拟机安装的系统，那么需要更改网络连接方式为桥接（Bridge）模式，才能实现多个节点互连，例如在 VirturalBox 中的设置如下图。此外，如果节点的系统是在虚拟机中直接复制的，要确保各个节点的 Mac 地址不同（可以点右边的按钮随机生成 MAC 地址，否则 IP 会冲突）：</p>

<p><img alt="VirturalBox中节点的网络设置" src="http://cdn.powerxing.com/imgs/install-hadoop-cluster-01-virturalbox.png" />VirturalBox中节点的网络设置</p>

<p>Linux 中查看节点 IP 地址的命令为&nbsp;<code>ifconfig</code>，即下图所示的 inet 地址（<strong>注意虚拟机安装的 CentoS 不会自动联网，需要点右上角连上网络才能看到 IP 地址</strong>）：</p>

<p><img alt="Linux查看IP命令" src="http://cdn.powerxing.com/imgs/install-hadoop-cluster-02-ifconfig.png" />Linux查看IP命令</p>

<p>首先在 Master 节点上完成准备工作，并关闭 Hadoop (<code>/usr/local/hadoop/sbin/stop-dfs.sh</code>)，再进行后续集群配置。</p>

<p>为了便于区分，可以修改各个节点的主机名（在终端标题、命令行中可以看到主机名，以便区分）。在 Ubuntu/CentOS 7 中，我们在 Master 节点上执行如下命令修改主机名（即改为 Master，注意是区分大小写的）：</p>

<pre>
&nbsp;</pre>

<ol>
	<li>sudo vim /etc/hostname</li>
</ol>

<p>Shell 命令</p>

<p>如果是用 CentOS 6.x 系统，则是修改 /etc/sysconfig/network 文件，改为 HOSTNAME=Master，如下图所示：</p>

<p><img alt="CentOS中hostname设置" src="http://cdn.powerxing.com/imgs/install-hadoop-cluster-03-hostname-centos.png" />CentOS中hostname设置</p>

<p>然后执行如下命令修改自己所用节点的IP映射：</p>

<pre>
&nbsp;</pre>

<ol>
	<li>sudo vim /etc/hosts</li>
</ol>

<p>Shell 命令</p>

<p>例如本教程使用两个节点的名称与对应的 IP 关系如下：</p>

<pre>
<code>192.168.1.121   Master
192.168.1.122   Slave1
</code></pre>

<p>我们在 /etc/hosts 中将该映射关系填写上去即可，如下图所示（一般该文件中只有一个 127.0.0.1，其对应名为 localhost，如果有多余的应删除，特别是不能有 &ldquo;127.0.0.1 Master&rdquo; 这样的记录）：</p>

<p><img alt="Hadoop中的hosts设置" src="http://cdn.powerxing.com/imgs/install-hadoop-cluster-03-hosts.png" />Hadoop中的hosts设置</p>

<p>CentOS 中的 /etc/hosts 配置则如下图所示：</p>

<p><img alt="CentOS中的hosts设置" src="http://cdn.powerxing.com/imgs/install-hadoop-cluster-03-hosts-centos.png" />CentOS中的hosts设置</p>

<p><strong>修改完成后需要重启一下，重启后在终端中才会看到机器名的变化</strong>。接下来的教程中请注意区分 Master 节点与 Slave 节点的操作。</p>

<p><em>需要在所有节点上完成网络配置</em></p>

<p>如上面讲的是 Master 节点的配置，而在其他的 Slave 节点上，也要对 /etc/hostname（修改为 Slave1、Slave2 等） 和 /etc/hosts（跟 Master 的配置一样）这两个文件进行修改！</p>

<p>配置好后需要在各个节点上执行如下命令，测试是否相互 ping 得通，如果 ping 不通，后面就无法顺利配置成功：</p>

<pre>
&nbsp;</pre>

<ol>
	<li>ping Master -c 3 # 只ping 3次，否则要按 Ctrl+c 中断</li>
	<li>ping Slave1 -c 3</li>
</ol>

<p>Shell 命令</p>

<p>例如我在 Master 节点上&nbsp;<code>ping Slave1</code>，ping 通的话会显示 time，显示的结果如下图所示：</p>

<p><img alt="检查是否ping得通" src="http://cdn.powerxing.com/imgs/install-hadoop-cluster-04-ping-slave.png" />检查是否ping得通</p>

<p><strong>继续下一步配置前，请先完成所有节点的网络配置，修改过主机名的话需重启才能生效</strong>。</p>

<h2>SSH无密码登陆节点</h2>

<p>这个操作是要让 Master 节点可以无密码 SSH 登陆到各个 Slave 节点上。</p>

<p>首先生成 Master 节点的公匙，在 Master 节点的终端中执行（因为改过主机名，所以还需要删掉原有的再重新生成一次）：</p>

<pre>
&nbsp;</pre>

<ol>
	<li>cd ~/.ssh # 如果没有该目录，先执行一次ssh localhost</li>
	<li>rm ./id_rsa* # 删除之前生成的公匙（如果有）</li>
	<li>ssh-keygen -t rsa # 一直按回车就可以</li>
</ol>

<p>Shell 命令</p>

<p>让 Master 节点需能无密码 SSH 本机，在 Master 节点上执行：</p>

<pre>
&nbsp;</pre>

<ol>
	<li>cat ./id_rsa.pub &gt;&gt; ./authorized_keys</li>
</ol>

<p>Shell 命令</p>

<p>完成后可执行&nbsp;<code>ssh Master</code>&nbsp;验证一下（可能需要输入 yes，成功后执行&nbsp;<code>exit</code>&nbsp;返回原来的终端）。接着在 Master 节点将上公匙传输到 Slave1 节点：</p>

<pre>
&nbsp;</pre>

<ol>
	<li>scp ~/.ssh/id_rsa.pub hadoop@Slave1:/home/hadoop/</li>
</ol>

<p>Shell 命令</p>

<p>scp 是 secure copy 的简写，用于在 Linux 下进行远程拷贝文件，类似于 cp 命令，不过 cp 只能在本机中拷贝。执行 scp 时会要求输入 Slave1 上 hadoop 用户的密码(hadoop)，输入完成后会提示传输完毕，如下图所示：</p>

<p><img alt="通过scp向远程主机拷贝文件" src="http://cdn.powerxing.com/imgs/install-hadoop-cluster-05-scp.png" />通过scp向远程主机拷贝文件</p>

<p>接着在 Slave1 节点上，将 ssh 公匙加入授权：</p>

<pre>
&nbsp;</pre>

<ol>
	<li>mkdir ~/.ssh # 如果不存在该文件夹需先创建，若已存在则忽略</li>
	<li>cat ~/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys</li>
	<li>rm ~/id_rsa.pub # 用完就可以删掉了</li>
</ol>

<p>Shell 命令</p>

<p>如果有其他 Slave 节点，也要执行将 Master 公匙传输到 Slave 节点、在 Slave 节点上加入授权这两步。</p>

<p>这样，在 Master 节点上就可以无密码 SSH 到各个 Slave 节点了，可在 Master 节点上执行如下命令进行检验，如下图所示：</p>

<pre>
&nbsp;</pre>

<ol>
	<li>ssh Slave1</li>
</ol>

<p>Shell 命令</p>

<p><img alt="在Master节点中ssh到Slave节点" src="http://cdn.powerxing.com/imgs/install-hadoop-cluster-06-ssh-slave.png" />在Master节点中ssh到Slave节点</p>

<h2>配置PATH变量</h2>

<p>（CentOS 单机配置 Hadoop 的教程中有配置这一项了，这一步可以跳过）</p>

<p>在单机伪分布式配置教程的最后，说到可以将 Hadoop 安装目录加入 PATH 变量中，这样就可以在任意目录中直接使用 hadoo、hdfs 等命令了，如果还没有配置的，需要在 Master 节点上进行配置。首先执行&nbsp;<code>vim ~/.bashrc</code>，加入一行：</p>

<pre>
<code>export PATH=$PATH:/usr/local/hadoop/bin:/usr/local/hadoop/sbin
</code></pre>

<p>如下图所示：</p>

<p><img alt="配置PATH变量" src="http://cdn.powerxing.com/imgs/install-hadoop-cluster-07-path.png" />配置PATH变量</p>

<p>保存后执行&nbsp;<code>source ~/.bashrc</code>&nbsp;使配置生效。</p>

<h2>配置集群/分布式环境</h2>

<p>集群/分布式模式需要修改 /usr/local/hadoop/etc/hadoop 中的5个配置文件，更多设置项可点击查看官方说明，这里仅设置了正常启动所必须的设置项： slaves、<a href="http://hadoop.apache.org/docs/r2.6.0/hadoop-project-dist/hadoop-common/core-default.xml" target="_blank">core-site.xml</a>、<a href="http://hadoop.apache.org/docs/r2.6.0/hadoop-project-dist/hadoop-hdfs/hdfs-default.xml" target="_blank">hdfs-site.xml</a>、<a href="http://hadoop.apache.org/docs/r2.6.0/hadoop-mapreduce-client/hadoop-mapreduce-client-core/mapred-default.xml" target="_blank">mapred-site.xml</a>、<a href="http://hadoop.apache.org/docs/r2.6.0/hadoop-yarn/hadoop-yarn-common/yarn-default.xml" target="_blank">yarn-site.xml</a>&nbsp;。</p>

<p>1, 文件&nbsp;<strong>slaves</strong>，将作为 DataNode 的主机名写入该文件，每行一个，默认为 localhost，所以在伪分布式配置时，节点即作为 NameNode 也作为 DataNode。分布式配置可以保留 localhost，也可以删掉，让 Master 节点仅作为 NameNode 使用。</p>

<p>本教程让 Master 节点仅作为 NameNode 使用，因此将文件中原来的 localhost 删除，只添加一行内容：Slave1。</p>

<p>2, 文件&nbsp;<strong>core-site.xml</strong>&nbsp;改为下面的配置：</p>

<pre>
&nbsp;</pre>

<ol>
	<li>&lt;configuration&gt;</li>
	<li>&lt;property&gt;</li>
	<li>&lt;name&gt;fs.defaultFS&lt;/name&gt;</li>
	<li>&lt;value&gt;hdfs://Master:9000&lt;/value&gt;</li>
	<li>&lt;/property&gt;</li>
	<li>&lt;property&gt;</li>
	<li>&lt;name&gt;hadoop.tmp.dir&lt;/name&gt;</li>
	<li>&lt;value&gt;file:/usr/local/hadoop/tmp&lt;/value&gt;</li>
	<li>&lt;description&gt;Abase for other temporary directories.&lt;/description&gt;</li>
	<li>&lt;/property&gt;</li>
	<li>&lt;/configuration&gt;</li>
</ol>

<p>XML</p>

<p>3, 文件&nbsp;<strong>hdfs-site.xml</strong>，dfs.replication 一般设为 3，但我们只有一个 Slave 节点，所以 dfs.replication 的值还是设为 1：</p>

<pre>
&nbsp;</pre>

<ol>
	<li>&lt;configuration&gt;</li>
	<li>&lt;property&gt;</li>
	<li>&lt;name&gt;dfs.namenode.secondary.http-address&lt;/name&gt;</li>
	<li>&lt;value&gt;Master:50090&lt;/value&gt;</li>
	<li>&lt;/property&gt;</li>
	<li>&lt;property&gt;</li>
	<li>&lt;name&gt;dfs.replication&lt;/name&gt;</li>
	<li>&lt;value&gt;1&lt;/value&gt;</li>
	<li>&lt;/property&gt;</li>
	<li>&lt;property&gt;</li>
	<li>&lt;name&gt;dfs.namenode.name.dir&lt;/name&gt;</li>
	<li>&lt;value&gt;file:/usr/local/hadoop/tmp/dfs/name&lt;/value&gt;</li>
	<li>&lt;/property&gt;</li>
	<li>&lt;property&gt;</li>
	<li>&lt;name&gt;dfs.datanode.data.dir&lt;/name&gt;</li>
	<li>&lt;value&gt;file:/usr/local/hadoop/tmp/dfs/data&lt;/value&gt;</li>
	<li>&lt;/property&gt;</li>
	<li>&lt;/configuration&gt;</li>
</ol>

<p>XML</p>

<p>4, 文件&nbsp;<strong>mapred-site.xml</strong>&nbsp;（可能需要先重命名，默认文件名为 mapred-site.xml.template），然后配置修改如下：</p>

<pre>
&nbsp;</pre>

<ol>
	<li>&lt;configuration&gt;</li>
	<li>&lt;property&gt;</li>
	<li>&lt;name&gt;mapreduce.framework.name&lt;/name&gt;</li>
	<li>&lt;value&gt;yarn&lt;/value&gt;</li>
	<li>&lt;/property&gt;</li>
	<li>&lt;property&gt;</li>
	<li>&lt;name&gt;mapreduce.jobhistory.address&lt;/name&gt;</li>
	<li>&lt;value&gt;Master:10020&lt;/value&gt;</li>
	<li>&lt;/property&gt;</li>
	<li>&lt;property&gt;</li>
	<li>&lt;name&gt;mapreduce.jobhistory.webapp.address&lt;/name&gt;</li>
	<li>&lt;value&gt;Master:19888&lt;/value&gt;</li>
	<li>&lt;/property&gt;</li>
	<li>&lt;/configuration&gt;</li>
</ol>

<p>XML</p>

<p>5, 文件&nbsp;<strong>yarn-site.xml</strong>：</p>

<pre>
&nbsp;</pre>

<ol>
	<li>&lt;configuration&gt;</li>
	<li>&lt;property&gt;</li>
	<li>&lt;name&gt;yarn.resourcemanager.hostname&lt;/name&gt;</li>
	<li>&lt;value&gt;Master&lt;/value&gt;</li>
	<li>&lt;/property&gt;</li>
	<li>&lt;property&gt;</li>
	<li>&lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt;</li>
	<li>&lt;value&gt;mapreduce_shuffle&lt;/value&gt;</li>
	<li>&lt;/property&gt;</li>
	<li>&lt;/configuration&gt;</li>
</ol>

<p>XML</p>

<p>配置好后，将 Master 上的 /usr/local/Hadoop 文件夹复制到各个节点上。因为之前有跑过伪分布式模式，建议在切换到集群模式前先删除之前的临时文件。在 Master 节点上执行：</p>

<pre>
&nbsp;</pre>

<ol>
	<li>cd /usr/local</li>
	<li>sudo rm -r ./hadoop/tmp # 删除 Hadoop 临时文件</li>
	<li>sudo rm -r ./hadoop/logs/* # 删除日志文件</li>
	<li>tar -zcf ~/hadoop.master.tar.gz ./hadoop # 先压缩再复制</li>
	<li>cd ~</li>
	<li>scp ./hadoop.master.tar.gz Slave1:/home/hadoop</li>
</ol>

<p>Shell 命令</p>

<p>在 Slave1 节点上执行：</p>

<pre>
&nbsp;</pre>

<ol>
	<li>sudo rm -r /usr/local/hadoop # 删掉旧的（如果存在）</li>
	<li>sudo tar -zxf ~/hadoop.master.tar.gz -C /usr/local</li>
	<li>sudo chown -R hadoop /usr/local/hadoop</li>
</ol>

<p>Shell 命令</p>

<p>同样，如果有其他 Slave 节点，也要执行将 hadoop.master.tar.gz 传输到 Slave 节点、在 Slave 节点解压文件的操作。</p>

<p>首次启动需要先在 Master 节点执行 NameNode 的格式化：</p>

<pre>
&nbsp;</pre>

<ol>
	<li>hdfs namenode -format # 首次运行需要执行初始化，之后不需要</li>
</ol>

<p>Shell 命令</p>

<p><em>CentOS系统需要关闭防火墙</em></p>

<p>CentOS系统默认开启了防火墙，在开启 Hadoop 集群之前，<strong>需要关闭集群中每个节点的防火墙</strong>。有防火墙会导致 ping 得通但 telnet 端口不通，从而导致 DataNode 启动了，但 Live datanodes 为 0 的情况。</p>

<p>在 CentOS 6.x 中，可以通过如下命令关闭防火墙：</p>

<pre>
&nbsp;</pre>

<ol>
	<li>sudo service iptables stop # 关闭防火墙服务</li>
	<li>sudo chkconfig iptables off # 禁止防火墙开机自启，就不用手动关闭了</li>
</ol>

<p>Shell 命令</p>

<p>若用是 CentOS 7，需通过如下命令关闭（防火墙服务改成了 firewall）：</p>

<pre>
&nbsp;</pre>

<ol>
	<li>systemctl stop firewalld.service # 关闭firewall</li>
	<li>systemctl disable firewalld.service # 禁止firewall开机启动</li>
</ol>

<p>Shell 命令</p>

<p>如下图，是在 CentOS 6.x 中关闭防火墙：</p>

<p><img alt="CentOS6.x系统关闭防火墙" src="http://cdn.powerxing.com/imgs/install-hadoop-cluster-09-iptables.png" />CentOS6.x系统关闭防火墙</p>

<p>接着可以启动 hadoop 了，启动需要在 Master 节点上进行：</p>

<pre>
&nbsp;</pre>

<ol>
	<li>start-dfs.sh</li>
	<li>start-yarn.sh</li>
	<li>mr-jobhistory-daemon.sh start historyserver</li>
</ol>

<p>Shell 命令</p>

<p>通过命令&nbsp;<code>jps</code>&nbsp;可以查看各个节点所启动的进程。正确的话，在 Master 节点上可以看到 NameNode、ResourceManager、SecondrryNameNode、JobHistoryServer 进程，如下图所示：</p>

<p><img alt="通过jps查看Master的Hadoop进程" src="http://cdn.powerxing.com/imgs/install-hadoop-cluster-07-jps-master.png" />通过jps查看Master的Hadoop进程</p>

<p>在 Slave 节点可以看到 DataNode 和 NodeManager 进程，如下图所示：</p>

<p><img alt="通过jps查看Slave的Hadoop进程" src="http://cdn.powerxing.com/imgs/install-hadoop-cluster-08-jps-slave.png" />通过jps查看Slave的Hadoop进程</p>

<p>缺少任一进程都表示出错。另外还需要在 Master 节点上通过命令&nbsp;<code>hdfs dfsadmin -report</code>&nbsp;查看 DataNode 是否正常启动，如果 Live datanodes 不为 0 ，则说明集群启动成功。例如我这边一共有 1 个 Datanodes：</p>

<p><img alt="通过dfsadmin查看DataNode的状态" src="http://cdn.powerxing.com/imgs/install-hadoop-cluster-09-dfsadmin.png" />通过dfsadmin查看DataNode的状态</p>

<p>也可以通过 Web 页面看到查看 DataNode 和 NameNode 的状态：<a href="http://master:50070/" target="_blank">http://master:50070/</a>。如果不成功，可以通过启动日志排查原因。</p>

<p><em>伪分布式、分布式配置切换时的注意事项</em></p>

<ol>
	<li>从分布式切换到伪分布式时，不要忘记修改 slaves 配置文件；</li>
	<li>在两者之间切换时，若遇到无法正常启动的情况，可以删除所涉及节点的临时文件夹，这样虽然之前的数据会被删掉，但能保证集群正确启动。所以如果集群以前能启动，但后来启动不了，特别是 DataNode 无法启动，不妨试着删除所有节点（包括 Slave 节点）上的 /usr/local/hadoop/tmp 文件夹，再重新执行一次&nbsp;<code>hdfs namenode -format</code>，再次启动试试。</li>
</ol>

<h2>执行分布式实例</h2>

<p>执行分布式实例过程与伪分布式模式一样，首先创建 HDFS 上的用户目录：</p>

<ol>
	<li>hdfs dfs -mkdir -p /user/hadoop</li>
</ol>

<p>Shell 命令</p>

<p>将 /usr/local/hadoop/etc/hadoop 中的配置文件作为输入文件复制到分布式文件系统中：</p>

<ol>
	<li>hdfs dfs -mkdir input</li>
	<li>hdfs dfs -put /usr/local/hadoop/etc/hadoop/*.xml input</li>
</ol>

<p>Shell 命令</p>

<p>通过查看 DataNode 的状态（占用大小有改变），输入文件确实复制到了 DataNode 中，如下图所示：</p>

<p><img alt="通过Web页面查看DataNode的状态" src="http://cdn.powerxing.com/imgs/install-hadoop-cluster-10-datanode.png" />通过Web页面查看DataNode的状态</p>

<p>接着就可以运行 MapReduce 作业了：</p>

<pre>
&nbsp;</pre>

<ol>
	<li>hadoop jar /usr/local/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-*.jar grep input output &#39;dfs[a-z.]+&#39;</li>
</ol>

<p>Shell 命令</p>

<p>运行时的输出信息与伪分布式类似，会显示 Job 的进度。</p>

<p>可能会有点慢，但如果迟迟没有进度，比如 5 分钟都没看到进度，那不妨重启 Hadoop 再试试。若重启还不行，则很有可能是内存不足引起，建议增大虚拟机的内存，或者通过更改 YARN 的内存配置解决。</p>

<p><img alt="显示MapReduce Job的进度" src="http://cdn.powerxing.com/imgs/install-hadoop-cluster-11-running-job.png" />显示MapReduce Job的进度</p>

<p>同样可以通过 Web 界面查看任务进度&nbsp;<a href="http://master:8088/cluster" target="_blank">http://master:8088/cluster</a>，在 Web 界面点击 &ldquo;Tracking UI&rdquo; 这一列的 History 连接，可以看到任务的运行信息，如下图所示：</p>

<p><img alt="通过Web页面查看集群和MapReduce作业的信息" src="http://cdn.powerxing.com/imgs/install-hadoop-cluster-12-web-cluster.png" />通过Web页面查看集群和MapReduce作业的信息</p>

<p>执行完毕后的输出结果：</p>

<p><img alt="MapReduce作业的输出结果" src="http://cdn.powerxing.com/imgs/install-hadoop-cluster-13-grep-output.png" />MapReduce作业的输出结果</p>

<p>关闭 Hadoop 集群也是在 Master 节点上执行的：</p>

<ol>
	<li>stop-yarn.sh</li>
	<li>stop-dfs.sh</li>
	<li>mr-jobhistory-daemon.sh stop historyserver</li>
</ol>

<p>Shell 命令</p>

<p>此外，同伪分布式一样，也可以不启动 YARN，但要记得改掉 mapred-site.xml 的文件名。</p>

<p>自此，你就掌握了 Hadoop 的集群搭建与基本使用了。</p>
