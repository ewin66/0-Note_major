<h1><a href="http://www.cnblogs.com/zerotomax/p/7468833.html" id="cb_post_title_url">Redis安装与卸载</a></h1>

<p>Redis是一个开源的使用ANSI C语言编写、支持网络、可基于内存亦可持久化的日志型、Key-Value数据库，<br />
并提供多种语言的API。它支持丰富的数据类型，和高速的内存读写。正在逐步取代memcached的地位。</p>

<p>下面就演示下在centos6.9的32位下的安装配置过程。</p>

<p><strong>1、<a href="https://www.cnblogs.com/zerotomax/p/7468833.html#install">安装</a></strong></p>

<p><strong>2、<a href="https://www.cnblogs.com/zerotomax/p/7468833.html#conf">配置</a></strong></p>

<p><strong>3、<a href="https://www.cnblogs.com/zerotomax/p/7468833.html#uninstall">卸载</a></strong></p>

<p>&nbsp;</p>

<p><strong>1、安装</strong></p>

<p>　　①我们可以通过在官网下载tar.gz的安装包，或者通过wget的方式下载　　</p>

<p>&nbsp;</p>

<pre>
[root@localhost data]# wget http://download.redis.io/releases/redis-4.0.1.tar.gz
--2017-09-03 09:51:27--  http://download.redis.io/releases/redis-4.0.1.tar.gz
正在解析主机 download.redis.io... 109.74.203.151
正在连接 download.redis.io|109.74.203.151|:80... 已连接。
已发出 HTTP 请求，正在等待回应... 200 OK
长度：1711660 (1.6M) [application/x-gzip]
正在保存至: &ldquo;redis-4.0.1.tar.gz&rdquo;

57% [=====================================&gt;                             ] 981,091      298K/s eta(英国中部时
64% [==========================================&gt;                        ] 1,105,869    309K/s eta(英国中部时
72% [===============================================&gt;                   ] 1,237,657    321K/s eta(英国中部时
80% [====================================================&gt;              ] 1,376,455    334K/s eta(英国中部时
86% [========================================================&gt;          ] 1,478,801    341K/s eta(英国中部时
92% [============================================================&gt;      ] 1,582,549    349K/s eta(英国中部时
100%[==================================================================&gt;] 1,711,660    380K/s   in 4.6s

2017-09-03 09:51:32 (363 KB/s) - 已保存 &ldquo;redis-4.0.1.tar.gz&rdquo; [1711660/1711660])

[root@localhost data]#</pre>

<p>&nbsp;</p>

<p>　　②解压</p>

<p><img alt="" id="code_img_closed_89aeef85-e665-4541-8bcc-7e3996d1399c" src="https://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" />&nbsp;View Code</p>

<p>　　③移动到/local/usr/redis目录下去，这个纯属个人爱好</p>

<p>&nbsp;</p>

<pre>
[root@localhost data]# ll
总用量 1676
drwxrwxr-x. 6 root root    4096 7月  24 22:58 redis-4.0.1
-rw-r--r--. 1 root root 1711660 7月  24 22:59 redis-4.0.1.tar.gz
[root@localhost data]# mv redis-4.0.1 ../redis
[root@localhost data]# cd ..
[root@localhost local]# ll
总用量 44
drwxr-xr-x. 2 root root 4096 9月   3 09:43 bin
drwxr-xr-x. 2 root root 4096 9月   3 10:04 data
drwxr-xr-x. 2 root root 4096 9月  23 2011 etc
drwxr-xr-x. 2 root root 4096 9月  23 2011 games
drwxr-xr-x. 2 root root 4096 9月  23 2011 include
drwxr-xr-x. 2 root root 4096 9月  23 2011 lib
drwxr-xr-x. 2 root root 4096 9月  23 2011 libexec
drwxrwxr-x. 6 root root 4096 7月  24 22:58 redis
drwxr-xr-x. 2 root root 4096 9月  23 2011 sbin
drwxr-xr-x. 5 root root 4096 4月   1 04:48 share
drwxr-xr-x. 2 root root 4096 9月  23 2011 src
[root@localhost local]# cd redis
[root@localhost redis]# ll
总用量 276
-rw-rw-r--.  1 root root 127778 7月  24 22:58 00-RELEASENOTES
-rw-rw-r--.  1 root root     53 7月  24 22:58 BUGS
-rw-rw-r--.  1 root root   1815 7月  24 22:58 CONTRIBUTING
-rw-rw-r--.  1 root root   1487 7月  24 22:58 COPYING
drwxrwxr-x.  6 root root   4096 7月  24 22:58 deps
-rw-rw-r--.  1 root root     11 7月  24 22:58 INSTALL
-rw-rw-r--.  1 root root    151 7月  24 22:58 Makefile
-rw-rw-r--.  1 root root   4223 7月  24 22:58 MANIFESTO
-rw-rw-r--.  1 root root  20530 7月  24 22:58 README.md
-rw-rw-r--.  1 root root  57764 7月  24 22:58 redis.conf
-rwxrwxr-x.  1 root root    271 7月  24 22:58 runtest
-rwxrwxr-x.  1 root root    280 7月  24 22:58 runtest-cluster
-rwxrwxr-x.  1 root root    281 7月  24 22:58 runtest-sentinel
-rw-rw-r--.  1 root root   7606 7月  24 22:58 sentinel.conf
drwxrwxr-x.  3 root root   4096 7月  24 22:58 src
drwxrwxr-x. 10 root root   4096 7月  24 22:58 tests
drwxrwxr-x.  8 root root   4096 7月  24 22:58 utils
[root@localhost redis]# cd ..
[root@localhost local]#</pre>

<p>&nbsp;</p>

<p>　　④接下来就是编译了，通过make命令，如果编译的时候报gcc命令找不到的话，可以通过下面的命令安装gcc命令，gcc是c的编译命令</p>

<pre>
yum install gcc-c++</pre>

<p>　　下面就通过make来编译，make是自动编译，会根据Makefile中描述的内容来进行编译。</p>

<p>&nbsp;</p>

<pre>
[root@localhost redis]# make
cd src &amp;&amp; make all
make[1]: Entering directory `/usr/local/redis/src&#39;
    CC Makefile.dep
.
.
.
.
Hint: It&#39;s a good idea to run &#39;make test&#39; ;)

make[1]: Leaving directory `/usr/local/redis/src&#39;
[root@localhost redis]#</pre>

<p>&nbsp;</p>

<p>　　⑤可以看到在src目录下生成了几个新的文件。</p>

<p>&nbsp;</p>

<pre>
[root@localhost redis]# ll -tr src
总用量 44440
-rw-rw-r--. 1 root root    3779 7月  24 22:58 zmalloc.h
.
.
.
-rw-r--r--. 1 root root   56148 9月   3 10:11 rax.o
-rwxr-xr-x. 1 root root 7185836 9月   3 10:11 redis-server
-rwxr-xr-x. 1 root root 7185836 9月   3 10:11 redis-sentinel
-rw-r--r--. 1 root root  143800 9月   3 10:11 redis-cli.o
-rwxr-xr-x. 1 root root 5092431 9月   3 10:11 redis-cli
-rw-r--r--. 1 root root   44892 9月   3 10:11 redis-benchmark.o
-rwxr-xr-x. 1 root root 4985275 9月   3 10:11 redis-benchmark
-rwxr-xr-x. 1 root root 7185836 9月   3 10:11 redis-check-rdb
-rwxr-xr-x. 1 root root 7185836 9月   3 10:11 redis-check-aof
[root@localhost redis]#</pre>

<p>&nbsp;</p>

<p>　　为了使用方便，我们需要将这个几个文件加到/usr/local/bin目录下去。这个目录在Path下面的话，就可以直接执行这几个命令了。</p>

<p>&nbsp;</p>

<pre>
[root@localhost redis]# make install
cd src &amp;&amp; make install
make[1]: Entering directory `/usr/local/redis/src&#39;
    CC Makefile.dep
make[1]: Leaving directory `/usr/local/redis/src&#39;
make[1]: Entering directory `/usr/local/redis/src&#39;

Hint: It&#39;s a good idea to run &#39;make test&#39; ;)

    INSTALL install
    INSTALL install
    INSTALL install
    INSTALL install
    INSTALL install
make[1]: Leaving directory `/usr/local/redis/src&#39;
[root@localhost redis]# cd ..
[root@localhost local]# ll
总用量 44
drwxr-xr-x. 2 root root 4096 9月   3 10:16 bin
drwxr-xr-x. 2 root root 4096 9月   3 10:04 data
drwxr-xr-x. 2 root root 4096 9月  23 2011 etc
drwxr-xr-x. 2 root root 4096 9月  23 2011 games
drwxr-xr-x. 2 root root 4096 9月  23 2011 include
drwxr-xr-x. 2 root root 4096 9月  23 2011 lib
drwxr-xr-x. 2 root root 4096 9月  23 2011 libexec
drwxrwxr-x. 6 root root 4096 7月  24 22:58 redis
drwxr-xr-x. 2 root root 4096 9月  23 2011 sbin
drwxr-xr-x. 5 root root 4096 4月   1 04:48 share
drwxr-xr-x. 2 root root 4096 9月  23 2011 src
[root@localhost local]# ll bin
总用量 30908
-rwxr-xr-x. 1 root root 4985275 9月   3 10:16 redis-benchmark
-rwxr-xr-x. 1 root root 7185836 9月   3 10:16 redis-check-aof
-rwxr-xr-x. 1 root root 7185836 9月   3 10:16 redis-check-rdb
-rwxr-xr-x. 1 root root 5092431 9月   3 10:16 redis-cli
lrwxrwxrwx. 1 root root      12 9月   3 10:16 redis-sentinel -&gt; redis-server
-rwxr-xr-x. 1 root root 7185836 9月   3 10:16 redis-server
[root@localhost local]#</pre>

<p>&nbsp;</p>

<p>　　可以看到，这几个文件就已经被加载到bin目录下了</p>

<p>　　⑥下面启动服务器，来看看安装是否成功。使用redis-server命令。　　</p>

<p>&nbsp;</p>

<pre>
[root@localhost local]# redis-server
9190:C 03 Sep 10:19:09.291 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
9190:C 03 Sep 10:19:09.292 # Redis version=4.0.1, bits=32, commit=00000000, modified=0, pid=9190, just started
9190:C 03 Sep 10:19:09.292 # Warning: no config file specified, using the default config. In order to specify a config file use redis-server /path/to/redis.conf
9190:M 03 Sep 10:19:09.295 * Increased maximum number of open files to 10032 (it was originally set to 1024).
9190:M 03 Sep 10:19:09.312 # Warning: 32 bit instance detected but no memory limit set. Setting 3 GB maxmemory limit with &#39;noeviction&#39; policy now.
                _._
           _.-``__ &#39;&#39;-._
      _.-``    `.  `_.  &#39;&#39;-._           Redis 4.0.1 (00000000/0) 32 bit
  .-`` .-```.  ```\/    _.,_ &#39;&#39;-._
 (    &#39;      ,       .-`  | `,    )     Running in standalone mode
 |`-._`-...-` __...-.``-._|&#39;` _.-&#39;|     Port: 6379
 |    `-._   `._    /     _.-&#39;    |     PID: 9190
  `-._    `-._  `-./  _.-&#39;    _.-&#39;
 |`-._`-._    `-.__.-&#39;    _.-&#39;_.-&#39;|
 |    `-._`-._        _.-&#39;_.-&#39;    |           http://redis.io
  `-._    `-._`-.__.-&#39;_.-&#39;    _.-&#39;
 |`-._`-._    `-.__.-&#39;    _.-&#39;_.-&#39;|
 |    `-._`-._        _.-&#39;_.-&#39;    |
  `-._    `-._`-.__.-&#39;_.-&#39;    _.-&#39;
      `-._    `-.__.-&#39;    _.-&#39;
          `-._        _.-&#39;
              `-.__.-&#39;

9190:M 03 Sep 10:19:09.316 # WARNING: The TCP backlog setting of 511 cannot be enforced because /proc/sys/net/core/somaxconn is set to the lower value of 128.
9190:M 03 Sep 10:19:09.316 # Server initialized
9190:M 03 Sep 10:19:09.318 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add &#39;vm.overcommit_memory = 1&#39; to /etc/sysctl.conf and then reboot or run the command &#39;sysctl vm.overcommit_memory=1&#39; for this to take effect.
9190:M 03 Sep 10:19:09.318 * Ready to accept connections</pre>

<p>&nbsp;</p>

<p>　　看到这个界面的话，就表示安装成功了。</p>

<p>　　下面通过在启动一个linux客户端，通过server-cli shutdown来关闭服务器。</p>

<p>&nbsp;</p>

<pre>
[root@localhost ~]# redis-cli shutdown
[root@localhost ~]#

下面是刚刚服务器启动的客户端的log
9190:M 03 Sep 10:20:45.566 # User requested shutdown...
9190:M 03 Sep 10:20:45.566 * Saving the final RDB snapshot before exiting.
9190:M 03 Sep 10:20:45.631 * DB saved on disk
9190:M 03 Sep 10:20:45.631 # Redis is now ready to exit, bye bye...
[root@localhost local]#
</pre>

<p>&nbsp;</p>

<p><strong>2、配置</strong></p>

<p>　　可以看到，前面在启动redis服务器后，都是在前台启动的，需要重新启动一个客户端来进行登陆操作。这样非常不方便，</p>

<p>所以，我们需要设置后台启动。</p>

<p>　　在redis.conf的配置文件里面。做如下的修改：</p>

<pre>
daemonize no
修改为：
daemonize yes</pre>

<p>　　下面需要设置redis服务器开机自动启动：</p>

<p>　　要先让redis服务自动启动的话，首先需要在/etc/init.d目录下创建redis的启动脚本。</p>

<p>　　将redis安装目录下的utils/redis_init_script复制到/etc/init.d目录下，命名为redis（名字简单，使用方便）</p>

<pre>
[root@localhost utils]# cp redis_init_script /etc/init.d/redis
[root@localhost utils]# ll /etc/init.d/redis
-rwxr-xr-x. 1 root root 1098 9月   3 13:02 /etc/init.d/redis
[root@localhost utils]#</pre>

<p>　　继续编辑启动文件，修改其中指定的pid和配置文件。</p>

<pre>
PIDFILE=/var/run/redis_${REDISPORT}.pid
CONF=&quot;/etc/redis/${REDISPORT}.conf&quot;
修改为
PIDFILE=/var/redis/run/redis_${REDISPORT}.pid
CONF=&quot;/etc/redis/redis.conf&quot;</pre>

<p>　　首先创建存放pid的目录为/var/redis/run　　</p>

<pre>
[root@localhost var]# pwd
/var
[root@localhost var]# mkdir redis
[root@localhost var]# cd redis
[root@localhost redis]# mkdir run
[root@localhost redis]#</pre>

<p>　　接下来，我们需要把配置文件复制一份到/etc/redis这个目录下面去</p>

<p>&nbsp;</p>

<pre>
[root@localhost etc]# mkdir redis
[root@localhost etc]# cd redis
[root@localhost redis]# ll
总用量 0
[root@localhost redis]# cp /usr/local/redis/redis.conf ./
[root@localhost redis]# ll
总用量 60
-rw-r--r--. 1 root root 57765 9月   3 13:12 redis.conf
[root@localhost redis]# pwd
/etc/redis
[root@localhost redis]#</pre>

<p>&nbsp;</p>

<p>　　修改配置文件中的pid为前面配置的pid。</p>

<pre>
pidfile /var/run/redis_6379.pid
修改为
pidfile /var/redis/run/redis_6379.pid</pre>

<p>　　至此为止，我们已经可以通过service redis start/stop来启动和关闭redis服务了。</p>

<p>　　最后只需要通过chkconfig redis on命令来设置开机启动即可。</p>

<p>　　如果提示redis 服务不支持 chkconfig的话，只需要在/etc/init.d/redis这个启动脚本的第二行后面加上下面的内容即可。</p>

<pre>
# chkconfig:2345 90 10
#
# description:Redis is a persistent key-value database</pre>

<pre>
[root@localhost ~]# chkconfig redis on
redis 服务不支持 chkconfig
[root@localhost ~]# vi /etc/init.d/redis
[root@localhost ~]# chkconfig redis on
[root@localhost ~]#</pre>

<p>&nbsp;</p>

<p><strong>3、卸载</strong></p>

<p>　卸载redis非常的简单，只需要简单的三步</p>

<p>1、停止redis服务器</p>

<p>　　首先，通过下面的命令查看redis服务是否在运行</p>

<pre>
[root@localhost ~]# ps aux|grep redis
root      2553  0.2  0.1  41964  1916 ?        Ssl  09:38   0:00 redis-server 127.0.0.1:6379
root      2565  0.0  0.0   6048   780 pts/0    S+   09:39   0:00 grep redis
[root@localhost ~]#</pre>

<p>　　可以看到，在6379端口，有redis-server的监听</p>

<p>　　通过下面的命令停止redis服务器。</p>

<pre>
[root@localhost ~]# redis-cli shutdown
[root@localhost ~]# ps aux|grep redis

root      2575  0.0  0.0   6048   780 pts/0    S+   09:41   0:00 grep redis
[root@localhost ~]#</pre>

<p>　　可以看到，已经停止了redis服务了。</p>

<p>　　需要注意的是，由于我的redis命令都安装到/usr/local/bin目录下面了，并且添加到环境变量PATH里面了，所以可以直接运行。</p>

<p>2、删除make的时候生成的几个redisXXX的文件</p>

<p>&nbsp;</p>

<pre>
[root@localhost local]# ll /usr/local/bin
总用量 30908
-rwxr-xr-x. 1 root root 4985307 9月   2 21:13 redis-benchmark
-rwxr-xr-x. 1 root root 7185872 9月   2 21:13 redis-check-aof
-rwxr-xr-x. 1 root root 7185872 9月   2 21:13 redis-check-rdb
-rwxr-xr-x. 1 root root 5092475 9月   2 21:13 redis-cli
lrwxrwxrwx. 1 root root      12 9月   2 21:13 redis-sentinel -&gt; redis-server
-rwxr-xr-x. 1 root root 7185872 9月   2 21:13 redis-server
[root@localhost local]# rm -f /usr/local/bin/redis*
[root@localhost local]# ll /usr/local/bin
总用量 0
[root@localhost local]#</pre>

<p>&nbsp;</p>

<p>3、顺便也删除掉解压后的文件目录和所以文件</p>

<p>&nbsp;</p>

<pre>
[root@localhost local]# ll
总用量 40
drwxr-xr-x. 2 root root 4096 9月   3 09:43 bin
drwxr-xr-x. 2 root root 4096 9月  23 2011 etc
drwxr-xr-x. 2 root root 4096 9月  23 2011 games
drwxr-xr-x. 2 root root 4096 9月  23 2011 include
drwxr-xr-x. 2 root root 4096 9月  23 2011 lib
drwxr-xr-x. 2 root root 4096 9月  23 2011 libexec
drwxrwxr-x. 6 root root 4096 9月   2 21:11 redis
drwxr-xr-x. 2 root root 4096 9月  23 2011 sbin
drwxr-xr-x. 5 root root 4096 4月   1 04:48 share
drwxr-xr-x. 2 root root 4096 9月  23 2011 src
[root@localhost local]# rm -rf redis
[root@localhost local]# ll
总用量 36
drwxr-xr-x. 2 root root 4096 9月   3 09:43 bin
drwxr-xr-x. 2 root root 4096 9月  23 2011 etc
drwxr-xr-x. 2 root root 4096 9月  23 2011 games
drwxr-xr-x. 2 root root 4096 9月  23 2011 include
drwxr-xr-x. 2 root root 4096 9月  23 2011 lib
drwxr-xr-x. 2 root root 4096 9月  23 2011 libexec
drwxr-xr-x. 2 root root 4096 9月  23 2011 sbin
drwxr-xr-x. 5 root root 4096 4月   1 04:48 share
drwxr-xr-x. 2 root root 4096 9月  23 2011 src
[root@localhost local]#</pre>

<p>&nbsp;</p>

<p>这样，redis就卸载完成了。</p>
