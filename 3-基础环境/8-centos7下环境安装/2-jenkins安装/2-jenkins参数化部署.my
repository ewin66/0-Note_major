<p>Jenkins&nbsp;利用Build&nbsp;With&nbsp;Parameters&nbsp;Plugin实现Jenkins参数化构建</p>

<p>1、安装Build With Parameters Plugin，Persistent Parameter Plugin&nbsp;插件</p>

<p>说明：安装Build With Parameters Plugin为了实现参数化构建，安装Persistent Parameter Plugin&nbsp;为了实现，构建时，默认参数值取自上次构建的参数(当然如果要实现该功能，应该需要添加该插件对应的参数)</p>

<h2><a href="http://www.cnblogs.com/meitian/p/5492457.html" id="cb_post_title_url">Jenkins参数化构建</a></h2>

<p><strong>背景：</strong>每次构建项目时都需要去修改一下配置，然后保存，再去立即构建。这样修改容易修改出错误，影响到执行脚本，且每次都要去修改配置，不容易修改，操作也比较麻烦。所以决定将Jenkins修改为参数化构建。下面是步骤。</p>

<p><strong>一、点击配置，勾选参数化构建</strong></p>

<p><strong><img alt="" src="https://images2015.cnblogs.com/blog/626983/201605/626983-20160514140508390-330477631.png" /></strong></p>

<p><img alt="" src="file:///C:/Users/lenovo/AppData/Local/Temp/enhtmlclip/Image(149).png" /><strong>二、点击添加参数，有下面这些参数</strong></p>

<p><img alt="" src="file:///C:/Users/lenovo/AppData/Local/Temp/enhtmlclip/Image(150).png" /><img alt="" src="https://images2015.cnblogs.com/blog/626983/201605/626983-20160514140517562-1550056985.png" /></p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p>我用的是Choice和String Parameter两种</p>

<p>Choice：给出多个选项，构建时可以手动选择参数，默认是Coices内的第一行数据</p>

<p><img alt="" src="https://images2015.cnblogs.com/blog/626983/201605/626983-20160514140607374-1689487582.png" style="height:204px; width:800px" /></p>

<p><img alt="" src="file:///C:/Users/lenovo/AppData/Local/Temp/enhtmlclip/Image(151).png" />String Parameter：就是一个使用字符串值的参数变量</p>

<p><img alt="" src="https://images2015.cnblogs.com/blog/626983/201605/626983-20160514140551249-511997337.png" style="height:191px; width:800px" /></p>

<p><img alt="" src="file:///C:/Users/lenovo/AppData/Local/Temp/enhtmlclip/Image(152).png" /></p>

<p>说明：有一个Persistent&nbsp;String Parameter，网上查到说使用它可以记住上次构建成功的参数，这样更方便一些，需要安装Jenkins插件。我目前没装，下周装一下插件试试。</p>

<p>&nbsp;</p>

<p><strong>三、脚本中使用参数</strong></p>

<p>例如，增加一个叫做tag的参数。</p>

<p>1.在git等源码管理时，调用参数的格式<strong>${tag}</strong></p>

<p><strong><img alt="" src="https://images2015.cnblogs.com/blog/626983/201605/626983-20160514140622687-143546704.png" style="height:69px; width:800px" /></strong></p>

<p><img alt="" src="file:///C:/Users/lenovo/AppData/Local/Temp/enhtmlclip/Image(153).png" /></p>

<p>2.在shell脚本中调用参数时，调用格式为<strong>$tag</strong></p>

<p><strong><img alt="" src="https://images2015.cnblogs.com/blog/626983/201605/626983-20160514140646390-1886406687.png" style="height:74px; width:1000px" /></strong></p>

<p><img alt="" src="file:///C:/Users/lenovo/AppData/Local/Temp/enhtmlclip/Image(154).png" /></p>

<p>保存即可，此时左侧原来的立即构建会变为Build with Parameters</p>

<p>&nbsp;</p>

<p><strong>四、使用参数构建</strong></p>

<p>点击左侧的Build with Parameters，填写右侧的参数（和配置里的一致）。然后点击开始构建即可</p>

<p><img alt="" src="file:///C:/Users/lenovo/AppData/Local/Temp/enhtmlclip/Image(155).png" /></p>

<p><img alt="" src="https://images2015.cnblogs.com/blog/626983/201605/626983-20160514140659202-1967140545.png" style="height:280px; width:800px" /></p>

<p>查看构建的历史记录，会有一个Parameters来显示此次构建使用的参数，方便查看</p>

<p><img alt="" src="https://images2015.cnblogs.com/blog/626983/201605/626983-20160514140710343-2023492879.png" /></p>

<p>&nbsp;</p>

<h1><a href="http://www.cnblogs.com/panpan0301/p/8066143.html" id="cb_post_title_url">Jenkins参数化构建-多环境构建</a></h1>

<p>　　由于我们在测试过程中，可能需要在多个测试环境跑用例，这个时候就需要jenkins参数化了。</p>

<p>　　Jenkins参数化一般常用的有两种方式：Choice和String Parameter两种</p>

<p>一、简介</p>

<p>1.Choice：给出多个选项，构建时可以手动选择参数，默认是Coices内的第一行数据，在job中显示方式如下：</p>

<p>　　<img alt="" id="uploading_image_41361" src="https://common.cnblogs.com/images/loading.gif" /><img alt="" src="https://images2017.cnblogs.com/blog/1189684/201712/1189684-20171219154133521-1344077266.png" /></p>

<p><br />
2.String Parameter：就是一个使用字符串值的参数变量，手动输入参数值。此处没有截图</p>

<p>二、构建</p>

<p>1.进入job后---点击配置</p>

<p><img alt="" src="https://images2017.cnblogs.com/blog/1189684/201712/1189684-20171219154402225-1811650613.png" /></p>

<p>2.参数化构建过程--chioce</p>

<p><img alt="" src="https://images2017.cnblogs.com/blog/1189684/201712/1189684-20171219154508912-174613800.png" /></p>

<p>3.写入参数</p>

<p><img alt="" src="https://images2017.cnblogs.com/blog/1189684/201712/1189684-20171219154555287-775503557.png" /></p>

<p>注意：choices换行写</p>

<p>4.使用</p>

<p>将参数化的值传到测试用例里面后进行接收使用。</p>

<p>jenkisn参数化后传到使用文件里面后的形式如下：</p>

<p>　　[文件名，参数1，参数2，参数3，.....]</p>

<p>故，在使用时需要将所需参数参数从list里面取出来传到相应位置。</p>

<p>在&ldquo;构建&rdquo;---&ldquo;excute shell&rdquo;中进行接收并使用</p>

<p>1）robot framework使用方法：</p>

<p><img alt="" src="https://images2017.cnblogs.com/blog/1189684/201712/1189684-20171219154937287-256204920.png" /></p>

<p>2）python使用方法</p>

<p>在start文件里面取出参数化传进去的需要的值</p>

<p>host=sys.argv[1]</p>

<p>取值从1开始</p>
