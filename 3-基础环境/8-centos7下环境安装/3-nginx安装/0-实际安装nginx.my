<h1>centos7 下nginx安装</h1>

<h2><strong>安装包方式安装</strong></h2>

<h2>准备工作</h2>

<h3>零.查看软件是否已安装</h3>

<p>yum list installed | grep gcc<br />
yum list installed | grep pcre<br />
yum list installed | grep zlib<br />
yum list installed | grep ssl</p>

<p>没有的话先安装他们</p>

<p><strong>一. gcc 安装</strong><br />
安装 nginx 需要先将官网下载的源码进行编译，编译依赖 gcc 环境，如果没有 gcc 环境，则需要安装：</p>

<pre>
<code>yum install gcc-c++</code></pre>

<p><strong>二. PCRE pcre-devel 安装</strong><br />
PCRE(Perl Compatible Regular Expressions) 是一个Perl库，包括 perl 兼容的正则表达式库。nginx 的 http 模块使用 pcre 来解析正则表达式，所以需要在 linux 上安装 pcre 库，pcre-devel 是使用 pcre 开发的一个二次开发库。nginx也需要此库。命令：</p>

<pre>
<code>yum install -y pcre pcre-devel</code></pre>

<p><strong>三. zlib 安装</strong><br />
zlib 库提供了很多种压缩和解压缩的方式， nginx 使用 zlib 对 http 包的内容进行 gzip ，所以需要在 Centos 上安装 zlib 库。</p>

<pre>
<code>yum install -y zlib zlib-devel</code></pre>

<p><strong>四. OpenSSL 安装</strong><br />
OpenSSL 是一个强大的安全套接字层密码库，囊括主要的密码算法、常用的密钥和证书封装管理功能及 SSL 协议，并提供丰富的应用程序供测试或其它目的使用。<br />
nginx 不仅支持 http 协议，还支持 https（即在ssl协议上传输http），所以需要在 Centos 安装 OpenSSL 库。</p>

<pre>
<code>yum install -y openssl openssl-devel</code>
</pre>

<p>&nbsp;</p>

<h2>下载nginx包。</h2>

<p><a href="https://nginx.org/download/">各版本下载地址</a></p>

<p># wget http://nginx.org/download/nginx-1.10.1.tar.gz</p>

<h3>解压</h3>

<p><code>tar -zxvf nginx-1.12.1.tar.gz -C /usr/local</code></p>

<h3>移动文件</h3>

<p>mv nginx-1.12.1 nginx1.12</p>

<h2>配置</h2>

<p>其实在 nginx-1.10.1 版本中你就不需要去配置相关东西，默认就可以了。当然，如果你要自己配置目录也是可以的。</p>

<p>1.使用默认配置 运行安装包下的configure脚本：</p>

<pre>
<code>./configure</code></pre>

<p>运行配置命令之后：</p>

<p>Configuration summary<br />
&nbsp; + using system PCRE library<br />
&nbsp; + OpenSSL library is not used<br />
&nbsp; + using system zlib library<br />
<code>&nbsp; nginx path prefix: &quot;/usr/local/nginx&quot;<br />
&nbsp; nginx binary file: &quot;/usr/local/nginx/sbin/nginx&quot;<br />
&nbsp; nginx modules path: &quot;/usr/local/nginx/modules&quot;<br />
&nbsp; nginx configuration prefix: &quot;/usr/local/nginx/conf&quot;<br />
&nbsp; nginx configuration file: &quot;/usr/local/nginx/conf/nginx.conf&quot;<br />
&nbsp; nginx pid file: &quot;/usr/local/nginx/logs/nginx.pid&quot;<br />
&nbsp; nginx error log file: &quot;/usr/local/nginx/logs/error.log&quot;<br />
&nbsp; nginx http access log file: &quot;/usr/local/nginx/logs/access.log&quot;<br />
&nbsp; nginx http client request body temporary files: &quot;client_body_temp&quot;<br />
&nbsp; nginx http proxy temporary files: &quot;proxy_temp&quot;<br />
&nbsp; nginx http fastcgi temporary files: &quot;fastcgi_temp&quot;<br />
&nbsp; nginx http uwsgi temporary files: &quot;uwsgi_temp&quot;<br />
&nbsp; nginx http scgi temporary files: &quot;scgi_temp&quot;</code><br />
&nbsp;</p>

<p>2.自定义配置（不推荐）</p>

<pre>
<code>./configure \
--prefix=/usr/local/nginx \
--conf-path=/usr/local/nginx/conf/nginx.conf \
--pid-path=/usr/local/nginx/conf/nginx.pid \
--lock-path=/var/lock/nginx.lock \
--error-log-path=/var/log/nginx/error.log \
--http-log-path=/var/log/nginx/access.log \
--with-http_gzip_static_module \
--http-client-body-temp-path=/var/temp/nginx/client \
--http-proxy-temp-path=/var/temp/nginx/proxy \
--http-fastcgi-temp-path=/var/temp/nginx/fastcgi \
--http-uwsgi-temp-path=/var/temp/nginx/uwsgi \
--http-scgi-temp-path=/var/temp/nginx/scgi</code></pre>

<blockquote>
<p>注：将临时文件目录指定为/var/temp/nginx，需要在/var下创建temp及nginx目录</p>
</blockquote>

<h2>编译安装</h2>

<pre>
<code>make
make install</code></pre>

<p>查找安装路径：</p>

<pre>
<code>whereis nginx</code></pre>

<p><img alt="nginx-whereis.png" src="http://www.linuxidc.com/upload/2016_09/160905180451094.png" style="width:705px" /></p>

<h2>添加环境变量</h2>

<p>vi /etc/profile<br />
source /etc/profile</p>

<p>添加配置：</p>

<p>export NGINX_HOME=/usr/local/nginx<br />
export PATH=$NGINX_HOME/sbin:$PATH</p>

<h2>设置主配置文件</h2>

<p>vi&nbsp;/usr/local/nginx/conf/nginx.conf</p>

<p>修改下列内容</p>

<p>http {<br />
&nbsp; &nbsp; include &nbsp; &nbsp; &nbsp; mime.types;<br />
&nbsp; &nbsp; default_type &nbsp;application/octet-stream;</p>

<p>&nbsp; &nbsp; autoindex on;&nbsp;</p>

<p>&nbsp; &nbsp; #access_log &nbsp;logs/access.log &nbsp;main;</p>

<p>&nbsp; &nbsp; sendfile &nbsp; &nbsp; &nbsp; on;<br />
&nbsp; &nbsp; tcp_nopush &nbsp; &nbsp; on;</p>

<p>&nbsp; &nbsp; keepalive_timeout &nbsp;65;</p>

<p>&nbsp; &nbsp; #gzip &nbsp;on;</p>

<p>&nbsp; &nbsp; server {<br />
<strong>&nbsp; &nbsp; &nbsp; &nbsp; listen &nbsp; &nbsp; &nbsp; 9080;<br />
&nbsp; &nbsp; &nbsp; &nbsp; server_name &nbsp;210.***.***.100;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;#真实的ip地址。</strong></p>

<p>&nbsp; &nbsp; &nbsp; &nbsp; location / {<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; root &nbsp; html;<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; index &nbsp;index.html index.htm;<br />
&nbsp; &nbsp; &nbsp; &nbsp; }</p>

<p>&nbsp; &nbsp; &nbsp; &nbsp;<strong> location /resource/ {<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; root &nbsp; image; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;#nginx服务器下面的文件夹，然后会在此文件夹下进行路径匹配。<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; index &nbsp;index.html index.htm;<br />
&nbsp; &nbsp; &nbsp; &nbsp; }</strong></p>

<p>&nbsp; &nbsp; &nbsp; &nbsp; error_page &nbsp; 500 502 503 504 &nbsp;/50x.html;</p>

<p>&nbsp; &nbsp; &nbsp; &nbsp; location = /50x.html {<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; root &nbsp; html;<br />
&nbsp; &nbsp; &nbsp; &nbsp; }</p>

<p>&nbsp; &nbsp; }</p>

<p>}</p>

<p>&nbsp;</p>

<p>正式环境配置</p>

<p>教务：</p>

<p>upstream jiaowu {<br />
&nbsp; server 192.***.***.135:8080;<br />
&nbsp; server 192.***.***.135:8090 backup;<br />
&nbsp; #server 192.***.***.136:8080;<br />
&nbsp; #server 192.***.***.136:8090 max_fails=3 fail_timeout=30s;<br />
}</p>

<p>server {<br />
&nbsp; listen 80;<br />
&nbsp; server_name jiaowu.jsou.cn;<br />
&nbsp; access_log /var/log/nginx/jiaowu.jsou.cn.access.log main;<br />
# &nbsp;charset utf8;</p>

<p># &nbsp;location ~ .*\.(js|css|htm|html|gif|jpg|jpeg|png|bmp|swf|ico|rar|zip|txt|flv|mid|doc|ppt|pdf|xls|mp3|wma)$ {<br />
# &nbsp; &nbsp;root /home/wenhua/webapps/project/jiaowu/educationalManage;<br />
# &nbsp;}<br />
&nbsp; location ^~ /resource {<br />
&nbsp; &nbsp; root /home/wenhua/nfs/jwpt;<br />
&nbsp; }<br />
&nbsp; location / {<br />
&nbsp; &nbsp; proxy_pass http://jiaowu;<br />
&nbsp; &nbsp; proxy_set_header Host $host;<br />
&nbsp; &nbsp; proxy_set_header X-Real-IP $remote_addr;<br />
&nbsp; &nbsp; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;<br />
&nbsp; }<br />
}<br />
&nbsp;</p>

<p>教学：</p>

<p>upstream xuexi {<br />
&nbsp; server 192.168.4.135:9080;<br />
&nbsp; #server 192.168.4.136:9080;<br />
&nbsp; server 192.168.4.135:9090;<br />
&nbsp; #server 192.168.4.136:9090;<br />
}</p>

<p>server {<br />
&nbsp; listen 80;<br />
&nbsp; server_name xuexi.jsou.cn;<br />
&nbsp; access_log /var/log/nginx/xuexi.jsou.cn.access.log main;<br />
&nbsp; charset utf8;<br />
&nbsp; root /home/wenhua/webapps/project/xuexi/jxpt-web;</p>

<p>&nbsp;# location ~ .*\.(js|css|htm|html|gif|jpg|jpeg|png|bmp|swf|ico|rar|zip|txt|flv|mid|doc|ppt|pdf|xls|mp3|wma)$ {<br />
&nbsp;# &nbsp; root /home/wenhua/webapps/project/xuexi/jxpt-web;<br />
&nbsp;# }</p>

<p>&nbsp; location / {<br />
&nbsp; &nbsp; proxy_pass http://xuexi;<br />
&nbsp; &nbsp; proxy_set_header Host $host;<br />
&nbsp; &nbsp; proxy_set_header X-Real-IP $remote_addr;<br />
&nbsp; &nbsp; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;<br />
&nbsp; }<br />
}<br />
&nbsp;</p>

<h2>启动、停止nginx</h2>

<pre>
<code>cd /usr/local/nginx/sbin/
./nginx 
./nginx -s stop
./nginx -s quit
./nginx -s reload</code></pre>

<blockquote>
<p><code>./nginx -s quit</code>:此方式停止步骤是待nginx进程处理任务完毕进行停止。<br />
<code>./nginx -s stop</code>:此方式相当于先查出nginx进程id再使用kill命令强制杀掉进程。</p>
</blockquote>

<p>查询nginx进程：</p>

<pre>
<code>ps aux|grep nginx</code></pre>

<h2>重启 nginx</h2>

<p>1.先停止再启动（推荐）：<br />
对 nginx 进行重启相当于先停止再启动，即先执行停止命令再执行启动命令。如下：</p>

<pre>
<code>./nginx -s quit
./nginx</code></pre>

<p>2.重新加载配置文件：<br />
当 nginx的配置文件 nginx.conf 修改后，要想让配置生效需要重启 nginx，使用<code>-s reload</code>不用先停止 nginx再启动 nginx 即可将配置信息在 nginx 中生效，如下：<br />
./nginx -s reload</p>

<p>启动成功后，在浏览器可以看到这样的页面：</p>

<p><img alt="nginx-welcome.png" src="http://www.linuxidc.com/upload/2016_09/160905180451093.png" style="width:705px" /></p>

<h2>开机自启动</h2>

<p>即在<code>rc.local</code>增加启动代码就可以了。</p>

<pre>
<code>vi /etc/rc.local</code></pre>

<p>增加一行&nbsp;<code>/usr/local/nginx/sbin/nginx</code><br />
设置执行权限：</p>

<pre>
<code>chmod 755 rc.local</code></pre>

<p><img alt="nginx-rclocal.png" src="http://www.linuxidc.com/upload/2016_09/160905180451095.png" style="width:705px" /></p>

<p>到这里，nginx就安装完毕了，启动、停止、重启操作也都完成了，当然，你也可以添加为系统服务，我这里就不在演示了。</p>

<p>&nbsp;</p>

<h2>卸载nginx</h2>

<p>yum remove nginx</p>
