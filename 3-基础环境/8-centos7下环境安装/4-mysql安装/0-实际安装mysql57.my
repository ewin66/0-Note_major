<h1>mysql5.7 安装</h1>

<h2>下载mysql57</h2>

<p><a href="https://dev.mysql.com/downloads/mysql/">官网下载地址</a></p>

<h3>选择相应的版本</h3>

<p><img alt="" src="http://notebook-1255399141.cossh.myqcloud.com/%E4%B8%93%E4%B8%9A%E7%AC%94%E8%AE%B0%E5%9B%BE/8-%E7%8E%AF%E5%A2%83%E7%AC%94%E8%AE%B0/8-centos%E4%B8%8B%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/mysql5.7%E5%AE%89%E8%A3%85/%E5%AE%89%E8%A3%85mysql57-1.png" style="height:260px; width:600px" /></p>

<h3>直接下载</h3>

<p>下载的时候会让你注册，但是其实不用!</p>

<p><img alt="" src="http://notebook-1255399141.cossh.myqcloud.com/%E4%B8%93%E4%B8%9A%E7%AC%94%E8%AE%B0%E5%9B%BE/8-%E7%8E%AF%E5%A2%83%E7%AC%94%E8%AE%B0/8-centos%E4%B8%8B%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/mysql5.7%E5%AE%89%E8%A3%85/%E5%AE%89%E8%A3%85mysql57-2.png" style="height:260px; width:600px" /></p>

<h2>解压文件</h2>

<p>解压安装包</p>

<p>tar -zxvf mysql-5.7.20-linux-glibc2.12-x86_64.tar.gz &nbsp; -C /usr/local</p>

<h2>设置配置文件</h2>

<h3>1、初始两个配置文件</h3>

<p>安装文件夹里面有配置文件，需要拷贝到相应位置：</p>

<p>cp /usr/local/mysql57/support-files/mysql.server&nbsp; /etc/init.d/mysqld</p>

<p>cp /usr/local/mysql57/support-files/my-default.cnf&nbsp; &nbsp;/etc/my.cnf&nbsp;<strong>安装包没有的话，忽略用系统自带的。</strong></p>

<h3>2、配置数据库参数。</h3>

<p><code>vi /etc/my.cnf&nbsp; 可以指定</code>数据库编码</p>

<p><strong>添加以下内容:</strong></p>

<pre>
<code>[mysql]
default-character-set=<strong>utf8  </strong>

[mysqld]
max_connections=1500  //最大连接数
default-storage-engine=INNODB
character_set_server=<strong>utf8

</strong></code>#linux下mysql默认区分大小写。这里设置成不区分。<code><strong>
</strong></code>lower_case_table_names=1  

#避免外部锁
#skip-locking 老版本，可能不用了。 新版试试用下面的。

#官方解释，External-locking用于多进程条件下为MyISAM数据表进行锁定。如果你有多台服务器使用同一个数据库目录（不建议），那么每台服务器都必须开启external locking；
skip-external-locking&nbsp;

<code>#设置强制校验，忽略一些太强的校验
sql_mode = &quot;STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION&quot;

#</code>group_concat&nbsp;默认长度1024，当数据过大时会被截止，这里设置长点
<code>group_concat_max_len = 2048000

basedir = /usr/local/mysql57
datadir = /usr/local/mysql57/data

# basedir=/usr/local/mysql57
# datadir=/usr/local/mysql57/data</code>
</pre>

<h3>3、设置启动脚本</h3>

<h4>复制mysql.server到/etc/init.d/目录下(目的想实现开机自动执行效果)</h4>

<h4>修改/etc/init.d/mysqld参数</h4>

<pre>
<code>vi /etc/init.d/mysqld</code></pre>

<p><strong>修改以下内容:</strong></p>

<pre>
<code>basedir =/usr/local/mysql57
datadir =/usr/local/mysql57/data
</code>
</pre>

<h3>4、将mysql命令添加到系统路径path</h3>

<p>vi /etc/profile</p>

<p>添加如下内容：</p>

<p>export MYSQL_HOME=/usr/local/mysql57<br />
export PATH=$MYSQL_HOME/bin:$PATH</p>

<h2>设置数据库用户</h2>

<p><strong>建立一个mysql的组:</strong></p>

<pre>
<code>groupadd mysql<em>[groupName]</em></code></pre>

<p><strong>建立mysql用户，并且把用户放到mysql组:</strong></p>

<pre>
<code>useradd -r -g mysql<em>[groupName]</em> mysql<em>[userName]</em></code></pre>

<p><strong>给mysql用户设置一个密码:</strong></p>

<pre>
<code>passwd mysql<em>[userName]</em> 回车<em>[提示输入密码]</em>
密码: wenhua123 </code></pre>

<p><strong>给目录/usr/local/mysql 更改拥有者:</strong></p>

<pre>
<code>chown -R mysql:mysql /usr/local/mysql57/</code>
</pre>

<h2>初始化 mysql 的数据库</h2>

<h4>1.运行初始化命令</h4>

<p><code>cd /usr/local/mysql/bin/</code></p>

<p><code>./mysqld --initialize --user=mysql --basedir=/usr/local/mysql57 --datadir=/usr/local/mysql57/data</code></p>

<p>初始化后会生成一个临时密码 root@localhost:：<em>*</em>(最好先记录这个临时密码)</p>

<p><img alt="" src="http://notebook-1255399141.cossh.myqcloud.com/%E4%B8%93%E4%B8%9A%E7%AC%94%E8%AE%B0%E5%9B%BE/8-%E7%8E%AF%E5%A2%83%E7%AC%94%E8%AE%B0/8-centos%E4%B8%8B%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/mysql5.7%E5%AE%89%E8%A3%85/%E5%AE%89%E8%A3%85mysql57-3.png" style="height:132px; width:600px" /></p>

<h4>2.给数据库加密（我没做）</h4>

<pre>
<code>./mysql_ssl_rsa_setup --datadir=/usr/local/mysql/data</code></pre>

<h4>3.启动mysql</h4>

<p><code>echo &quot; &quot; &gt; /usr/local/mysql57/mysqld.log<br />
chown -R mysql:mysql /usr/local/mysql57/mysqld.log<br />
echo &quot; &quot; &gt; /var/log/mariadb/mariadb.log<br />
chown -R mysql:mysql /var/log/mariadb/mariadb.log<br />
mkdir /var/lib/mysql</code></p>

<pre>
<code>./mysqld_safe --user=mysql &amp;</code></pre>

<h4>4.检查mysql是否启动</h4>

<pre>
<code>ps -ef|grep mysql</code></pre>

<p><strong>发现有进程便代表启动成功。</strong></p>

<h4>5.成功安装后的停止与重启</h4>

<p>发启动、停止、重启 MySQL 是每个拥有独立主机的站长必须要撑握的操作，下面为大家简单介绍一下操作方法：<br />
<br />
一、启动方式<br />
<br />
1、使用 service 启动：service mysqld start<br />
2、使用 mysqld 脚本启动：/etc/init.d/mysqld start<br />
3、使用 safe_mysqld 启动：safe_mysqld&amp;<br />
<br />
二、停止<br />
<br />
1、使用 service 启动：service mysqld stop<br />
2、使用 mysqld 脚本启动：/etc/inint.d/mysqld stop<br />
3、mysqladmin shutdown<br />
<br />
三、重启</p>

<p>1、使用 service 启动：service mysqld restart<br />
2、使用 mysqld 脚本启动：/etc/inint.d/mysqld restart</p>

<h2>进入客户端</h2>

<h4>1.登录:</h4>

<pre>
<code>./mysql -u root -p</code></pre>

<pre>
<code>Enter password:这里输入之前的临时密码</code></pre>

<h4>2.修改密码</h4>

<pre>
<code>set password=password(&#39;123456&#39;);</code>
</pre>

<h2>设置远程访问</h2>

<h3>1:打开mysql的默认端口3306:</h3>

<pre>
<code>firewall-cmd --zone=public --add-port=3306/tcp --permanent
success
firewall-cmd --reload
success</code></pre>

<h3>2:设置mysql的远程访问</h3>

<p><strong>设置远程访问账号:grant all privileges on&nbsp;<em>.</em>&nbsp;to 远程访问用户名@&rsquo;%&rsquo; identified by &lsquo;<span style="font-size:16px"><em><u>用户密码</u></em></span>&rsquo;;</strong></p>

<pre>
<code>mysql&gt; grant all privileges on *.* to root@&#39;%&#39; identified by &#39;wenhua123&#39;;</code></pre>

<p><code>grant all privileges on eas_quartz_dev.* to root@&#39;%&#39; identified by &#39;wenhua123&#39;;<br />
grant all privileges on eas_quartz_uat.* to root@&#39;%&#39; identified by &#39;wenhua123&#39;;<br />
grant all privileges on eas_quartz_pre.* to root@&#39;%&#39; identified by &#39;wenhua123&#39;;<br />
grant all privileges on eas_quartz_pro.* to root@&#39;%&#39; identified by &#39;wenhua123&#39;;<br />
grant all privileges on eduadminteaching_dev.* to root@&#39;%&#39; identified by &#39;wenhua123&#39;; 开发数据库<br />
grant all privileges on eduadminteaching_uat.* to root@&#39;%&#39; identified by &#39;wenhua123&#39;; 用户验收测试库<br />
grant all privileges on eduadminteaching_pre.* to root@&#39;%&#39; identified by &#39;wenhua123&#39;; 预生产数据库<br />
grant all privileges on eduadminteaching_pro.* to root@&#39;%&#39; identified by &#39;wenhua123&#39;; 生产数据库<br />
grant all privileges on jxpt.* to root@&#39;%&#39; identified by &#39;wenhua123&#39;</code></p>

<p><code>grant select,insert,update on eas_quartz_dev.* to root@&#39;%&#39; identified by &#39;wenhua123&#39;;<br />
grant select,insert,update on eas_quartz_uat.* to root@&#39;%&#39; identified by &#39;wenhua123&#39;;<br />
grant select,insert,update on eas_quartz_pre.* to root@&#39;%&#39; identified by &#39;wenhua123&#39;;<br />
grant select,insert,update on eas_quartz_pro.* to root@&#39;%&#39; identified by &#39;wenhua123&#39;;<br />
grant select,insert,update on eduadminteaching_dev.* to root@&#39;%&#39; identified by &#39;wenhua123&#39;; 开发数据库<br />
grant select,insert,update on eduadminteaching_uat.* to root@&#39;%&#39; identified by &#39;wenhua123&#39;; 用户验收测试库<br />
grant select,insert,update on eduadminteaching_pre.* to root@&#39;%&#39; identified by &#39;wenhua123&#39;; 预生产数据库<br />
grant select,insert,update on eduadminteaching_pro.* to root@&#39;%&#39; identified by &#39;wenhua123&#39;; 生产数据库<br />
grant select,insert,update on jxpt.* to root@&#39;%&#39; identified by &#39;wenhua123&#39;</code></p>

<p><strong>刷新:</strong></p>

<pre>
<code>mysql&gt; flush privileges;</code></pre>

<h3>3.设置语法检查</h3>

<p>首先看系统里有哪些语法检查，本例中去掉第一个 &#39; ONLY_FULL_GROUP_BY &#39; 。</p>

<p>select @@sql_mode</p>

<p>显示如下：</p>

<p>+-------------------------------------------------------------------------------------------------------------------------------------------+<br />
| @@sql_mode &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />
+-------------------------------------------------------------------------------------------------------------------------------------------+<br />
| ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION |<br />
+-------------------------------------------------------------------------------------------------------------------------------------------+</p>

<p>去掉不用的语法检查：&nbsp;</p>

<p>set @@sql_mode=&#39;STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,</p>

<p>NO_ENGINE_SUBSTITUTION&#39;</p>

<h2>备份与恢复&nbsp;</h2>

<p>1、备份&nbsp;<br />
<br />
　　 例如：将上例创建的aaa库备份到文件back_aaa中&nbsp;<br />
<br />
　　 [root@test1 root]# cd　/home/data/mysql　(进入到库目录，本例库已由val/lib/mysql转到/home/data/mysql，见上述第七部分内容)&nbsp;<br />
　　 [root@test1 mysql]# mysqldump -u root -p --opt aaa &gt; back_aaa&nbsp;<br />
<br />
2、恢复&nbsp;<br />
<br />
　　 [root@test mysql]# mysql -u root -p ccc &lt; back_aaa</p>

<h2>设置开机自启动</h2>

<h3>1、添加服务mysql</h3>

<pre>
<code>chkconfig --add mysql</code></pre>

<h3>2、设置mysql服务为自启动</h3>

<pre>
<code>chkconfig mysql on

</code><span style="font-family:sans-serif,Arial,Verdana,&quot;Trebuchet MS&quot;">配置环境变量</span></pre>

<pre>
<code>vim /etc/profile</code></pre>

<p><strong>最后一行添加:</strong></p>

<pre>
<code>export PATH=$JAVA_HOME/bin:/usr/local/mysql/bin:$PATH</code></pre>

<p><strong>使修改生效:</strong></p>

<pre>
<code>source /etc/profile</code></pre>

<p>至此,mysql5.7的安装就完成了!!!</p>

<p>&nbsp;./mysqld_safe --user=mysql &amp;</p>

<h2>常遇到的问题</h2>

<h3>问题一：linux下mysql区分大小写。</h3>

<p>原来Linux下的MySQL默认是区分表名大小写的，通过如下设置，可以让MySQL不区分表名大小写：<br />
1、用root登录，修改 /etc/my.cnf；<br />
2、在[mysqld]节点下，加入一行： lower_case_table_names=1<br />
3、重启MySQL即可；</p>

<h3>问题二：linux下mysql重启报错。</h3>

<p>错误提示：ERROR! MySQL server PID file could not be found!</p>

<p>执行service mysql stop/start/restart 都不行。报 ERROR! MySQL server PID file could not be found!，命令行链接数据库时也报 Can&#39;t connect to local MySQL server through socket &#39;/var/lib/mysql/mysql.sock&#39; 。然后自己摸索了一下，问题就解决了，下面是我的解决方案。</p>

<p>首先查看一下进程</p>

<p>ps aux |grep mysq*&nbsp;</p>

<p><a href="http://files.jb51.net/file_images/article/201611/20161124144538573.jpg?20161024144548" target="_blank"><img alt="" id="theimg" src="http://files.jb51.net/file_images/article/201611/20161124144538573.jpg?20161024144548" style="height:209px; width:800px" /></a></p>

<p>如果看到上面的红色圈出的部分，那说明，Mysql的进程卡死了，这时用就要把这些卡死的进程都关闭。</p>

<p>kill 27664&nbsp;&nbsp;</p>

<p>kill 28873&nbsp;&nbsp;</p>

<p>kill 30041&nbsp;&nbsp;</p>

<p>kill 30597&nbsp;&nbsp;</p>

<p>然后重启mysql</p>

<p>service mysql start&nbsp;</p>

<p>&nbsp;</p>

<p>OK，解决问题就这么简单。</p>

<h3>问题三：mysql相关文件的数组</h3>

<p>Starting MySQL. ERROR! The server quit without updating PID file (/usr/local/mysql57/data/mysql.pid).</p>

<p>不要被这里的报错信息误导，mysql启动报错，可能有很多原因。我这次实际遇到的是，配置文件 etc/my.cnf里面配置了一些日志文件等，而这些文件所在目录的属组用户不对。</p>

<p>解决方法：修改相关的文件属组、用户信息。</p>

<h3>问题四：新建函数、存储过程等的权限问题</h3>

<p>数据同步的时候，function、存储过程、视图新建时会带入了权限。需要删除。</p>

<p>标粗的地方删除掉。</p>

<p>DROP FUNCTION IF EXISTS `nextval`;<br />
DELIMITER ;;<br />
CREATE <strong>DEFINER=`root`@`%` </strong>FUNCTION `nextval`(v_seq_type VARCHAR(20),v_seq_val VARCHAR(20)) RETURNS int(11)<br />
begin<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;declare p_increment char(4);<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;declare p_oldYear char(4);<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;declare p_newYear char(4);<br />
&nbsp; &nbsp; if v_seq_val is null then<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;select val into p_oldYear from roll_serialize_num where type = v_seq_type;&nbsp;<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;select increment into p_increment from roll_serialize_num where type = v_seq_type;&nbsp;<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;select DATE_FORMAT(NOW(), &#39;%Y&#39;) into p_newYear;<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;IF p_oldYear = p_newYear THEN<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;update roll_serialize_num set seq = seq + increment &nbsp;where type = v_seq_type;<br />
&nbsp; &nbsp; &nbsp; elseif p_oldYear is null then<br />
&nbsp; &nbsp; &nbsp; &nbsp; insert into roll_serialize_num(id,type,val,seq,increment) value(REPLACE(UUID(), &#39;-&#39;, &#39;&#39;),v_seq_type,p_newYear,1,1);<br />
&nbsp; &nbsp; &nbsp; else&nbsp;<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;update roll_serialize_num set val = p_newYear,seq = 1 &nbsp;where type = v_seq_type;<br />
&nbsp; &nbsp; &nbsp; END IF;<br />
&nbsp; &nbsp; else&nbsp;<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;select increment into p_increment from roll_serialize_num where type = v_seq_type and val = v_seq_val;&nbsp;<br />
&nbsp; &nbsp; &nbsp; if p_increment is not null THEN<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;update roll_serialize_num set seq = seq + p_increment &nbsp;where type = v_seq_type and val = v_seq_val;<br />
&nbsp; &nbsp; &nbsp; ELSE<br />
&nbsp; &nbsp; &nbsp; &nbsp; insert into roll_serialize_num(id,type,val,seq,increment) value(REPLACE(UUID(), &#39;-&#39;, &#39;&#39;),v_seq_type,v_seq_val,1,1);<br />
&nbsp; &nbsp; &nbsp; end if;<br />
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;end if;<br />
&nbsp; &nbsp; return currval(v_seq_type,v_seq_val);<br />
end<br />
;;<br />
DELIMITER ;</p>

<p>&nbsp;</p>

<p>&nbsp;</p>
