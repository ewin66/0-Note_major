<h1>Python制作Windows系统服务</h1>

<p>最近有个Python程序需要安装并作为Windows系统服务来运行，过程中碰到一些坑，整理了一下。</p>

<h2>Python服务类</h2>

<p>首先Python程序需要调用一些Windows系统API才能作为系统服务，具体内容如下：</p>

<p>#!/usr/bin/env python<br />
# -*- coding: utf-8 -*-<br />
import sys<br />
import time</p>

<p>import win32api<br />
import win32event<br />
import win32service<br />
import win32serviceutil<br />
import servicemanager</p>

<p><br />
class MyService(win32serviceutil.ServiceFramework):</p>

<p>    _svc_name_ = "MyService"<br />
    _svc_display_name_ = "My Service"<br />
    _svc_description_ = "My Service"</p>

<p>    def __init__(self, args):<br />
        self.log('init')<br />
        win32serviceutil.ServiceFramework.__init__(self, args)<br />
        self.stop_event = win32event.CreateEvent(None, 0, 0, None)</p>

<p>    def SvcDoRun(self):<br />
        self.ReportServiceStatus(win32service.SERVICE_START_PENDING)<br />
        try:<br />
            self.ReportServiceStatus(win32service.SERVICE_RUNNING)<br />
            self.log('start')<br />
            self.start()<br />
            self.log('wait')<br />
            win32event.WaitForSingleObject(self.stop_event, win32event.INFINITE)<br />
            self.log('done')<br />
        except BaseException as e:<br />
            self.log('Exception : %s' % e)<br />
            self.SvcStop()</p>

<p>    def SvcStop(self):<br />
        self.ReportServiceStatus(win32service.SERVICE_STOP_PENDING)<br />
        self.log('stopping')<br />
        self.stop()<br />
        self.log('stopped')<br />
        win32event.SetEvent(self.stop_event)<br />
        self.ReportServiceStatus(win32service.SERVICE_STOPPED)</p>

<p>    def start(self):<br />
        time.sleep(10000)</p>

<p>    def stop(self):<br />
        pass</p>

<p>    def log(self, msg):<br />
        servicemanager.LogInfoMsg(str(msg))</p>

<p>    def sleep(self, minute):<br />
        win32api.Sleep((minute*1000), True)</p>

<p>if __name__ == "__main__":<br />
    if len(sys.argv) == 1:<br />
        servicemanager.Initialize()<br />
        servicemanager.PrepareToHostSingle(MyService)<br />
        servicemanager.StartServiceCtrlDispatcher()<br />
    else:<br />
        win32serviceutil.HandleCommandLine(MyService)</p>

<h2>pyinstaller打包</h2>

<p>pyinstaller -F MyService.py</p>

<h2>测试</h2>

<p># 安装服务<br />
dist\MyService.exe install</p>

<p># 启动服务<br />
sc start MyService</p>

<p># 停止服务<br />
sc stop MyService</p>

<p># 删除服务<br />
sc delete MyService</p>
