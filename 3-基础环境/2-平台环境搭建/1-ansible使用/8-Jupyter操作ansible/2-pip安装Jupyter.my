<h1>用pip安装Jupyter</h1>

<p>作为现有或有经验的Python用户，您可能希望使用Python的包管理器pip而不是Anaconda&nbsp;来安装Jupyter&nbsp;。</p>

<h2>如果你安装了Python 3（推荐）：</h2>

<p>python3 -m pip install --upgrade pip<br />
python3 -m pip install jupyter</p>

<h2>如果你安装了Python 2：</h2>

<p>python -m pip install --upgrade pip<br />
python -m pip install jupyter</p>

<h2>启动Jupyter</h2>

<p>恭喜，你已经安装了Jupyter Notebook！要运行笔记本，请在终端（Mac / Linux）或命令提示符（Windows）上运行以下命令：</p>

<p>jupyter notebook</p>

<h2>访问Jupyter</h2>

<p>启动之后，可以通过web界面访问Jupyter。</p>

<h2>配置远程访问</h2>

<p>首先是要 安装 Anaconda 。</p>

<p>默认情况下，安装好 Anaconda 后打开 jupyter notebook, 访问本地&nbsp;<br />
localhost:8888 即可。但是如果要访问另一台机器，比如远端服务器上的 notebook, 即默认是不支持</p>

<p>172.104.105.119:8888 这样的访问，需要额外配置。</p>

<p>设置 jupyter notebook 可远程访问的官方指南在这里，在远端服务器上执行以下操作：</p>

<h3>1. 生成一个 notebook 配置文件</h3>

<p>默认情况下，配置文件 ~/.jupyter/jupyter_notebook_config.py 并不存在，需要自行创建。使用下列命令生成配置文件：</p>

<p>jupyter notebook --generate-config<br />
<br />
如果是 root 用户执行上面的命令，会发生一个问题：</p>

<p>Running as root it not recommended. Use --allow-root to bypass.<br />
<br />
提示信息很明显，root 用户执行时需要加上 --allow-root 选项。</p>

<p>jupyter notebook --generate-config --allow-config<br />
<br />
执行成功后，会出现下面的信息：</p>

<p>Writing default config to: /root/.jupyter/jupyter_notebook_config.py</p>

<h3>2. 生成密码</h3>

<p>自动生成<br />
从 jupyter notebook 5.0 版本开始，提供了一个命令来设置密码：jupyter notebook password，生成的密码存储在 jupyter_notebook_config.json。</p>

<p>$ jupyter notebook password<br />
Enter password: &nbsp;****<br />
Verify password: ****<br />
[NotebookPasswordApp] Wrote hashed password to /Users/you/.jupyter/jupyter_notebook_config.json<br />
<br />
手动生成<br />
除了使用提供的命令，也可以通过手动安装，我是使用的手动安装，因为jupyter notebook password 出来一堆内容，没耐心看。打开 ipython 执行下面内容：</p>

<p>In [1]: from notebook.auth import passwd<br />
In [2]: passwd()<br />
Enter password:<br />
Verify password:<br />
Out[2]: &#39;sha1:67c9e60bb8b6:9ffede0825894254b2e042ea597d771089e11aed&#39;<br />
<br />
sha1:67c9e60bb8b6:9ffede0825894254b2e042ea597d771089e11aed 这一串就是要在 jupyter_notebook_config.py 添加的密码。</p>

<p>c.NotebookApp.password = u&#39;sha1:67c9e60bb8b6:9ffede0825894254b2e042ea597d771089e11aed&#39;</p>

<h3>3. 修改配置文件</h3>

<p>在 jupyter_notebook_config.py 中找到下面的行，取消注释并修改。</p>

<p>c.NotebookApp.ip=&#39;*&#39;<br />
c.NotebookApp.password = u&#39;sha:ce...刚才复制的那个密文&#39;<br />
c.NotebookApp.open_browser = False<br />
c.NotebookApp.port =8888 #可自行指定一个端口, 访问时使用该端口</p>

<p>以上设置完以后就可以在服务器上启动 jupyter notebook，jupyter notebook, root 用户使用 jupyter notebook --allow-root。打开 IP:指定的端口, 输入密码就可以访问了。</p>

<p>需要注意的是不能在隐藏目录 (以 . 开头的目录)下启动 jupyter notebook, 否则无法正常访问文件。</p>

<h3>4.远程连接问题处理</h3>

<p>安装第一种方法可能会出现：No address associated with hostname这样的错误</p>

<p>因为在设置IP时，设置为了&quot;ip&quot;: &quot;*&quot;，有些时候是可以的，有些时候是不可以，所以直接设为&quot;ip&quot;: &quot;0.0.0.0&quot;，这样问题就解决了。</p>

<h3>5.启动 upyter</h3>

<p>jupyter notebook</p>

<h2>安装jupyternotebook 报错：</h2>

<p>python 2.7.6<br />
:ImportError: Tornado requires an up-to-date SSL module. &hellip;<br />
解决办法：</p>

<p>pip install tornado==4.1<br />
pip install jupyter</p>

<h2>python常见模块安装中遇到的问题</h2>

<p>很多模块都需要使用python-dev</p>

<p>１，lxml库需要安装的模块</p>

<p>apt-get install libxml2-dev libxslt-dev python-dev</p>

<p>２，mitmproxy模块遇到 &quot;Tornado requires an up-to-date SSL module&quot; 的问题</p>

<p>把tornado卸载了重新安装 tornado==4.* 版本</p>

<p>3，如果因为是distutil安装的包而不能重新安装新模块的问题，直接去dist-packges目录下 rm -rf 掉就可以&nbsp;</p>
