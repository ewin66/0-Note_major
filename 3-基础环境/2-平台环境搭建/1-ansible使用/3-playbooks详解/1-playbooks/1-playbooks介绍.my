<h1>playbooks介绍</h1>

<h2>Playbooks 是什么？</h2>

<p><strong>Playbook</strong>&nbsp;就字面上的意思为<strong>剧本</strong>。我们可以通过事先写好的<strong>剧本 (Playbooks)</strong>&nbsp;来让各个 Managed Node 进行指定的<strong>动作 (Plays)</strong>&nbsp;和<strong>任务 (Tasks)</strong>。&nbsp;<sup><a href="https://www.w3cschool.cn/automate_with_ansible/automate_with_ansible-qzva27p4.html#fn_2">2</a></sup></p>

<p>简而言之，Playbooks 是 Ansible 的脚本 (Script)，而且还是个比传统 Shell Script 还强大数百倍的脚本！如果今天只能记住一件事，请记住 Ansible 最好用、最厉害的就是它的 Playbook！</p>

<p>Playbooks&nbsp;是什么</p>

<p>1、一键部署的强大武器，比shell&nbsp;script&nbsp;更具结构化的脚本语言。</p>

<p>2、使用YAML格式，写code就如同写文件，简单易读。</p>

<p>3、可使用&nbsp;jinja2（template系统）表达式，并支持变数、判断式、递归等语法。</p>

<ul>
	<li><strong>Play</strong>：通常为某个特定的目的，例如：

	<ul>
		<li><code>Setup a official website with Drupal</code>&nbsp;(借由 Drupal 建置官网)</li>
		<li><code>Restart the API service</code>&nbsp;(重开 API 服务)</li>
	</ul>
	</li>
	<li><strong>Task</strong>：是要实行 Play 这个目地所需做的每个步骤，例如：
	<ul>
		<li><code>Install the Nginx</code>&nbsp;(安裝 Nginx)</li>
		<li><code>Kill the djnago process</code>&nbsp;(强制停止 django 的行程)</li>
	</ul>
	</li>
	<li><strong>Module</strong>：Ansible 所提供的各种操作方法，例如：
	<ul>
		<li><code>apt: name=vim state=present</code>&nbsp;(使用 apt 套件安装 vim)</li>
		<li><code>command: /sbin/shutdown -r now</code>&nbsp;(使用 shutdown 的指令重新开机)</li>
	</ul>
	</li>
</ul>

<p><img alt="automate_with_ansible_basic-19.gif" src="https://chusiang.gitbooks.io/automate-with-ansible/content/imgs/automate_with_ansible_basic-19.gif" /></p>
