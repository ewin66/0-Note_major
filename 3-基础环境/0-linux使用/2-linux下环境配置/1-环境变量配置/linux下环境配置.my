<h1>linux下环境配置</h1>

<h3><strong>临时性的修改环境变量</strong></h3>

<p>比如在tomcat的启动脚本里面可以加入：这样在执行的时候会动态设置环境变量</p>

<p><code>export JAVA_HOME=/opt/soft/jdk1.8.0_91 </code></p>

<p><code>export PATH=$JAVA_HOME/bin:$PATH </code></p>

<p><code>export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</code></p>

<h3><strong>配置环境变量</strong></h3>

<pre>
<code># 修改配置文件
vi /etc/profile
# 在export PATH USER LOGNAME MAIL HOSTNAME HISTSIZE HISTCONTROL下添加

export JAVA_HOME=/opt/soft/jdk1.8.0_91
export PATH=$JAVA_HOME/bin:$PATH
export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar

# 刷新配置文件
source /etc/profile</code></pre>

<h3><strong>永久性的设置个人的配置文件</strong></h3>

<p><span style="font-size:7.5pt"><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">vi ~/.bashrc</span></span></p>

<p><span style="font-size:7.5pt"><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">REDIS_HOME=/usr/master/a_run/d_service/redis/redis-4.0.1</span></span></p>

<p><span style="font-size:7.5pt"><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">PATH=${REDIS_HOME}/src:$PATH</span></span></p>

<p><span style="font-size:7.5pt"><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">//</span></span><span style="font-size:7.5pt"><span style="font-family:宋体">安装</span></span><span style="font-size:7.5pt"><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">(</span></span><span style="font-size:7.5pt"><span style="font-family:宋体">解压</span></span><span style="font-size:7.5pt"><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">)</span></span><span style="font-size:7.5pt"><span style="font-family:宋体">地址。</span></span></p>

<p><span style="font-size:7.5pt"><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">source ~/.bashrc</span></span></p>

<h2><a href="http://blog.sina.com.cn/s/blog_8795b0970101f1f9.html" target="_blank">嵌入式&nbsp;Linux下永久生效环境变量bashrc</a></h2>

<p><strong>1） .bashrc文件</strong></p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;在linux系统普通用户目录（cd /home/xxx）或root用户目录（cd /root）下，用指令ls -al可以看到4个隐藏文件，</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;.bash_history&nbsp;&nbsp;&nbsp;记录之前输入的命令</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;.bash_logout&nbsp;&nbsp;&nbsp;&nbsp;当你退出时执行的命令</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;.bash_profile&nbsp;&nbsp;&nbsp;&nbsp;当你登入shell时执行</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;.bashrc&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当你登入shell时执行</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;请注意后两个的区别：&#39;.bash_profile&#39;只在会话开始时被读取一次，而&#39;.bashrc&#39;则每次打开新的终端时，都要被读取。</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这些文件是每一位用户对终端功能和属性设置，修改.bashrc可以改变环境变量PATH、别名alias和提示符。具体如何修改会在下面做介绍。</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;除了可以修改用户目录下的.bashrc文件外，还可以修改如&ldquo;/etc/profile&rdquo;文件、&ldquo;/etc/bashrc&rdquo;文件及目录&ldquo;/etc /profile.d&rdquo;下的文件。但是修改/etc路径下的配置文件将会应用到整个系统，属于系统级的配置，而修改用户目录下的.bashrc则只是限制在用户应用上，属于用户级设置。两者在应用范围上有所区别，建议如需修改的话，修改用户目录下的.bashrc，即无需root权限，也不会影响其他用户。</p>

<p><strong>2） PATH环境变量修改</strong></p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PATH变量决定了shell 将到哪些目录中寻找命令或程序。如果要执行的命令的目录在 $PATH 中，您就不必输入这个命令的完整路径，直接输入命令就可以了。一些第三方软件没有将可执行文件放到 Linux 的标准目录中。因此，将这些非标准的安装目录添加到 $PATH 是一种解决的办法。此外，您也将看到如何处理一般的环境变量。</p>

<p>首先，作为惯例，所有环境变量名都是大写。由于 Linux 区分大小写，这点您要留意。当然，您可以自己定义一些变量，如&#39;$path&#39;、&#39;$pAtH&#39;，但 shell 不会理睬这些变量。</p>

<p>第二点是变量名有时候以&#39;$&#39;开头，但有时又不是。当设置一个变量时，直接用名称，而不需要加&ldquo;$&rdquo;，如</p>

<p>export PATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/sbin:/usr/X11R6/bin:/usr/local/bin:$JAVA_HOME/bin:$JAVA_HOME/jre/bin:$PATH:$HOME/bin</p>

<p>&ldquo;PATH=/usr/bin:/usr/local/bin:/bin&rdquo;(不需要双引号啊)</p>

<p>假如要获取变量值的话，就要在变量名前加&#39;$&#39;：<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&ldquo;echo $PATH&rdquo;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;则会显示当前设置的PATH变量&ldquo;/usr/bin:/usr/local/bin:/bin&rdquo;</p>

<p>否则的话，变量名就会被当作普通文本了：<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&ldquo;echo PATH&rdquo;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;显示&ldquo;PATH&rdquo;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;处理 $PATH 变量要注意的第三点是：您不能只替换变量，而是要将新的字符串添加到原来的值中。在大多数情况下，您不能用&ldquo;PATH=/some /directory&rdquo;，因为这将删除 $PATH 中其他的所有目录，这样您在该终端运行程序时，就不得不给出完整路径。所以，只能作添加：&ldquo;PATH=$PATH:/some/directory&rdquo;，假如你要添加/usr/local/arm/3.4.1/bin交叉编译命令，则操作为&ldquo;PATH=$PATH:/usr/local/arm/3.4.1/bin&rdquo;<br />
这样，PATH 被设成当前的值（以 $PATH 来表示）＋新添的目录。</p>

<p>到目前为止，你只为当前终端设置了新的 $PATH 变量。如果您打开一个新的终端，运行 echo $PATH ，将显示旧的 $PATH 值，而看不到你刚才添加的新目录。因为你先前定义的是一个局部环境变量（仅限于当前的终端）。</p>

<p>要定义一个全局变量，使在以后打开的终端中生效，您需要将局部变量输出(export)，可以用&quot;export&quot;命令：</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;export PATH=$PATH:/some/directory</p>

<p>现在如果打开一个新的终端，输入 echo $PATH ，也能看到新设置的$PATH 了。请注意，命令&#39;export&#39;只能改变当前终端及以后运行的终端里的变量。对于已经运行的终端没有作用。</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;为了将目录永久添加到 $PATH ，只要将&quot;export&quot;的那行添加到.bashrc或/etc/bashrc文件中。</p>

<p>3) alias别名</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;一般在.bashrc或/etc/bashrc文件里有几句话</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alias rm=&#39;rm -i&#39;</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alias cp=&#39;cp -i&#39;</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alias mv=&#39;mv -i&#39;</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;有了这几句话，当在终端中输入&ldquo;mv test.c led.c&rdquo;实际上输入的是&ldquo;mv -i test.c led.c&rdquo;，所以说alias是一个别名。你可以在该配置文件中添加自己风格的别名，如&ldquo;alias ll=&#39;ls -l&#39;&rdquo;，只需要在终端中输入&ldquo;ll&rdquo;就实现了&ldquo;ls -l&rdquo;的功能。还可以添加其他语句，随自己喜好。</p>

<p>4）提示符</p>

<p>当打开一个控制台(console) 时，最先看到的就是提示符(prompt)，如：[root@localhost ~]#</p>

<p>在默认设置下，提示符将显示用户名、主机名（默认是&#39;localhost&#39;）、当前所在目录（在 Unix 中，&#39;~&#39;表示您的 home 目录）。</p>

<p>按照传统，最后一个字符可以标识普通用户（$），还是&#39;root&#39;（#）。</p>

<p>可以通过&nbsp;$PS1&nbsp;变量来设置提示符。</p>

<p>命令&ldquo;echo $PS1&rdquo;，将显示当前的设定。其中可用字符的含义在 man bash 的&#39;PROMPTING&#39;部分有说明。</p>

<p>如何才能完成理想的设置呢？对于健忘的初学者来讲，默认设定有些不友好，因为提示符只显示当前目录的最后一部分。如果你看到象这样的提示符</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[wsf@localhost bin]$<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;则当前目录可能是&#39;/bin&#39;、&#39;/usr/bin&#39;、&#39;/usr/local/bin&#39;及&#39;/usr/X11R6/bin&#39;。当然，你可以用</p>

<p>pwd （输出当前目录，print working directory）</p>

<p>能不能叫 shell 自动告诉你当前目录呢？</p>

<p>当然可以。这里我将提到的设定，包括提示符，大都包含在文件&#39;/etc/bashrc&#39;中。您可以通过编辑各自 home 目录下的&#39;.bash_profile&#39;和&#39;.bashrc&#39;来改变设置。</p>

<p>在 man bash 中的&#39;PROMPTING&#39;部分，对这些参数(parameter)有详细说明。您可以加入一些小玩意，如不同格式的当前时间，命令的历史记录号，甚至不同的颜色。</p>

<p>一种更适当的设定：<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PS1=&quot;[\u: \w]\\$ &quot;<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这样，提示符就变成：<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[wsf: /usr/bin]$<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;你可以通过命令 export 来测试不同的设置（比如，export PS1=&quot;\u: \w\\$ &quot;）。如果找到了适合的提示符，就将设置放到您的&#39;.bashrc&#39;&#39;中。这样，每次打开控制台或终端窗口时，都会生效。</p>
