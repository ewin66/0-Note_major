<h1>Linux下profile和bashrc四种的区别</h1>

<h2>简单总结</h2>

<h3>不同位置配置文件的区别</h3>

<p>/etc/profile，/etc /bashrc 是系统全局环境变量设定&nbsp;&nbsp;&nbsp;<br />
~/.profile，~ /.bashrc用户家目录下的私有环境变量设定&nbsp;</p>

<h3>读取环境设定档有三步&nbsp;</h3>

<p>当登入系统时候获得一个shell进程时，其读取环境设定档有三步&nbsp;<br />
1 首先读入的是全局环境变量设定档/etc/profile，然后根据其内容读取额外的设定的文档，如&nbsp;<br />
/etc/profile.d和 /etc/inputrc&nbsp;<br />
2 然后根据不同使用者帐号，去其家目录读取~/.bash_profile，如果这读取不了就读取~/.bash_login，这个也读取不了才会读取&nbsp;<br />
~/.profile，这三个文档设定基本上是一样的，读取有优先关系&nbsp;<br />
3 然后在根据用户帐号读取~/.bashrc&nbsp;</p>

<h3>/etc/profile与/etc /bashrc 区别</h3>

<p>前一个主要用来设置一些系统变量,比如JAVA_HOME等等,后面一个主要用来保存一些bash的设置.&nbsp;&nbsp;&nbsp;<br />
/etc/profile: 用来设置系统环境参数，比如$PATH. 这里面的<a href="https://www.baidu.com/s?wd=%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F&amp;tn=44039180_cpr&amp;fenlei=mv6quAkxTZn0IZRqIHckPjm4nH00T1dWnjKWnyRkPy7BuH-hnH6d0ZwV5Hcvrjm3rH6sPfKWUMw85HfYnjn4nH6sgvPsT6KdThsqpZwYTjCEQLGCpyw9Uz4Bmy-bIi4WUvYETgN-TLwGUv3EPHRvnW0LnH01njDznHbvPWRz" rel="nofollow" target="_blank">环境变量</a>是对系统内所有用户生效的。<strong>登录时都会读取该文件,切换用户后失效！！</strong><br />
/etc/bashrc:&nbsp; 这个文件设置系统bash shell相关的东西，对系统内所有用户生效。只要用户运行bash命令，那么这里面的东西就在起作用。</p>

<h3>~/.profile与~/.bashrc的区别</h3>

<p>至于~/.profile与~/.bashrc的区别，都具有个性化定制功能&nbsp;<br />
~/.profile可以设定本用户专有的路径，环境变量，等，它<strong>只能登入的时候执行一次</strong>&nbsp;<br />
~/.bashrc也是某用户专有设定文档，可以设定路径，命令别名，<strong>每次shell script的执行都会使用它一次</strong>&nbsp;</p>

<h3>下面是几个例子：&nbsp;</h3>

<p>1. 图形模式登录时，顺序读取：/etc/profile和~/.profile&nbsp;<br />
2. 图形模式登录后，打开终端时，顺序读取：/etc/bash.bashrc和~/.bashrc&nbsp;<br />
3. 文本模式登录时，顺序读取：/etc/bash.bashrc，/etc/profile和~/.bash_profile&nbsp;<br />
4. 从其它用户su到该用户，则分两种情况：&nbsp;<br />
&nbsp;&nbsp;&nbsp; （1）如果带-l参数（或-参数，--login参数），如：su -l username，则bash是lonin的，它将顺序读取以下配置文件：/etc/bash.bashrc，/etc/profile和~ /.bash_profile。&nbsp;<br />
&nbsp;&nbsp;&nbsp; （2）如果没有带-l参数，则bash是non-login的，它将顺序读取：/etc/bash.bashrc和~/.bashrc&nbsp;<br />
5. 注销时，或退出su登录的用户，如果是longin方式，那么bash会读取：~/.bash_logout&nbsp;<br />
6. 执行自定义的shell文件时，若使用&ldquo;bash -l a.sh&rdquo;的方式，则bash会读取行：/etc/profile和~/.bash_profile，若使用其它方式，如：bash a.sh， ./a.sh，sh a.sh（这个不属于bash shell），则不会读取上面的任何文件。&nbsp;<br />
7. 上面的例子凡是读取到~/.bash_profile的，若该文件不存在，则读取~/.bash_login，若前两者不存在，读取~ /.profile。</p>

<h2>主要的四种配置文件介绍</h2>

<p>/etc/profile、/etc/bashrc、~/.bash_profile、~/.bashrc很容易混淆，他们之间有什么区别？它们的作用到底是什么？</p>

<p>/etc/profile: 用来设置系统环境参数，比如$PATH. 这里面的<a href="https://www.baidu.com/s?wd=%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F&amp;tn=44039180_cpr&amp;fenlei=mv6quAkxTZn0IZRqIHckPjm4nH00T1dWnjKWnyRkPy7BuH-hnH6d0ZwV5Hcvrjm3rH6sPfKWUMw85HfYnjn4nH6sgvPsT6KdThsqpZwYTjCEQLGCpyw9Uz4Bmy-bIi4WUvYETgN-TLwGUv3EPHRvnW0LnH01njDznHbvPWRz" rel="nofollow" target="_blank">环境变量</a>是对系统内所有用户生效的。<strong>登录时都会读取该文件,切换用户后失效！！</strong></p>

<p>/etc/bashrc:&nbsp; 这个文件设置系统bash shell相关的东西，对系统内所有用户生效。只要用户运行bash命令，那么这里面的东西就在起作用。</p>

<p>~/.bash_profile: 用来设置一些<a href="https://www.baidu.com/s?wd=%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F&amp;tn=44039180_cpr&amp;fenlei=mv6quAkxTZn0IZRqIHckPjm4nH00T1dWnjKWnyRkPy7BuH-hnH6d0ZwV5Hcvrjm3rH6sPfKWUMw85HfYnjn4nH6sgvPsT6KdThsqpZwYTjCEQLGCpyw9Uz4Bmy-bIi4WUvYETgN-TLwGUv3EPHRvnW0LnH01njDznHbvPWRz" rel="nofollow" target="_blank">环境变量</a>，功能和/etc/profile 类似，但是这个是针对用户来设定的，也就是说，你在<strong>/home/user1/.bash_profile</strong> 中设定了<a href="https://www.baidu.com/s?wd=%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F&amp;tn=44039180_cpr&amp;fenlei=mv6quAkxTZn0IZRqIHckPjm4nH00T1dWnjKWnyRkPy7BuH-hnH6d0ZwV5Hcvrjm3rH6sPfKWUMw85HfYnjn4nH6sgvPsT6KdThsqpZwYTjCEQLGCpyw9Uz4Bmy-bIi4WUvYETgN-TLwGUv3EPHRvnW0LnH01njDznHbvPWRz" rel="nofollow" target="_blank">环境变量</a>，那么这个环境变量只针对 user1 这个用户生效.</p>

<p>~/.bashrc: 作用类似于/etc/bashrc, 只是针对用户自己而言，不对其他用户生效。</p>

<p>另外/etc/profile中设定的变量(全局)的可以作用于任何用户,而~/.bashrc等中设定的变量(局部)只能继承/etc/profile中的变量,他们是&quot;父子&quot;关系.<br />
~/.bash_profile 是交互式、login 方式进入 bash 运行的，意思是只有<a href="https://www.baidu.com/s?wd=%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95&amp;tn=44039180_cpr&amp;fenlei=mv6quAkxTZn0IZRqIHckPjm4nH00T1dWnjKWnyRkPy7BuH-hnH6d0ZwV5Hcvrjm3rH6sPfKWUMw85HfYnjn4nH6sgvPsT6KdThsqpZwYTjCEQLGCpyw9Uz4Bmy-bIi4WUvYETgN-TLwGUv3EPHRvnW0LnH01njDznHbvPWRz" rel="nofollow" target="_blank">用户登录</a>时才会生效。<br />
~/.bashrc 是交互式 non-login 方式进入 bash 运行的，用户不一定登录，只要以该用户身份运行<a href="https://www.baidu.com/s?wd=%E5%91%BD%E4%BB%A4%E8%A1%8C&amp;tn=44039180_cpr&amp;fenlei=mv6quAkxTZn0IZRqIHckPjm4nH00T1dWnjKWnyRkPy7BuH-hnH6d0ZwV5Hcvrjm3rH6sPfKWUMw85HfYnjn4nH6sgvPsT6KdThsqpZwYTjCEQLGCpyw9Uz4Bmy-bIi4WUvYETgN-TLwGUv3EPHRvnW0LnH01njDznHbvPWRz" rel="nofollow" target="_blank">命令行</a>就会读取该文件。</p>

<h2>某网友总结如下</h2>

<p>（1）/etc/profile&nbsp;&nbsp; 登录时，会执行。&nbsp;<br />
全局（公有）配置，不管是哪个用户，<strong>登录时都会读取该文件</strong>。&nbsp;<br />
（2）/ect/bashrc&nbsp;&nbsp; Ubuntu没有此文件，与之对应的是/ect/bash.bashrc&nbsp;<br />
bash.bashrc 是交互式shell的初始化文件。&nbsp;&nbsp;&nbsp;<br />
（3）~/.profile&nbsp; 某个用户读取的配置。&nbsp;<br />
若bash是以login方式执行时，读取~/.bash_profile，若它不存在，则读取~ /.bash_login，若前两者不存在，读取~ /.profile。&nbsp;<br />
另外，图形模式登录时，此文件将被读取，即使存在~/.bash_profile和~/.bash_login。&nbsp;<br />
（4）~/.bash_login&nbsp;&nbsp;&nbsp;&nbsp;<br />
若 bash是以login方式执行时，读取~/.bash_profile，若它不存在，则读取~/.bash_login，若前两者不存在，读取~ /.profile。&nbsp;<br />
（5）~/.bash_profile&nbsp;&nbsp; Unbutu默认没有此文件，可新建。&nbsp;<br />
只有 bash是以login形式执行时，才会读取此文件。通常该配置文件还会配置成去读取~/.bashrc。&nbsp;<br />
（6）~/.bashrc&nbsp;&nbsp;&nbsp;&nbsp; 该文件包含专用于某个用户的bash shell的bash信息,当该用户登录时以及每次打开新的shell时,该文件被读取.&nbsp;<br />
当 bash是以non-login形式执行时，读取此文件。若是以login形式执行，则不会读取此文件。&nbsp;<br />
（7）~/.bash_logout&nbsp;<br />
注销时，且是longin形式，此文件才会读取。也就是说，在文本模式注销时，此文件会被读取，图形模式注销时，此文件不会被读取。&nbsp;<br />
补充一点，/etc/rc.local是系统shell会执行的文件，linux启动后会退出的；/etc/profile 或 /etc/bash.bashrc是用户shell会的配置，我们一般的Shell是用户Shell的子进程，而非系统shell的子进程，所以如果在 /etc/rc.local中指定&quot;alias ll=&#39;ls -a&#39;&quot;这样的别名，对登录系统后的shell是没用的。&nbsp;</p>
