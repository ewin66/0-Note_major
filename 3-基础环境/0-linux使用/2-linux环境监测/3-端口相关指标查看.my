<p><!--StartFragment --></p>

<h1>linux查看端口占用情况</h1>

<p>今天要使用python写一个端口探测的小程序，以检测一些特定的服务端口有没有被占用，突然发现自己居然不知道在linux中如何查询端口被占用的情况，天呐，赶快学习一下。</p>

<h2>Linux如何查看端口</h2>

<p><strong>1、lsof&nbsp;-i:端口号&nbsp;&nbsp;查看端口被什么程序占用</strong></p>

<p>比如查看8000端口使用情况，lsof&nbsp;-i:8000<br />
<br />
#&nbsp;lsof&nbsp;-i:8000<br />
COMMAND&nbsp;&nbsp;&nbsp;PID&nbsp;USER&nbsp;&nbsp;&nbsp;FD&nbsp;&nbsp;&nbsp;TYPE&nbsp;&nbsp;DEVICE&nbsp;SIZE/OFF&nbsp;NODE&nbsp;NAME<br />
lwfs&nbsp;&nbsp;&nbsp;&nbsp;22065&nbsp;root&nbsp;&nbsp;&nbsp;&nbsp;6u&nbsp;&nbsp;IPv4&nbsp;4395053&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0t0&nbsp;&nbsp;TCP&nbsp;*:irdmi&nbsp;(LISTEN)<br />
<br />
可以看到8000端口已经被轻量级文件系统转发服务lwfs占用<br />
&nbsp;<br />
2、netstat&nbsp;-tunlp&nbsp;|grep&nbsp;端口号，用于查看指定的端口号被哪个服务使用着</p>

<p>如查看8000端口的情况，netstat&nbsp;-tunlp&nbsp;|grep&nbsp;8000</p>

<p>#&nbsp;netstat&nbsp;-tunlp&nbsp;<br />
Active&nbsp;Internet&nbsp;connections&nbsp;(only&nbsp;servers)<br />
Proto&nbsp;Recv-Q&nbsp;Send-Q&nbsp;Local&nbsp;Address&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Foreign&nbsp;Address&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;State&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PID/Program&nbsp;name&nbsp;&nbsp;&nbsp;<br />
tcp&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;0.0.0.0:111&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.0.0.0:*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LISTEN&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4814/rpcbind&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />
tcp&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;0.0.0.0:5908&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.0.0.0:*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LISTEN&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;25492/qemu-kvm&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />
tcp&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;0.0.0.0:6996&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.0.0.0:*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LISTEN&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;22065/lwfs&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />
tcp&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;192.168.122.1:53&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.0.0.0:*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LISTEN&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;38296/dnsmasq&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />
tcp&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;0.0.0.0:22&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.0.0.0:*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LISTEN&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5278/sshd&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />
tcp&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;127.0.0.1:631&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.0.0.0:*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LISTEN&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5013/cupsd&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />
tcp&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;127.0.0.1:25&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.0.0.0:*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LISTEN&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5962/master&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />
tcp&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;0.0.0.0:8666&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.0.0.0:*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LISTEN&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;44868/lwfs&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />
tcp&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;0.0.0.0:8000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.0.0.0:*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LISTEN&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;22065/lwfs&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />
<br />
<br />
#&nbsp;netstat&nbsp;-tunlp&nbsp;|&nbsp;grep&nbsp;8000<br />
tcp&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;0.0.0.0:8000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.0.0.0:*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LISTEN&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;22065/lwfs&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />
&nbsp;<br />
说明一下几个参数的含义：</p>

<p>-t&nbsp;(tcp)&nbsp;仅显示tcp相关选项<br />
-u&nbsp;(udp)仅显示udp相关选项<br />
-n&nbsp;拒绝显示别名，能显示数字的全部转化为数字<br />
-l&nbsp;仅列出在Listen(监听)的服务状态<br />
-p&nbsp;显示建立相关链接的程序名&nbsp;</p>

<h2>Linux 根据进程名(或pid)查看其占用的端口</h2>

<p>&nbsp; &nbsp; &nbsp; 有时候需要在Linux下查看一个进程占用了那个端口，但是只知道进程大致的名称，比如要查看Hadoop的namenode在哪个端口上运行，以便在eclipse中连接。一种方法如下，可能比较搓，请大牛指教！<br />
&nbsp; &nbsp; &nbsp; 首先用ps命令查看进程的id：</p>

<p>&nbsp; &nbsp; &nbsp; $ ps -ef | grep Name &nbsp;<br />
其中每一行（很长的时候会占用若干行）的第二个字段就是进程的id。<br />
&nbsp; &nbsp; &nbsp; 当然，对于在java虚拟机中运行的进程，比如hadoop的守护进程，可以直接用jsp命令查看：</p>

<p>&nbsp; &nbsp; &nbsp; $ jps | grep Name &nbsp;<br />
或者已经知道进程的确切名称，可以用pidof查看：<br />
&nbsp; &nbsp; &nbsp; $ pidof Name &nbsp;<br />
查看到进程id之后，使用netstat命令查看其占用的端口：&nbsp;<br />
&nbsp; &nbsp; &nbsp; $ netstat -nap | grep pid &nbsp;<br />
&nbsp; &nbsp; &nbsp; http://www.cnblogs.com/liuzhengliang/p/4609632.html</p>

<h2>附加一个python端口占用监测的程序</h2>

<p>该程序可以监测指定IP的端口是否被占用。<br />
1&nbsp;#!/usr/bin/env&nbsp;python<br />
&nbsp;&nbsp;2&nbsp;#&nbsp;-*-&nbsp;coding:utf-8&nbsp;-*-<br />
&nbsp;&nbsp;3&nbsp;<br />
&nbsp;&nbsp;4&nbsp;import&nbsp;socket,&nbsp;time,&nbsp;thread<br />
5&nbsp;socket.setdefaulttimeout(3)&nbsp;#设置默认超时时间<br />
&nbsp;&nbsp;6&nbsp;<br />
&nbsp;&nbsp;7&nbsp;def&nbsp;socket_port(ip,&nbsp;port):<br />
8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&quot;&quot;<br />
&nbsp;&nbsp;9&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;输入IP和端口号，扫描判断端口是否占用<br />
&nbsp;10&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&quot;&quot;<br />
&nbsp;11&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try:<br />
12&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;port&nbsp;&gt;=65535:<br />
13&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print&nbsp;u&#39;端口扫描结束&#39;<br />
&nbsp;14&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s=socket.socket(socket.AF_INET,&nbsp;socket.SOCK_STREAM)<br />
15&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result=s.connect_ex((ip,&nbsp;port))<br />
16&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;result==0:<br />
17&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lock.acquire()<br />
18&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print&nbsp;ip,u&#39;:&#39;,port,u&#39;端口已占用&#39;<br />
&nbsp;19&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lock.release()<br />
20&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;except:<br />
21&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print&nbsp;u&#39;端口扫描异常&#39;<br />
&nbsp;22&nbsp;<br />
&nbsp;23&nbsp;def&nbsp;ip_scan(ip):<br />
24&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&quot;&quot;<br />
&nbsp;25&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;输入IP，扫描IP的0-65534端口情况<br />
&nbsp;26&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&quot;&quot;<br />
&nbsp;27&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try:<br />
28&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print&nbsp;u&#39;开始扫描&nbsp;%s&#39;&nbsp;%&nbsp;ip<br />
29&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;start_time=time.time()<br />
30&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;i&nbsp;in&nbsp;range(0,65534):<br />
31&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;thread.start_new_thread(socket_port,(ip,&nbsp;int(i)))<br />
32&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print&nbsp;u&#39;扫描端口完成，总共用时：%.2f&#39;&nbsp;%(time.time()-start_time)<br />
33&nbsp;#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;raw_input(&quot;Press&nbsp;Enter&nbsp;to&nbsp;Exit&quot;)<br />
&nbsp;34&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;except:<br />
35&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print&nbsp;u&#39;扫描ip出错&#39;<br />
&nbsp;36&nbsp;<br />
&nbsp;37&nbsp;if&nbsp;__name__==&#39;__main__&#39;:<br />
38&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;url=raw_input(&#39;Input&nbsp;the&nbsp;ip&nbsp;you&nbsp;want&nbsp;to&nbsp;scan:&nbsp;&#39;)<br />
39&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lock=thread.allocate_lock()<br />
40&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ip_scan(url)<br />
<br />
该程序执行结果如下：<br />
#&nbsp;python&nbsp;scan_port.py<br />
Input&nbsp;the&nbsp;ip&nbsp;you&nbsp;want&nbsp;to&nbsp;scan:&nbsp;20.0.208.112<br />
开始扫描&nbsp;20.0.208.112<br />
20.0.208.112&nbsp;:&nbsp;111&nbsp;端口已占用20.0.208.112&nbsp;:&nbsp;22&nbsp;端口已占用20.0.208.112&nbsp;:&nbsp;8000&nbsp;端口已占用20.0.208.112&nbsp;:&nbsp;15996&nbsp;端口已占用20.0.208.112&nbsp;:&nbsp;41734&nbsp;端口已占用<br />
扫描端口完成，总共用时：9.38</p>
