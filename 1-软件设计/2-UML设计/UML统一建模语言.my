<h1>UML 统一建模工具</h1>

<h2>UML定义了5类，10种模型图</h2>

<p>UML建模体系：</p>

<p><strong><span style="font-size:13px">模型类型            模型图种类                   建模机制</span></strong></p>

<p>用例模型            用例模型图                   静态建模<br />
静态模型            类图、对象图、包图     静态建模<br />
行为模型            状态图、活动图            动态建模<br />
交互模型            序列图、协作图            动态建模<br />
实现模型            组件图、配置图            静态建模</p>

<p>图聚集了相关的事物及其关系的组合，是软件系统在不同角度的投影。图由代表事物的顶点和代表关系的连通图表示。下面对常用的几类图[2-12]进行简单介绍。</p>

<p>（1）用例图（UseCaseDiagram）。展现了一组用例、参与者（actor）以及它们之间的关系。用例图从用户角度描述系统的静态使用情况，用于建立需求模型。<br />
（2）类图（ClassDiagram）。展现了一组对象、接口、协作和它们之间的关系。类图描述的是一种静态关系，在系统的整个生命周期都是有效的，是面向对象系统的建模中最常见的图。<br />
（3）对象图（ObjectDiagram）。展现了一组对象以及它们之间的关系。对象图是类图的实例，几乎使用与类图完全相同的标示。<br />
（4）交互图。用于描述对象间的交互关系，由一组对象和它们之间的关系组成，包含它们之间可能传递的消息。交互图又分为序列图和协作图，其中序列图描述了以时间顺序组织的对象之间的交互活动；协作图强调收发消息的对象的结构组织。<br />
（5）状态图（StateDiagram）。由状态、转换、事件和活动组成，描述类的对象所有可能的状态以及事件发生时的转移条件。通常状态图是对类图的补充，仅需为那些有多个状态的、行为随外界环境而改变的类画状态图。<br />
（6）活动图（ActiveDiagram）。一种特殊的状态图，展现了系统内一个活动到另一个活动的流程。活动图有利于识别并行活动。<br />
（7）组件图（ComponentDiagram）。展现了一组组件的物理结构和组件之间的依赖关系。部件图有助于分析和理解组件之间的相互影响程度。<br />
（8）部署图（DeploymentDiagram）。展现了运行处理节点以及其中的组件的配置。部署图给出了系统的体系结构和静态实施视图。它与组件图相关，通常一个节点包含一个或多个构建。<br />
需要指出的是，UML并不限定仅使用这9种图，开发工具可以采用UML来提供其他种类的图，但到目前为止，这9种图在实际应用中最常用的。综合建模类型、模型图种类、建模机制，UML的建模体系见表1。</p>
