<h1>大数据学习之路【跟着大神学习一波】</h1>

<h2>前言</h2>

<h3>一、背景介绍</h3>

<p>本人目前是一名大数据工程师，项目数据50T，日均数据增长20G左右，个人是从Java后端开发，经过3个月的业余自学成功转型大数据工程师。</p>

<h3>二、大数据介绍</h3>

<p>大数据本质也是数据，但是又有了新的特征，包括数据来源广、数据格式多样化（结构化数据、非结构化数据、Excel文件、文本文件等）、数据量大（最少也是TB级别的、甚至可能是PB级别）、数据增长速度快等。</p>

<p>针对以上主要的4个特征我们需要考虑以下问题：</p>

<ol>
<li>
<p>数据来源广，该如何采集汇总？，对应出现了Sqoop，Cammel，Datax等工具。</p>
</li>
<li>
<p>数据采集之后，该如何存储？，对应出现了GFS，HDFS，TFS等分布式文件存储系统。</p>
</li>
<li>
<p>由于数据增长速度快，数据存储就必须可以水平扩展。</p>
</li>
<li>
<p>数据存储之后，该如何通过运算快速转化成一致的格式，该如何快速运算出自己想要的结果？</p>

<p>对应的MapReduce这样的分布式运算框架解决了这个问题；但是写MapReduce需要Java代码量很大，所以出现了Hive，Pig等将SQL转化成MapReduce的解析引擎；</p>

<p>普通的MapReduce处理数据只能一批一批地处理，时间延迟太长，为了实现每输入一条数据就能得到结果，于是出现了Storm/JStorm这样的低时延的流式计算框架；</p>

<p>但是如果同时需要批处理和流处理，按照如上就得搭两个集群，Hadoop集群（包括HDFS+MapReduce+Yarn）和Storm集群，不易于管理，所以出现了Spark这样的一站式的计算框架，既可以进行批处理，又可以进行流处理（实质上是微批处理）。</p>
</li>
<li>
<p>而后Lambda架构，Kappa架构的出现，又提供了一种业务处理的通用架构。</p>
</li>
<li>
<p>为了提高工作效率，加快运速度，出现了一些辅助工具：</p>

<ul>
<li>Ozzie，azkaban：定时任务调度的工具。</li>
<li>Hue，Zepplin：图形化任务执行管理，结果查看工具。</li>
<li>Scala语言：编写Spark程序的最佳语言，当然也可以选择用Python。</li>
<li>Python语言：编写一些脚本时会用到。</li>
<li>Allluxio，Kylin等：通过对存储的数据进行预处理，加快运算速度的工具。</li>
</ul>
</li>
</ol>

<p>以上大致就把整个大数据生态里面用到的工具所解决的问题列举了一遍，知道了他们为什么而出现或者说出现是为了解决什么问题，进行学习的时候就有的放矢了。</p>

<h2>正文</h2>

<h3>一、大数据相关工作介绍</h3>

<p>大数据方向的工作目前主要分为三个主要方向:</p>

<ol>
<li>大数据工程师</li>
<li>数据分析师</li>
<li>大数据科学家</li>
<li>其他（数据挖掘等）</li>
</ol>

<h3>二、大数据工程师的技能要求</h3>

<p>附上大数据工程师技能图：</p>

<p><img alt="enter image description here" src="http://images.gitbook.cn/a8ea12c0-ad9e-11e7-bc4e-bd9737349028" title="" /></p>

<p>必须掌握的技能11条</p>

<ol>
<li>Java高级(虚拟机、并发)</li>
<li>Linux 基本操作</li>
<li>Hadoop（HDFS+MapReduce+Yarn ）</li>
<li>HBase（JavaAPI操作+Phoenix ）</li>
<li>Hive(Hql基本操作和原理理解）</li>
<li>Kafka</li>
<li>Storm/JStorm</li>
<li>Scala</li>
<li>Python</li>
<li>Spark (Core+sparksql+Spark streaming ）</li>
<li>辅助小工具(Sqoop/Flume/Oozie/Hue等)</li>
</ol>

<p>高阶技能6条</p>

<ol>
<li>机器学习算法以及mahout库加MLlib</li>
<li>R语言</li>
<li>Lambda 架构</li>
<li>Kappa架构</li>
<li>Kylin</li>
<li>Alluxio</li>
</ol>

<h3>三、学习路径</h3>

<p>假设每天可以抽出3个小时的有效学习时间，加上周末每天保证10个小时的有效学习时间；</p>

<p>3个月会有（21*3+4*2*10）*3=423小时的学习时间。</p>

<h4>第一阶段（基础阶段）</h4>

<h5>1）Linux学习（跟鸟哥学就ok了）—–20小时</h5>

<ol>
<li>Linux操作系统介绍与安装。</li>
<li>Linux常用命令。</li>
<li>Linux常用软件安装。</li>
<li>Linux网络。</li>
<li>防火墙。</li>
<li>Shell编程等。</li>
</ol>

<p>官网：<a href="https://www.centos.org/download/" rel="nofollow" target="_blank">https://www.centos.org/download/</a> <br />
中文社区：<a href="http://www.linuxidc.com/Linux/2017-09/146919.htm" rel="nofollow" target="_blank">http://www.linuxidc.com/Linux/2017-09/146919.htm</a></p>

<h5>2）Java 高级学习（《深入理解Java虚拟机》、《Java高并发实战》）—30小时</h5>

<ol>
<li>掌握多线程。</li>
<li>掌握并发包下的队列。</li>
<li>了解JMS。</li>
<li>掌握JVM技术。</li>
<li>掌握反射和动态代理。</li>
</ol>

<p>官网：<a href="https://www.java.com/zh_CN/" rel="nofollow" target="_blank">https://www.java.com/zh_CN/</a> <br />
中文社区：<a href="http://www.java-cn.com/index.html" rel="nofollow" target="_blank">http://www.java-cn.com/index.html</a></p>

<h5>3）Zookeeper学习（可以参照这篇博客进行学习：<a href="http://www.cnblogs.com/wuxl360/p/5817471.html" rel="nofollow" target="_blank">http://www.cnblogs.com/wuxl360/p/5817471.html</a>）</h5>

<ol>
<li>Zookeeper分布式协调服务介绍。</li>
<li>Zookeeper集群的安装部署。</li>
<li>Zookeeper数据结构、命令。</li>
<li>Zookeeper的原理以及选举机制。</li>
</ol>

<p>官网：<a href="http://zookeeper.apache.org/" rel="nofollow" target="_blank">http://zookeeper.apache.org/</a> <br />
中文社区：<a href="http://www.aboutyun.com/forum-149-1.html" rel="nofollow" target="_blank">http://www.aboutyun.com/forum-149-1.html</a></p>

<h4>第二阶段（攻坚阶段）</h4>

<h5>4）Hadoop （《Hadoop 权威指南》）—80小时</h5>

<ol>
<li>
<p>HDFS</p>

<ul>
<li>HDFS的概念和特性。</li>
<li>HDFS的shell操作。</li>
<li>HDFS的工作机制。</li>
<li>HDFS的Java应用开发。</li>
</ul>
</li>
<li>
<p>MapReduce</p>

<ul>
<li>运行WordCount示例程序。</li>
<li>了解MapReduce内部的运行机制。 
<ul>
<li>MapReduce程序运行流程解析。</li>
<li>MapTask并发数的决定机制。</li>
<li>MapReduce中的combiner组件应用。</li>
<li>MapReduce中的序列化框架及应用。</li>
<li>MapReduce中的排序。</li>
<li>MapReduce中的自定义分区实现。</li>
<li>MapReduce的shuffle机制。</li>
<li>MapReduce利用数据压缩进行优化。</li>
<li>MapReduce程序与YARN之间的关系。</li>
<li>MapReduce参数优化。</li>
</ul>
</li>
</ul>
</li>
<li>
<p>MapReduce的Java应用开发</p>
</li>
</ol>

<p>官网：<a href="http://hadoop.apache.org/" rel="nofollow" target="_blank">http://hadoop.apache.org/</a> <br />
中文文档：<a href="http://hadoop.apache.org/docs/r1.0.4/cn/" rel="nofollow" target="_blank">http://hadoop.apache.org/docs/r1.0.4/cn/</a> <br />
中文社区：<a href="http://www.aboutyun.com/forum-143-1.html" rel="nofollow" target="_blank">http://www.aboutyun.com/forum-143-1.html</a></p>

<h5>5）Hive（《Hive开发指南》）–20小时</h5>

<ol>
<li>
<p>Hive 基本概念</p>

<ul>
<li>Hive 应用场景。</li>
<li>Hive 与hadoop的关系。</li>
<li>Hive 与传统数据库对比。</li>
<li>Hive 的数据存储机制。</li>
</ul>
</li>
<li>
<p>Hive 基本操作</p>

<ul>
<li>Hive 中的DDL操作。</li>
<li>在Hive 中如何实现高效的JOIN查询。</li>
<li>Hive 的内置函数应用。</li>
<li>Hive shell的高级使用方式。</li>
<li>Hive 常用参数配置。</li>
<li>Hive 自定义函数和Transform的使用技巧。</li>
<li>Hive UDF/UDAF开发实例。</li>
</ul>
</li>
<li>
<p>Hive 执行过程分析及优化策略</p>
</li>
</ol>

<p>官网：<a href="https://hive.apache.org/" rel="nofollow" target="_blank">https://hive.apache.org/</a> <br />
中文入门文档：<a href="http://www.aboutyun.com/thread-11873-1-1.html" rel="nofollow" target="_blank">http://www.aboutyun.com/thread-11873-1-1.html</a> <br />
中文社区：<a href="http://www.aboutyun.com/thread-7598-1-1.html" rel="nofollow" target="_blank">http://www.aboutyun.com/thread-7598-1-1.html</a></p>

<h5>6）HBase（《HBase权威指南》）—20小时</h5>

<ol>
<li>hbase简介。</li>
<li>habse安装。</li>
<li>hbase数据模型。</li>
<li>hbase命令。</li>
<li>hbase开发。</li>
<li>hbase原理。</li>
</ol>

<p>官网：<a href="http://hbase.apache.org/" rel="nofollow" target="_blank">http://hbase.apache.org/</a> <br />
中文文档：<a href="http://abloz.com/hbase/book.html" rel="nofollow" target="_blank">http://abloz.com/hbase/book.html</a> <br />
中文社区：<a href="http://www.aboutyun.com/forum-142-1.html" rel="nofollow" target="_blank">http://www.aboutyun.com/forum-142-1.html</a></p>

<h5>7）Scala（《快学Scala》）–20小时</h5>

<ol>
<li>Scala概述。</li>
<li>Scala编译器安装。</li>
<li>Scala基础。</li>
<li>数组、映射、元组、集合。</li>
<li>类、对象、继承、特质。</li>
<li>模式匹配和样例类。</li>
<li>了解Scala Actor并发编程。</li>
<li>理解Akka。</li>
<li>理解Scala高阶函数。</li>
<li>理解Scala隐式转换。</li>
</ol>

<p>官网：<a href="http://www.scala-lang.org/" rel="nofollow" target="_blank">http://www.scala-lang.org/</a> <br />
初级中文教程：<a href="http://www.runoob.com/scala/scala-tutorial.html" rel="nofollow" target="_blank">http://www.runoob.com/scala/scala-tutorial.html</a></p>

<h5>8）Spark （《Spark 权威指南》）—60小时</h5>

<p><img alt="enter image description here" src="http://images.gitbook.cn/e3202560-adda-11e7-8d75-f14e65a1bc39" title="" /></p>

<ol>
<li>
<p>Spark core</p>

<ul>
<li>Spark概述。</li>
<li>Spark集群安装。</li>
<li>执行第一个Spark案例程序（求PI）。</li>
</ul>
</li>
<li>
<p>RDD</p>

<p><img alt="enter image description here" src="http://images.gitbook.cn/02ffd320-addc-11e7-9923-17951b2031c1" title="" /></p>

<ul>
<li>RDD概述。</li>
<li>创建RDD。</li>
<li>RDD编程API（Transformation 和 Action Operations）。</li>
<li>RDD的依赖关系</li>
<li>RDD的缓存</li>
<li>DAG（有向无环图）</li>
</ul>
</li>
<li>
<p>Spark SQL and DataFrame/DataSet</p>

<p><img alt="enter image description here" src="http://images.gitbook.cn/9e06fa70-addb-11e7-9923-17951b2031c1" title="" /></p>

<ul>
<li>Spark SQL概述。</li>
<li>DataFrames。</li>
<li>DataFrame常用操作。</li>
<li>编写Spark SQL查询程序。</li>
</ul>
</li>
<li>
<p>Spark Streaming</p>

<p><img alt="enter image description here" src="http://images.gitbook.cn/4c92ed70-addb-11e7-8d75-f14e65a1bc39" style="height:299px; width:800px" title="" /></p>

<p><img alt="enter image description here" src="http://images.gitbook.cn/54bdafd0-addb-11e7-9923-17951b2031c1" style="height:179px; width:800px" title="" /></p>

<ul>
<li>park Streaming概述。</li>
<li>理解DStream。</li>
<li>DStream相关操作（Transformations 和 Output Operations）。</li>
</ul>
</li>
<li>
<p>Structured Streaming</p>
</li>
<li>
<p>其他（MLlib and GraphX ）</p>
</li>
</ol>

<p>这个部分一般工作中如果不是数据挖掘，机器学习一般用不到，可以等到需要用到的时候再深入学习。</p>

<p>官网：<a href="http://spark.apache.org/" rel="nofollow" target="_blank">http://spark.apache.org</a> <br />
中文文档（但是版本有点老）：<a href="https://www.gitbook.com/book/aiyanbo/spark-programming-guide-zh-cn/details" rel="nofollow" target="_blank">https://www.gitbook.com/book/aiyanbo/spark-programming-guide-zh-cn/details</a> <br />
中文社区：<a href="http://www.aboutyun.com/forum-146-1.html" rel="nofollow" target="_blank">http://www.aboutyun.com/forum-146-1.html</a></p>

<p>9）Python (推荐<a href="https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000" rel="nofollow" target="_blank">廖雪峰的博客</a>—30小时</p>

<p>10）自己用虚拟机搭建一个集群，把所有工具都装上，自己开发一个小demo —30小时</p>

<p>可以自己用VMware搭建4台虚拟机，然后安装以上软件，搭建一个小集群（本人亲测，I7，64位，16G内存，完全可以运行起来，以下附上我学习时用虚拟机搭建集群的操作文档）</p>

<hr />
<p>集群搭建文档1.0版本</p>

<p>1. 集群规划</p>

<p><img alt="enter image description here" src="http://images.gitbook.cn/2757ab40-adcc-11e7-9c1d-d1d3a666bff7" title="" /></p>

<p>所有需要用到的软件：</p>

<p>链接：<a href="http://pan.baidu.com/s/1jIlAz2Y" rel="nofollow" target="_blank">http://pan.baidu.com/s/1jIlAz2Y</a> <br />
密码：kyxl</p>

<p> </p>

<h4>第三阶段（辅助工具工学习阶段）</h4>

<h5>11）Sqoop（CSDN，51CTO ，以及官网）—20小时</h5>

<p><img alt="enter image description here" src="http://images.gitbook.cn/73425e40-add8-11e7-b8aa-23aafd675e29" title="" /></p>

<ol>
<li>数据导出概念介绍</li>
<li>Sqoop基础知识</li>
<li>Sqoop原理及配置说明</li>
<li>Sqoop数据导入实战</li>
<li>Sqoop数据导出实战、</li>
<li>Sqoop批量作业操作</li>
</ol>

<p>推荐学习博客：<a href="http://student-lp.iteye.com/blog/2157983" rel="nofollow" target="_blank">http://student-lp.iteye.com/blog/2157983</a> <br />
官网：<a href="http://sqoop.apache.org/" rel="nofollow" target="_blank">http://sqoop.apache.org/</a></p>

<h5>12）Flume（CSDN，51CTO ，以及官网）—20小时</h5>

<p><img alt="enter image description here" src="http://images.gitbook.cn/9751ef80-add8-11e7-927e-57bcdc31b8fa" title="" /></p>

<ol>
<li>FLUME日志采集框架介绍。</li>
<li>FLUME工作机制。</li>
<li>FLUME核心组件。</li>
<li>FLUME参数配置说明。</li>
<li>FLUME采集nginx日志案例（案例一定要实践一下）</li>
</ol>

<p>推荐学习博客：<a href="http://www.aboutyun.com/thread-8917-1-1.html" rel="nofollow" target="_blank">http://www.aboutyun.com/thread-8917-1-1.html</a> <br />
官网：<a href="http://flume.apache.org/" rel="nofollow" target="_blank">http://flume.apache.org</a></p>

<h5>13）Oozie（CSDN，51CTO ，以及官网）–20小时</h5>

<p><img alt="enter image description here" src="http://images.gitbook.cn/b2a35800-add8-11e7-927e-57bcdc31b8fa" title="" /></p>

<ol>
<li>任务调度系统概念介绍。</li>
<li>常用任务调度工具比较。</li>
<li>Oozie介绍。</li>
<li>Oozie核心概念。</li>
<li>Oozie的配置说明。</li>
<li>Oozie实现mapreduce/hive等任务调度实战案例。</li>
</ol>

<p>推荐学习博客：<a href="http://www.infoq.com/cn/articles/introductionOozie" rel="nofollow" target="_blank">http://www.infoq.com/cn/articles/introductionOozie</a> <br />
官网：<a href="http://oozie.apache.org/" rel="nofollow" target="_blank">http://oozie.apache.org/</a></p>

<h5>14）Hue（CSDN，51CTO ，以及官网）–20小时</h5>

<p>推荐学习博客：<a href="http://ju.outofmemory.cn/entry/105162" rel="nofollow" target="_blank">http://ju.outofmemory.cn/entry/105162</a> <br />
官网：<a href="http://gethue.com/" rel="nofollow" target="_blank">http://gethue.com/</a></p>

<p>第四阶段（不断学习阶段）</p>

<p>每天都会有新的东西出现，需要关注最新技术动态，不断学习。任何一般技术都是先学习理论，然后在实践中不断完善理论的过程。</p>

<p>备注</p>

<p>1）如果你觉得自己看书效率太慢，你可以网上搜集一些课程，跟着课程走也OK 。如果看书效率不高就很网课，相反的话就自己看书。</p>

<p>2）企业目前更倾向于使用Spark进行微批处理，Storm只有在对时效性要求极高的情况下，才会使用，所以可以做了解。重点学习Spark Streaming。</p>

<p>3）快速学习的能力、解决问题的能力、沟通能力**真的很重要。</p>

<p>4）要善于使用StackOverFlow和Google（遇到解决不了的问题，先Google，如果Google找不到解决方能就去StackOverFlow提问，一般印度三哥都会在2小时内回答你的问题）。</p>

<p>/*</p>

<p>5）视频课程推荐：</p>

<p>可以去万能的淘宝购买一些视频课程，你输入“大数据视频课程”，会出现很多，多购买几份（100块以内可以搞定），然后选择一个适合自己的。个人认为小象学院的董西成和陈超的课程含金量会比较高。\</p>

<p>*/</p>

<h3>四、持续学习资源推荐</h3>

<ol>
<li>Apache 官网（<a href="http://apache.org/" rel="nofollow" target="_blank">http://apache.org/</a>）</li>
<li>Stackoverflow（<a href="https://stackoverflow.com/" rel="nofollow" target="_blank">https://stackoverflow.com/</a>）</li>
<li>Github(<a href="https://github.com/" rel="nofollow" target="_blank">https://github.com/</a>)</li>
<li>Cloudra官网(<a href="https://www.cloudera.com/" rel="nofollow" target="_blank">https://www.cloudera.com/</a>)</li>
<li>Databrick官网(<a href="https://databricks.com/" rel="nofollow" target="_blank">https://databricks.com/</a>)</li>
<li>About 云 ：<a href="http://www.aboutyun.com/" rel="nofollow" target="_blank">http://www.aboutyun.com/</a></li>
<li>CSDN，51CTO （<a href="http://www.csdn.net/" rel="nofollow" target="_blank">http://www.csdn.net/</a>，<a href="http://www.51cto.com/" rel="nofollow" target="_blank">http://www.51cto.com/</a>）</li>
<li>至于书籍当当一搜会有很多，其实内容都差不多。</li>
</ol>
