<h1>实际经验</h1>

<p>在用户使用中，容错会占很多工作量。</p>

<p>注意白盒测试，多交流、评审代码。</p>

<p>控制需求扩张，新需求记录，做到有据可依。</p>

<p>抽象出错误类型代码！</p>

<p>总结出字典表！常量类！</p>

<p>dao层返回数值，service 层返回boolean类型。</p>

<p>js 里面的提示信息，用后台返回的resultMap里面的msg，和status。 提示尽量详细。</p>

<p>数据模型使用dao，pojo，dto.</p>

<p>项目中验证、自动生成 这些都统一抽象出来工具类！！</p>

<p>项目中删除数据策略。</p>

<p>修改较少的，如字典表，添加 初建，启用，停用字段，维护删除策略。</p>

<p>修改较多的，如学生信息，申请表，添加has_used字段，在被引用时修改它的状态值。</p>

<p>项目中，updata数据策略。</p>

<p>凡是后期会有修改操作的表，添加update_by,update_time字段。</p>

<p>有些功能，如has_used字段维护，单表数据是否存在，可以抽出公共类。</p>

<p><strong>业务操作放到service层，这样才能支持回滚！！</strong></p>
