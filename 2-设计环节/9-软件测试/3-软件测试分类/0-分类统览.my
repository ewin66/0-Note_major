<h1>软件测试分类</h1>

<h2>按测试过程 （开发阶段）</h2>

<p>单元测试：</p>

<p>又称模块测试，是针对软件设计的最小单位——程序模块进行正确性检验的测试工作。</p>

<p>集成测试：</p>

<p>又称组装测试，是将模块按照设计要求组装起来进行测试，主要目标是发现与接口有关的问题。</p>

<p>确认测试：</p>

<p>验证软件的功能和性能及其它特性是否与用户的要求一致。</p>

<p>系统测试：</p>

<p>是在集成测试通过后进行，目的是充分运行系统，验证各子系统是否都能正常工作并完成设计的要求。</p>

<p>验收测试：</p>

<p>用户为主，开发人员参与，以规格说明书为蓝本的测试。</p>

<h2>按测试用例设计方法</h2>

<h3>白盒测试</h3>

<p>也称结构测试或逻辑驱动测试。它是从程序的控制结构出发进行的测试，测试程序中的每条通路是否都有能按预定要求正确工作，而不顾它的功能。</p>

<h3>黑盒测试</h3>

<p>又称功能测试、数据驱动测试或基于规格说明书的测试，是一种从用户观点出发的测试，在已知产品所应具有的功能，通过测试来检测每个功能是否都能正常使用。</p>

<h3>灰盒测试</h3>

<p>是介于白盒测试与黑盒测试之间的测试，灰盒测试关注输出对于输入的正确性，同时也关注内部表现，但这种关注不象白盒那样详细、完整，只是通过一些表征性的现象、事件、标志来判断内部的运行状态。<br />
 </p>

<h2>按实施对象</h2>

<p>Alpha测试（企业内部测试）：</p>

<p>是由用户在开发环境下进行的测试，也可以是公司内部的用户在模拟实际操作环境下进行的受控测试。 </p>

<p>Beta测试（最终用户测试）：</p>

<p>是软件的多个用户在实际使用环境下进行的测试。 </p>

<p>第三方测试（独立测试）<br />
 </p>

<h2>按执行方式</h2>

<p>人工测试：手工执行的测试；</p>

<p>自动化测试：希望能够通过自动化测试工具或其他手段,按照测试工程师的预定计划进行自动的测试。如：负载测试、性能测试、可靠性测试等。</p>

<h2>按测试方式划分</h2>

<p>静态测试</p>

<p>静态测试方法的主要特征是在用计算机测试源程序时，计算机并不真正运行被测试的程序，只对被测程序进行特性分析。<br />
静态测试常称为“分析”，静态分析是对被测程序进行特性分析的一些方法的总称。</p>

<p>动态测试</p>

<p>动态测试方法的主要特征是计算机必须真正运行被测试的程序，通过输入测试用例，对其运行情况(输入/输出的对应关系)进行分析。 <br />
 </p>

<h2>按测试形态(Testing Types)(台湾许育诚的一种分法)：</h2>

<h3>建构性测试(Construction Testing)：</h3>

<p>当程序还是处于建设阶段时所进行的测试；是属于前置性的测试,它主要是偏重于程序端的功能测试,以确保程序执行运行正常。</p>

<p>系统测试(System Testing) :</p>

<p>是针对系统的行为来做测试；是属于中后期的整合测试,所进行的测试是以使用者的观点为主,也就是模拟外界世界的使用者会如何的使用产品。</p>

<p>特殊测试(Special Testing) :</p>

<p>根据产品的本质特性来安排或剔除特殊测试</p>

<h3>建构性测试包括：</h3>

<p>单步测试、尝试性测试、单元测试、组件测试、集成测试等</p>

<p>系统测试包括：</p>

<p>集成测试、前哨测试、功能测试、设置测试、发行测试、验收测试等</p>

<p>特殊测试包括：</p>

<p>回归测试、压力测试、兼容性测试、性能测试、Alpha和Beta测试<br />
 </p>

<p> </p>
