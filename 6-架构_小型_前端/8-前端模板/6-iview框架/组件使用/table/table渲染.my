<h1>iview,用render函数渲染</h1>

<h2>html部分</h2>

<p><Table border :columns="discountColumns" :data="discountData.rows"></Table><br />
 </p>

<h2>js部分</h2>

<p>discountData: {<br />
    total: 1, rows: [<br />
        {<br />
            randomDiscountRangeMax: '',<br />
            randomDiscountRangeMin: '',<br />
            population: ''<br />
        },<br />
    ],<br />
    defaultRows:{<br />
        randomDiscountRangeMax: '',<br />
        randomDiscountRangeMin: '',<br />
        population: ''<br />
    },<br />
}<br />
  <br />
discountColumns: [<br />
    {<br />
        key: 'randomDiscountRange',<br />
        align: 'center',<br />
        title: '随机立减范围',<br />
        render: (h, params) => {<br />
            var me = this<br />
            return h('div', [h('Input', {<br />
                props: {<br />
                    type: 'text',<br />
                    value: me.discountData.rows[params.index].randomDiscountRangeMin,<br />
                    disabled: this.getIsDetail(),<br />
                },<br />
                style: {<br />
                    width: '100px'<br />
                },<br />
                on: {<br />
                    'on-blur': (event) => {<br />
                        me.discountData.rows[params.index].randomDiscountRangeMin = event.target.value<br />
                    }<br />
                }<br />
            }),<br />
                h('span', '元＜=随机立减金额<'),<br />
                h('Input', {<br />
                    props: {<br />
                        type: 'text',<br />
                        value: me.discountData.rows[params.index].randomDiscountRangeMax,<br />
                        disabled: this.getIsDetail(),<br />
                    },<br />
                    style: {<br />
                        width: '100px'<br />
                    },<br />
                    on: {<br />
                        'on-blur': (event) => {<br />
                            this.discountData.rows[params.index].randomDiscountRangeMax = event.target.value<br />
                        }<br />
                    }<br />
                }),<br />
                h('span', '元')])<br />
        }<br />
    },<br />
    {<br />
        key: 'population',<br />
        align: 'center',<br />
        title: '概率',<br />
        width: 300,<br />
        render: (h, params) => {<br />
            var me = this<br />
            return h('div', [h('Input', {<br />
                props: {<br />
                    type: 'text',<br />
                    value: me.discountData.rows[params.index].population,<br />
                    disabled: this.getIsDetail(),<br />
                },<br />
                style: {<br />
                    width: '100px'<br />
                },<br />
                on: {<br />
                    'on-blur': (event) => {<br />
                        this.discountData.rows[params.index].population = event.target.value<br />
                    }<br />
                }<br />
            }), h('span', '%')])<br />
        }<br />
    }, {<br />
        key: 'operation',<br />
        align: 'center',<br />
        title: '操作',<br />
        width: 200,<br />
        render: (h, params) => {<br />
            return h('div', [<br />
                h('Button', {<br />
                    props: {<br />
                        type: 'primary',<br />
                        shape: 'circle',<br />
                        icon: 'plus',<br />
                        disabled: this.getIsDetail(),<br />
                    },<br />
                    style: {<br />
                        display: params.index !== 0 ? 'none' : 'inline'<br />
                    },<br />
                    on: {<br />
                        click: () => {<br />
                            this.add('discountData')<br />
                        }<br />
                    }<br />
                }), h('Button', {<br />
                    props: {<br />
                        type: 'primary',<br />
                        shape: 'circle',<br />
                        icon: 'minus',<br />
                        disabled: this.getIsDetail(),<br />
                    },<br />
                    style: {<br />
                        display: params.index === 0 ? 'none' : 'inline'<br />
                    },<br />
                    on: {<br />
                        click: () => {<br />
                            this.remove(params.index, 'discountData')<br />
                        }<br />
                    }<br />
                })<br />
            ])<br />
        }<br />
    }<br />
]</p>

<p>add (dataName) {<br />
    var obj = JSON.parse(JSON.stringify(this[dataName].defaultRows))<br />
    this[dataName].rows.push(obj)<br />
}<br />
             <br />
remove (index, value) {<br />
    this[value].rows.splice(index, 1)<br />
} </p>

<h2>效果</h2>

<p><img alt="" src="https://images2017.cnblogs.com/blog/414908/201802/414908-20180209144724326-1527607454.png" /></p>

<p> </p>

<h2>单元格中渲染进度条</h2>

<p>    {<br />
        title: '完成进度',<br />
        key: 'd_progress',<br />
        render: (h, params) => {<br />
            return h('div',[<br />
                h('Progress', {<br />
                    props: {<br />
                        type: 'Progress',<br />
                        size: 'small',<br />
                        percent:parseInt(params.row.d_progress)<br />
                    },<br />
                    style: {<br />
                        <strong>marginRight: '100px'   设置进度条位置</strong><br />
                    }<br />
                }, <strong>params.row.d_progress+'%'</strong>),])  黑色部分是进度条整体的一部分！如果进度条后面显示数字。可以在进度条模块后面追加显示。<br />
                ,params.row.featureCover+'/'+params.row.featureTotal<br />
        }<br />
    }</p>

<p><a href="https://blog.csdn.net/u014133119/article/details/81223794">原文地址</a></p>
