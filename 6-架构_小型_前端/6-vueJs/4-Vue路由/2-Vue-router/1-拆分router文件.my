<h1>Vue + Webpack 将路由文件分拆为多个文件分别管理简明教程</h1>

<p>近日，有网友留言，询问，如何将 <code>vue</code> 的路由分拆为多个文件进行管理。这当然是可以的。今天我就来写一个简单的教程，希望对大家有所帮助。</p>

<p><img alt="" src="https://raw.githubusercontent.com/fengcms/articles/master/image/56/6f54c4da7040c388ac6a8d85495bc2.jpg" style="height:481px; width:600px" title="" /></p>

<p>事实是，如果你的项目不是特别大，一般是用不着分拆的。如果项目大了，那就需要考虑分拆路由了。其实，这个操作并不复杂。</p>

<p>当我们用 <code>vue-cli</code> 工具，创建一个新的 <code>vue</code> 项目时，就已经给大家新建好了一个路由文件 <code>src/router/index.js</code> ，内容如下：</p>

<pre>
<code>import Vue from 'vue'
import Router from 'vue-router'
import HelloWorld from '@/components/HelloWorld'

Vue.use(Router)

export default new Router({
routes: [
{
path: '/',
name: 'HelloWorld',
component: HelloWorld
}
]
})</code></pre>

<p>我们以这个文件为蓝本，进行调整。举例，我们现在要新建一个 <code>news</code> 的这个路由，然后这个路由下面，还有一些子路由，我们就可以这样写：</p>

<h2>router/index.js 文件调整</h2>

<pre>
<code>// src/router/index.js
import Vue from 'vue'
import Router from 'vue-router'
// 子路由视图VUE组件
import frame from '@/frame/frame'

import HelloWorld from '@/components/HelloWorld'
// 引用 news 子路由配置文件
import news from './news.js'

Vue.use(Router)

export default new Router({
routes: [
{
path: '/',
name: 'HelloWorld',
component: HelloWorld
}, {
path: '/news',
component: frame,
children: news
}
]
})</code></pre>

<p>如上，我们引入一个子路由视图的 <code>vue</code> 组件，然后再引入 <code>news</code> 的子路由配置文件即可。下面我们来编写这两个文件。</p>

<h2>frame/frame 子路由视图 vue 组件</h2>

<pre>
<code><template>
<router-view />
</template></code></pre>

<p>路由视图组件就异常简单了，如上，三行代码即可，有关 <code>router-view</code> 的相关内容，请查看： <a href="https://router.vuejs.org/zh/api/#router-view" rel="nofollow" target="_blank">https://router.vuejs.org/zh/api/#router-view</a></p>

<h2>router/news.js 子路由配置文件</h2>

<p>其实，配置这个文件和 <code>vue</code> 没有什么关系，纯粹就是 <code>js es6</code> 的导出和导入而已。</p>

<pre>
<code>import main from '@/page/news/main'
import details from '@/page/news/details'

export default [
{path: '', component: main},
{path: 'details', component: details}
]</code></pre>

<p>如上，即可。我们就完成了路由的多文件管理了。这样看，是不是很简单呢？有什么问题，请在评论中留言，我会抽时间答复大家。</p>
