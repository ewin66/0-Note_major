<h1>Quartz2.2.x官方教程</h1>
<div class="blogpost-body" id="cnblogs_post_body" style="-webkit-text-stroke-width:0px; margin-bottom:20px; text-align:start">
<h2 style="margin-left:0px; margin-right:0px"><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:28px"><strong><span style="font-size:22pt"><span style="font-family:宋体">零、<span style="font-family:Calibri">Quartz</span><span style="font-family:宋体">是什么？能干什么？</span></span></span></strong></span></span></span></h2>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">Quartz<span style="font-family:宋体">是一个开源的任务调度框架。基于定时、定期的策略来执行任务是它的核心功能，比如</span><span style="font-family:Calibri">x</span><span style="font-family:宋体">年</span><span style="font-family:Calibri">x</span><span style="font-family:宋体">月的每个星期五上午</span><span style="font-family:Calibri">8</span><span style="font-family:宋体">点到</span><span style="font-family:Calibri">9</span><span style="font-family:宋体">点，每隔</span><span style="font-family:Calibri">10</span><span style="font-family:宋体">分钟执行</span><span style="font-family:Calibri">1</span><span style="font-family:宋体">次。</span><span style="font-family:Calibri">Quartz</span><span style="font-family:宋体">有</span><span style="font-family:Calibri">3</span><span style="font-family:宋体">个核心要素：调度器</span><span style="font-family:Calibri">(Scheduler)</span><span style="font-family:宋体">、任务</span><span style="font-family:Calibri">(Job)</span><span style="font-family:宋体">、触发器</span><span style="font-family:Calibri">(Trigger)</span><span style="font-family:宋体">。</span><span style="font-family:Calibri">Quartz</span><span style="font-family:宋体">完全使用</span><span style="font-family:Calibri">Java</span><span style="font-family:宋体">开发，可以集成到各种规模的应用程序中。它能够承载成千上万的任务调度，并且支持集群。它支持将数据存储到数据库中以实现持久化，并支持绝大多数的数据库。它将任务与触发设计为松耦合，即一个任务可以对应多个触发器，这样能够轻松构造出极为复杂的触发策略。</span></span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">本文是对</span></span><a href="https://quartz-scheduler.org/documentation/quartz-2.2.x/tutorials/" style="color:#1a8bc8; text-decoration:none"><span style="font-family:宋体">Quartz Job Scheduler Tutorials</span></a><span style="font-size:12pt"><span style="font-family:宋体">的全文翻译，作为笔者自己的学习笔记。当前日期是<span style="font-family:Calibri">2016</span><span style="font-family:宋体">年</span><span style="font-family:Calibri">2</span><span style="font-family:宋体">月</span><span style="font-family:Calibri">20</span><span style="font-family:宋体">日，最新版本是</span><span style="font-family:Calibri">2.2.x</span><span style="font-family:宋体">，官方在线文档的后续更新本文不再跟进。</span></span></span></span></span></span></p>
<h2 style="margin-left:0px; margin-right:0px"><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:28px"><strong><span style="font-size:22pt"><span style="font-family:宋体">一、</span></span><span style="font-size:22pt"><span style="font-family:宋体">使用<span style="font-family:Calibri">Quartz</span></span></span></strong></span></span></span></h2>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">在使用调度器之前，它需要被实例化，你可以使用</span></span><span style="font-size:12pt"><span style="font-family:Calibri">SchedulerFactory</span></span><span style="font-size:12pt"><span style="font-family:宋体">来实现。部分</span></span><span style="font-size:12pt"><span style="font-family:Calibri">Quartz</span></span> <span style="font-size:12pt"><span style="font-family:宋体">用户可能会在</span></span><span style="font-size:12pt"><span style="font-family:Calibri">JNDI</span></span> <span style="font-size:12pt"><span style="font-family:宋体">存储中保存一个</span></span><span style="font-size:12pt"><span style="font-family:Calibri">factory</span></span> <span style="font-size:12pt"><span style="font-family:宋体">实例，而部分用户可能会发现直接初始化并使用</span></span><span style="font-size:12pt"><span style="font-family:Calibri">factory</span></span> <span style="font-size:12pt"><span style="font-family:宋体">实例是很简单的（就像例子中那样）。</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:9.5pt"><span style="font-family:宋体">当</span></span><span style="font-size:12pt"><span style="font-family:宋体">调度器实例化以后，它可以被启动，置为备用模式或停止。注意一旦它被停止是不能重新启动的，除非重新初始化。在调度器没启动时触发器是不会激活的，在暂停状态下也不会。</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">下面是一个示例代码片段，演示了实例化并启动调度器，然后调度任务执行。</span></span></span></span></span></p>
<div class="cnblogs_code" style="border:1px solid #cccccc; margin-bottom:5px; margin-left:0px; margin-right:0px; margin-top:5px; padding:5px">
<pre>
<span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"><span style="font-size:12px !important"><span style="font-family:"Courier New" !important">SchedulerFactory schedFact = <span style="font-size:12px !important"><span style="font-family:"Courier New" !important">new</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> org.quartz.impl.StdSchedulerFactory();
Scheduler sched </span></span>=<span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> schedFact.getScheduler();
sched.start();
</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important">//</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> define the job and tie it to our HelloJob class</span></span>
<span style="font-size:12px !important"><span style="font-family:"Courier New" !important">
JobDetail job </span></span>= newJob(HelloJob.<span style="font-size:12px !important"><span style="font-family:"Courier New" !important">class</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important">)
.withIdentity(</span></span>"myJob", "group1"<span style="font-size:12px !important"><span style="font-family:"Courier New" !important">)
.build();
</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important">//</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> Trigger the job to run now, and then every 40 seconds</span></span>
<span style="font-size:12px !important"><span style="font-family:"Courier New" !important">
Trigger trigger </span></span>=<span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> newTrigger()
.withIdentity(</span></span>"myTrigger", "group1"<span style="font-size:12px !important"><span style="font-family:"Courier New" !important">)
.startNow()
.withSchedule(simpleSchedule()
.withIntervalInSeconds(</span></span>40<span style="font-size:12px !important"><span style="font-family:"Courier New" !important">)
.repeatForever())
.build();
</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important">//</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> Tell quartz to schedule the job using our trigger</span></span>
<span style="font-size:12px !important"><span style="font-family:"Courier New" !important">
sched.scheduleJob(job, trigger);</span></span></span></span></span></span></span></span>
</pre>
</div>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">如你所见，</span></span><span style="font-size:12pt"><span style="font-family:Calibri">quartz</span></span> <span style="font-size:12pt"><span style="font-family:宋体">的使用非常简单，在第</span></span><span style="font-size:12pt"><span style="font-family:宋体">2<span style="font-family:宋体">节我们将简要介绍任务和触发器，以及</span></span></span><span style="font-size:12pt"><span style="font-family:Calibri">Quartz</span></span><span style="font-size:12pt"><span style="font-family:宋体">的</span></span><span style="font-size:12pt"><span style="font-family:宋体">API<span style="font-family:宋体">，到时候你就能对示例有更深的理解。</span></span></span></span></span></span></p>
<h2 style="margin-left:0pt; margin-right:0px"><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:28px"><strong><span style="font-size:22pt"><span style="font-family:宋体">二、</span></span><span style="font-size:22pt"><span style="font-family:宋体">核心<span style="font-family:Calibri">API</span><span style="font-family:宋体">以及任务和触发器介绍</span></span></span></strong></span></span></span></h2>
<h3 style="margin-left:0px; margin-right:0px"><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:16pt"><span style="font-family:宋体">2.1 </span></span><span style="font-size:16pt"><span style="font-family:Arial">Quartz </span></span><span style="font-size:16pt"><span style="font-family:宋体">API</span></span></span></span></h3>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">Quartz API<span style="font-family:宋体">主要包含以下接口：</span></span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">Scheduler<span style="font-family:宋体">：与调度器交互的主要</span><span style="font-family:Calibri">API</span><span style="font-family:宋体">。</span></span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">Job:<span style="font-family:宋体">一个接口，实现该接口的组件将被调度器运行。</span></span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">JobDetail:<span style="font-family:宋体">用于定义</span><span style="font-family:Calibri">Job</span><span style="font-family:宋体">实例。</span></span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">Trigger:<span style="font-family:宋体">定义了一个</span><span style="font-family:Calibri">Job</span><span style="font-family:宋体">如何被调度器所运行。</span></span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">JobBuilder:<span style="font-family:宋体">用于定义</span><span style="font-family:Calibri">/</span><span style="font-family:宋体">构建</span><span style="font-family:Calibri">JobDetail </span><span style="font-family:宋体">实例。</span></span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">TriggerBuilder:<span style="font-family:宋体">用于定义</span><span style="font-family:Calibri">/</span><span style="font-family:宋体">构建</span><span style="font-family:Calibri">Trigger</span><span style="font-family:宋体">实例。</span></span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">Scheduler<span style="font-family:宋体">由</span><span style="font-family:Calibri">SchedulerFactory</span><span style="font-family:宋体">创建，并随着</span><span style="font-family:Calibri">shutdown</span><span style="font-family:宋体">方法的调用而终止。创建后它将可被用来添加、删除或列出</span><span style="font-family:Calibri">Job</span><span style="font-family:宋体">和</span><span style="font-family:Calibri">Trigger</span><span style="font-family:宋体">，或执行一些调度相关的工作，（比如暂停）。只有通过</span><span style="font-family:Calibri">start()</span><span style="font-family:宋体">方法启动后它才会真的工作。</span></span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">Quartz<span style="font-family:宋体">提供一些列的</span><span style="font-family:Calibri">Builder</span><span style="font-family:宋体">类来定义领域特定语言（也被称为流接口）。从示例代码中能看到，</span><span style="font-family:Calibri">Job</span><span style="font-family:宋体">以及</span><span style="font-family:Calibri">Trigger</span><span style="font-family:宋体">都可以通过</span><span style="font-family:Calibri">Builder</span><span style="font-family:宋体">来创建。</span></span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">各种</span></span><span style="font-size:12pt"><span style="font-family:Calibri">”</span></span><span style="font-size:12pt"><span style="font-family:Calibri">ScheduleBuilder</span></span><span style="font-size:12pt"><span style="font-family:Calibri">”</span></span><span style="font-size:12pt"><span style="font-family:宋体">包含了创建各种类型调度器的方法。</span></span><span style="font-size:12pt"><span style="font-family:Calibri">DateBuilder</span></span> <span style="font-size:12pt"><span style="font-family:宋体">类包含方便地创建指定时间点的日历实例（比如表示下一个整时的时间）的各种方法。</span></span></span></span></span></p>
<h3 style="margin-left:0px; margin-right:0px"><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:16pt"><span style="font-family:宋体">2.2 </span></span><span style="font-size:16pt"><span style="font-family:宋体">任务和触发器</span></span></span></span></h3>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">Job<span style="font-family:宋体">是一个实现了</span><span style="font-family:Calibri">Job</span><span style="font-family:宋体">接口的类，它只有</span><span style="font-family:Calibri">execute</span><span style="font-family:宋体">这一个方法。它的形式如下所示：</span></span></span></span></span></span></p>
<div class="cnblogs_code" style="border:1px solid #cccccc; margin-bottom:5px; margin-left:0px; margin-right:0px; margin-top:5px; padding:5px">
<pre>
<span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> <span style="font-size:12px !important"><span style="font-family:"Courier New" !important">package</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> org.quartz;
</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important">public</span></span> <span style="font-size:12px !important"><span style="font-family:"Courier New" !important">interface</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> Job {
</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important">public</span></span> <span style="font-size:12px !important"><span style="font-family:"Courier New" !important">void</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> execute(JobExecutionContext context)
</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important">throws</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> JobExecutionException;
}</span></span></span></span></span></span></span></span>
</pre>
</div>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">当<span style="font-family:Calibri">Job</span><span style="font-family:宋体">的</span><span style="font-family:Calibri">Trigger</span><span style="font-family:宋体">激活时，该方法将被</span><span style="font-family:Calibri">Scheduler</span><span style="font-family:宋体">的一个线程调用执行。</span><span style="font-family:Calibri">JobExecutionContext </span><span style="font-family:宋体">是传递给该方法的运行时环境信息，包括调用它的调度器、触发该执行的</span><span style="font-family:Calibri">Trigger</span><span style="font-family:宋体">、</span><span style="font-family:Calibri">JobDetail</span><span style="font-family:宋体">对象以及其他信息。</span></span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">JobDetail<span style="font-family:宋体">是在</span><span style="font-family:Calibri">Job</span><span style="font-family:宋体">被添加到</span><span style="font-family:Calibri">Scheduler</span><span style="font-family:宋体">时由应用程序创建的，它包含了关于</span><span style="font-family:Calibri">Job</span><span style="font-family:宋体">的各种属性信息，都在</span><span style="font-family:Calibri">JobDataMap</span><span style="font-family:宋体">中。</span></span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">Trigger<span style="font-family:宋体">用于触发任务的执行。它也会关联到的一个</span><span style="font-family:Calibri">JobDataMap--</span><span style="font-family:宋体">当需要把数据传递给触发器特定的某个任务时这很有用。</span><span style="font-family:Calibri">Quartz</span><span style="font-family:宋体">提供了各种触发器，然而最常用的是</span><span style="font-family:Calibri">SimpleTrigger </span><span style="font-family:宋体">和</span><span style="font-family:Calibri">CronTrigger</span><span style="font-family:宋体">。</span></span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">SimpleTrigger<span style="font-family:宋体">是非常好用的，如果你只需要让任务在指定的时间执行，或者让它在指定的时间执行，重复</span><span style="font-family:Calibri">N</span><span style="font-family:宋体">次，以</span><span style="font-family:Calibri">T</span><span style="font-family:宋体">为周期。</span><span style="font-family:Calibri">CronTrigger</span><span style="font-family:宋体">用于进行类似于日历时间的触发，比如每个周五的下午，或者每个月</span><span style="font-family:Calibri">10</span><span style="font-family:宋体">号的</span><span style="font-family:Calibri">10</span><span style="font-family:宋体">点。</span></span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">我们将任务和触发器设计为互相独立的，这种松耦合有许多好处<span style="font-family:Calibri">:</span><span style="font-family:宋体">任务可以被创建和存储而不依赖于触发器，并且一个任务可以关联到多个触发器。另外，即使触发器已经过期，关联的任务仍然可以被重新配置，而不需要重新定义；同样，你也可以对触发器进行修改或替换而不需要重新定义关联的任务。</span></span></span></span></span></span></p>
<h3 style="margin-left:0px; margin-right:0px"><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:16pt"><span style="font-family:宋体">2.3 <span style="font-family:宋体">身份识别</span></span></span></span></span></h3>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">任务和触发器注册到调度器时都会有一个识别<span style="font-family:Calibri">KEY</span><span style="font-family:宋体">。任务和触发器都可以添加到组，因此它们的</span><span style="font-family:Calibri">KEY</span><span style="font-family:宋体">名称在同一个组内必须是唯一的，完整的</span><span style="font-family:Calibri">KEY</span><span style="font-family:宋体">名由</span><span style="font-family:Calibri">KEY</span><span style="font-family:宋体">名</span><span style="font-family:Calibri">+</span><span style="font-family:宋体">组名组成。</span></span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">到这里你可能会对触发器和调度器有一个大概的了解，在下面两章将详细介绍。</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:22pt"><span style="font-family:宋体">三、</span></span><span style="font-size:22pt"><span style="font-family:宋体">Job & JobDetail更多细节</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">虽然你的<span style="font-family:Calibri">Job</span><span style="font-family:宋体">代码知道如何执行真实的工作，但是</span><span style="font-family:Calibri">Quartz</span><span style="font-family:宋体">需要被告知</span></span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">那个任务所拥有的各种属性值，这是通过<span style="font-family:Calibri">JobDetail</span><span style="font-family:宋体">提供的。</span><span style="font-family:Calibri">JobDetail</span><span style="font-family:宋体">由</span><span style="font-family:Calibri">JobBuilder</span><span style="font-family:宋体">类构造。</span></span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">构造器每次执行<span style="font-family:Calibri">execute</span><span style="font-family:宋体">方法时，它都会先创建一个新的实例，这一行为的一个影响是</span><span style="font-family:Calibri">Job</span><span style="font-family:宋体">必须有一个无参数构造方法；另一个影响是，</span><span style="font-family:Calibri">Job</span><span style="font-family:宋体">类所定义的的状态数据是无意义的，因为它们在执行时无法被保存。</span></span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">现在你可能会问，如何向<span style="font-family:Calibri">Job</span><span style="font-family:宋体">实例提供属性</span><span style="font-family:Calibri">/</span><span style="font-family:宋体">配置？如何在执行函数中保存状态数据？答案是</span><span style="font-family:Calibri">JobDataMap</span><span style="font-family:宋体">，它是</span><span style="font-family:Calibri">JobDetail</span><span style="font-family:宋体">对象的一部分。</span></span></span></span></span></span></p>
<h3 style="margin-left:0px; margin-right:0px"><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:16pt"><span style="font-family:宋体">3.1 JobDataMap</span></span></span></span></h3>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">JobDataMap<span style="font-family:宋体">是</span><span style="font-family:Calibri">JAVA Map</span><span style="font-family:宋体">接口的一个实现，并添加了一些实现用于方便地存取基本类型数据。它能够存储任意规模的，你想要由</span><span style="font-family:Calibri">Job</span><span style="font-family:宋体">在执行时使用的数据。</span></span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">下面是一个在定义<span style="font-family:Calibri">JobDetail</span><span style="font-family:宋体">时为</span><span style="font-family:Calibri">JobDataMap</span><span style="font-family:宋体">添加数据的例子：</span></span></span></span></span></span></p>
<div class="cnblogs_code" style="border:1px solid #cccccc; margin-bottom:5px; margin-left:0px; margin-right:0px; margin-top:5px; padding:5px">
<pre>
<span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> <span style="font-size:12px !important"><span style="font-family:"Courier New" !important">//</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> define the job and tie it to our DumbJob class</span></span>
<span style="font-size:12px !important"><span style="font-family:"Courier New" !important">
JobDetail job </span></span>= newJob(DumbJob.<span style="font-size:12px !important"><span style="font-family:"Courier New" !important">class</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important">)
.withIdentity(</span></span>"myJob", "group1") <span style="font-size:12px !important"><span style="font-family:"Courier New" !important">//</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> name "myJob", group "group1"</span></span>
<span style="font-size:12px !important"><span style="font-family:"Courier New" !important">
.usingJobData(</span></span>"jobSays", "Hello World!"<span style="font-size:12px !important"><span style="font-family:"Courier New" !important">)
.usingJobData(</span></span>"myFloatValue", 3.141f<span style="font-size:12px !important"><span style="font-family:"Courier New" !important">)
.build();</span></span></span></span></span></span></span></span>
</pre>
</div>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">下面是一个任务执行时从<span style="font-family:Calibri">JobDataMap</span><span style="font-family:宋体">获取数据的例子：</span></span></span></span></span></span></p>
<div class="cnblogs_code" style="border:1px solid #cccccc; margin-bottom:5px; margin-left:0px; margin-right:0px; margin-top:5px; padding:5px">
<pre>
<span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"><span style="font-size:12px !important"><span style="font-family:"Courier New" !important">public</span></span> <span style="font-size:12px !important"><span style="font-family:"Courier New" !important">class</span></span> DumbJob <span style="font-size:12px !important"><span style="font-family:"Courier New" !important">implements</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> Job {
</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important">public</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> DumbJob() {
}
</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important">public</span></span> <span style="font-size:12px !important"><span style="font-family:"Courier New" !important">void</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> execute(JobExecutionContext context)
</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important">throws</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> JobExecutionException
{
JobKey key </span></span>=<span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> context.getJobDetail().getKey();
JobDataMap dataMap </span></span>=<span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> context.getJobDetail().getJobDataMap();
String jobSays </span></span>= dataMap.getString("jobSays"<span style="font-size:12px !important"><span style="font-family:"Courier New" !important">);
</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important">float</span></span> myFloatValue = dataMap.getFloat("myFloatValue"<span style="font-size:12px !important"><span style="font-family:"Courier New" !important">);
System.err.println(</span></span>"Instance " + key + " of DumbJob says: " + jobSays + ", and val is: " +<span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> myFloatValue);
}
}</span></span></span></span></span></span></span></span>
</pre>
</div>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">Triggers<span style="font-family:宋体">也可以与</span><span style="font-family:Calibri">JobDataMap</span><span style="font-family:宋体">进行关联。比方说，当一个任务关联到多个触发器时，你就可以为每一个不同的触发器提供不同的数据。</span></span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">任务执行期间，可以由<span style="font-family:Calibri">JobExecutionContext</span></span></span> <span style="font-size:12pt"><span style="font-family:宋体">的<span style="font-family:Calibri">getMergedJobDataMap</span><span style="font-family:宋体">方法获取一个由</span></span></span><span style="font-size:12pt"><span style="font-family:Calibri">JobDetail</span></span> <span style="font-size:12pt"><span style="font-family:宋体">和</span></span><span style="font-size:12pt"><span style="font-family:Calibri">Trigger</span></span><span style="font-size:12pt"><span style="font-family:宋体">所提供的合并体的</span></span><span style="font-size:12pt"><span style="font-family:宋体">JobDataMap</span></span><span style="font-size:12pt"><span style="font-family:宋体">，且后者的同名</span></span><span style="font-size:12pt"><span style="font-family:宋体">KEY<span style="font-family:宋体">的值会覆盖前者。当然，你也可以使用</span><span style="font-family:Calibri">c</span></span></span><span style="font-size:12pt"><span style="font-family:宋体">ontext.getJobDetail().getJobDataMap()</span></span><span style="font-size:12pt"><span style="font-family:宋体">来获取</span></span><span style="font-size:12pt"><span style="font-family:Calibri">JobDetail</span></span> <span style="font-size:12pt"><span style="font-family:宋体">的数据，</span></span><span style="font-size:12pt"><span style="font-family:宋体">使用</span></span><span style="font-size:12pt"><span style="font-family:宋体">context.getTrigger().getJobDataMap()</span></span><span style="font-size:12pt"><span style="font-family:宋体">来获取</span></span><span style="font-size:12pt"><span style="font-family:Calibri">Trigger</span></span><span style="font-size:12pt"><span style="font-family:宋体">的数据。</span></span></span></span></span></p>
<h3 style="margin-left:0px; margin-right:0px"><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:16pt"><span style="font-family:宋体">3.2 Job<span style="font-family:宋体">实例</span></span></span></span></span></h3>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">你可以只创建一个<span style="font-family:Calibri">Job</span><span style="font-family:宋体">，然后创建多个</span></span></span><span style="font-size:12pt"><span style="font-family:Calibri">JobDetail</span></span> <span style="font-size:12pt"><span style="font-family:宋体">，每一个都有自己的属性和</span></span><span style="font-size:12pt"><span style="font-family:宋体">JobDataMap<span style="font-family:宋体">，然后把它们都添加到</span></span></span><span style="font-size:12pt"><span style="font-family:宋体">调度器中，这样调度器内部就保存它的多个实例的定义。</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">比如说，你可以建立一个</span></span><span style="font-size:12pt"><span style="font-family:宋体">Job<span style="font-family:宋体">类叫做</span></span></span><span style="font-size:12pt"><span style="font-family:宋体">SalesReportJob<span style="font-family:宋体">，它会期望（通过</span></span></span><span style="font-size:12pt"><span style="font-family:宋体">JobDataMap</span></span><span style="font-size:12pt"><span style="font-family:宋体">）传递过来的参数指定了销售报告所针对的人员名称。他们可能会为这个</span></span><span style="font-size:12pt"><span style="font-family:宋体">Job<span style="font-family:宋体">创建多个</span></span></span><span style="font-size:12pt"><span style="font-family:宋体">定义，比如<span style="font-family:Calibri">SalesReportForJoe</span><span style="font-family:宋体">和</span><span style="font-family:Calibri">SalesReportForMike</span><span style="font-family:宋体">，分别指定了</span></span></span><span style="font-size:12pt"><span style="font-family:宋体">Joe<span style="font-family:宋体">和</span><span style="font-family:Calibri">Mike</span><span style="font-family:宋体">。</span></span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">当触发器激活时，与他关联的</span></span><span style="font-size:12pt"><span style="font-family:宋体">JobDetail</span></span> <span style="font-size:12pt"><span style="font-family:宋体">被加载，那么相关的</span></span><span style="font-size:12pt"><span style="font-family:宋体">Job<span style="font-family:宋体">类将被</span></span></span><span style="font-size:12pt"><span style="font-family:宋体">JobFactory</span></span> <span style="font-size:12pt"><span style="font-family:宋体">实例化。默认的<span style="font-family:Calibri">JobFactory</span></span></span> <span style="font-size:12pt"><span style="font-family:宋体">只是简单地调用<span style="font-family:Calibri">newInstance</span></span></span><span style="font-size:12pt"><span style="font-family:宋体">()<span style="font-family:宋体">方法，然后试图调用类内与</span></span></span><span style="font-size:12pt"><span style="font-family:宋体">JobDataMap<span style="font-family:宋体">的</span></span></span><span style="font-size:12pt"><span style="font-family:宋体">KEY<span style="font-family:宋体">名相匹配的</span><span style="font-family:Calibri">setter</span><span style="font-family:宋体">方法。你可能想建立自己的</span></span></span><span style="font-size:12pt"><span style="font-family:宋体">JobFactory</span></span> <span style="font-size:12pt"><span style="font-family:宋体">，以便使你应用程序的</span></span><span style="font-size:12pt"><span style="font-family:宋体">IOC<span style="font-family:宋体">或</span><span style="font-family:Calibri">DI </span></span></span><span style="font-size:12pt"><span style="font-family:宋体">container</span></span> <span style="font-size:12pt"><span style="font-family:宋体">来产生</span></span><span style="font-size:12pt"><span style="font-family:宋体">/<span style="font-family:宋体">初始化</span><span style="font-family:Calibri">Job</span><span style="font-family:宋体">实例。</span></span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">在</span></span><span style="font-size:12pt"><span style="font-family:宋体">Quartz<span style="font-family:宋体">语言中，我们将所有存储的</span><span style="font-family:Calibri">JobDetail</span></span></span> <span style="font-size:12pt"><span style="font-family:宋体">称为“<span style="font-family:Calibri">job </span><span style="font-family:宋体">定义”或者“</span><span style="font-family:Calibri">JobDetail </span><span style="font-family:宋体">实例”；将所有的执行中的任务称为“</span><span style="font-family:Calibri">job </span><span style="font-family:宋体">实例”或者“</span><span style="font-family:Calibri">job </span><span style="font-family:宋体">定义的实例”；一般情况下如果我们使用</span></span></span><span style="font-size:12pt"><span style="font-family:宋体">Job<span style="font-family:宋体">这个词我们是指一个命名的定义或</span></span></span><span style="font-size:12pt"><span style="font-family:宋体">JobDetail</span></span> <span style="font-size:12pt"><span style="font-family:宋体">。当我们描述实现了</span></span><span style="font-size:12pt"><span style="font-family:宋体">Job<span style="font-family:宋体">接口的类时，一般会使用“</span></span></span><span style="font-size:12pt"><span style="font-family:宋体">job class</span></span><span style="font-size:12pt"><span style="font-family:宋体">”这个词。</span></span></span></span></span></p>
<h3 style="margin-left:0px; margin-right:0px"><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:16pt"><span style="font-family:宋体">3.3<span style="font-family:宋体">任务状态和并发</span></span></span></span></span></h3>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">这里介绍一些关于任务状态和并发的额外的说明。有许多标注可以被添加到</span></span><span style="font-size:12pt"><span style="font-family:宋体">job class<span style="font-family:宋体">中，影响到</span><span style="font-family:Calibri">Quartz's</span></span></span> <span style="font-size:12pt"><span style="font-family:宋体">在各方面的行为。</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">@DisallowConcurrentExecution</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">这个标注添加到</span></span><span style="font-size:12pt"><span style="font-family:宋体">job class<span style="font-family:宋体">中就是告诉</span><span style="font-family:Calibri">Quartz</span><span style="font-family:宋体">，我不能被并行执行。拿前面的例子来说，如果</span><span style="font-family:Calibri">SalesReportJob</span><span style="font-family:宋体">添加了这个标注，那么在同一时间只能有一个</span><span style="font-family:Calibri">SalesReportForJoe</span><span style="font-family:宋体">的实例在执行，但是</span><span style="font-family:Calibri">SalesReportForMike</span><span style="font-family:宋体">的实例可以同时执行。这个限制是基于</span><span style="font-family:Calibri">JobDetail</span><span style="font-family:宋体">而不是</span> </span></span><span style="font-size:12pt"><span style="font-family:Calibri">job class</span></span><span style="font-size:12pt"><span style="font-family:宋体">的实例。然而它被决定（在<span style="font-family:Calibri">Quartz</span><span style="font-family:宋体">的设计中）要作用于类自身之上，因为它经常会影响到类的编写方式。</span></span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">@PersistJobDataAfterExecution</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">它告诉<span style="font-family:Calibri">Quartz</span><span style="font-family:宋体">，在成功执行完（没有抛出异常）之后要更新</span><span style="font-family:Calibri">JobDetail</span><span style="font-family:宋体">的</span><span style="font-family:Calibri">JobDataMap</span><span style="font-family:宋体">。这样下一次执行时该任务就会收到最新的数据。与</span><span style="font-family:Calibri">@DisallowConcurrentExecution</span></span></span> <span style="font-size:12pt"><span style="font-family:宋体">一样，它也作用于一个 </span></span><span style="font-size:12pt"><span style="font-family:Calibri">job definition </span></span><span style="font-size:12pt"><span style="font-family:宋体">实例，而不是<span style="font-family:Calibri">job</span><span style="font-family:宋体">类的实例。</span></span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">@PersistJobDataAfterExecution</span></span> </span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">如果使用了本标注，那么你要强烈考虑同时使用<span style="font-family:Calibri">DisallowConcurrentExecution</span></span></span> <span style="font-size:12pt"><span style="font-family:宋体">标注，以避免当同一个任务的<span style="font-family:Calibri">2</span><span style="font-family:宋体">个实例并行执行时最终保存的数据是什么样的（竞争条件下）这种冲突。</span></span></span></span></span></span></p>
<h3 style="margin-left:0px; margin-right:0px"><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:16pt"><span style="font-family:宋体">3.4<span style="font-family:宋体">任务的其他属性</span></span></span></span></span></h3>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体"><strong>持久性</strong></span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">如果一个任务不是持久的，当不再有关联的活动触发器时它将从调度器中被删除。换句话说，非持久任务的生命期取决于它的触发器。</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体"><strong>请求恢复</strong></span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">如果一个任务请求恢复，并且在执行中调度器遭到了硬关闭，那么当调度器重新启动时它将重新执行。在这种情况下，<span style="font-family:Calibri">JobExecutionContext.isRecovering()</span><span style="font-family:宋体">将返回</span><span style="font-family:Calibri">true</span><span style="font-family:宋体">。</span></span></span></span></span></span></p>
<h3 style="margin-left:0px; margin-right:0px"><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:16pt"><span style="font-family:宋体">3.5<span style="font-family:宋体">任务执行异常</span></span></span></span></span></h3>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">最后，我们要告诉你<span style="font-family:Calibri">Job.execute(..)</span><span style="font-family:宋体">的一些细节。在该方法中你只被允许抛出</span><span style="font-family:Calibri">JobExecutionException</span><span style="font-family:宋体">这一种异常（包括运行时异常）。因此，你通常要把所有代码包裹在</span><span style="font-family:Calibri">try-catch</span><span style="font-family:宋体">块中。你还需要花一点时间来查看</span><span style="font-family:Calibri">JobExecutionException</span><span style="font-family:宋体">的文档，以便于你能够向调度器发出各种指令来根据你的意愿来处理异常。</span></span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"> </span></span></span></p>
<h2 style="margin-left:0pt; margin-right:0px"><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:28px"><strong><span style="font-size:22pt"><span style="font-family:宋体">四、</span></span><span style="font-size:22pt"><span style="font-family:宋体">触发器更多细节</span></span></strong></span></span></span></h2>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">Triggers<span style="font-family:宋体">与</span><span style="font-family:Calibri">Job</span><span style="font-family:宋体">一样的易于使用，但是它包含了大量的可定制的选项。前面提到过，有不同类型的</span><span style="font-family:Calibri">Triggers</span><span style="font-family:宋体">可供你选择以满足不同的需求。</span></span></span></span></span></span></p>
<h3 style="margin-left:0px; margin-right:0px"><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:16pt"><span style="font-family:宋体">4.1 <span style="font-family:宋体">触发器通用属性</span></span></span></span></span></h3>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">除了用于标识身份的<span style="font-family:Calibri">TriggerKey</span></span></span> <span style="font-size:12pt"><span style="font-family:宋体">外，还有许多各种<span style="font-family:Calibri">Triggers</span><span style="font-family:宋体">所通用的属性，它们是在创建</span><span style="font-family:Calibri">Triggers</span><span style="font-family:宋体">定义时通过</span><span style="font-family:Calibri">TriggerBuilder</span></span></span> <span style="font-size:12pt"><span style="font-family:宋体">设置的。</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">下面列出这些通用属性：</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:Calibri">jobKey</span></span><span style="font-size:12pt"><span style="font-family:宋体">：指定了</span></span><span style="font-size:12pt"><span style="font-family:宋体">Triggers<span style="font-family:宋体">激活时将被执行的</span><span style="font-family:Calibri">job</span><span style="font-family:宋体">的身份；</span></span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:Calibri">startTime</span></span><span style="font-size:12pt"><span style="font-family:宋体">：指定了调度器何时开始作用。该值是一个</span></span><span style="font-size:12pt"><span style="font-family:Calibri">java.util.Date</span></span><span style="font-size:12pt"><span style="font-family:宋体">对象。某些类型的</span></span><span style="font-size:12pt"><span style="font-family:宋体">Triggers<span style="font-family:宋体">确实会在</span></span></span><span style="font-size:12pt"><span style="font-family:Calibri">startTime</span></span><span style="font-size:12pt"><span style="font-family:宋体">激活，而另一些</span></span><span style="font-size:12pt"><span style="font-family:宋体">Triggers<span style="font-family:宋体">仅简单地标记下调度器将来应当启动的时间。这意味着你可以存储一个</span><span style="font-family:Calibri">Trigger</span><span style="font-family:宋体">和一个“</span><span style="font-family:Calibri">1</span><span style="font-family:宋体">月的第</span><span style="font-family:Calibri">5</span><span style="font-family:宋体">天”这样的调度器，如果</span></span></span><span style="font-size:12pt"><span style="font-family:Calibri">startTime</span></span><span style="font-size:12pt"><span style="font-family:宋体">设在了<span style="font-family:Calibri">4</span><span style="font-family:宋体">月</span><span style="font-family:Calibri">1</span><span style="font-family:宋体">号，那么第一次启动时间要在几个月以后。</span></span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:Calibri">endTime</span></span><span style="font-size:12pt"><span style="font-family:宋体">：指定了</span></span><span style="font-size:12pt"><span style="font-family:宋体">Trigger<span style="font-family:宋体">的调度器在何时不再生效。换句话说，一个触发器的如果设置为“每月的第</span><span style="font-family:Calibri">5</span><span style="font-family:宋体">天”并且</span></span></span><span style="font-size:12pt"><span style="font-family:Calibri">endTime</span></span><span style="font-size:12pt"><span style="font-family:宋体">为“</span></span><span style="font-size:12pt"><span style="font-family:宋体">7<span style="font-family:宋体">月</span><span style="font-family:Calibri">1</span><span style="font-family:宋体">日</span></span></span><span style="font-size:12pt"><span style="font-family:宋体">”</span></span><span style="font-size:12pt"><span style="font-family:宋体">那么它最后一次激活应该是在<span style="font-family:Calibri">6</span><span style="font-family:宋体">月</span><span style="font-family:Calibri">5</span><span style="font-family:宋体">日。</span></span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">其它属性在以后的章节中介绍。</span></span></span></span></span></p>
<h3 style="margin-left:0px; margin-right:0px"><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:16pt"><span style="font-family:宋体">4.2 <span style="font-family:宋体">优先级</span></span></span></span></span></h3>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">有时候当你有许多触发器（或者</span></span><span style="font-size:12pt"><span style="font-family:Calibri">Quartz</span></span> <span style="font-size:12pt"><span style="font-family:宋体">线程池中的线程很少</span></span><span style="font-size:12pt"><span style="font-family:宋体">）时，</span></span><span style="font-size:12pt"><span style="font-family:Calibri">Quartz</span></span> <span style="font-size:12pt"><span style="font-family:宋体">可能没有足够的资源来同时激活所有的触发器。这时，你可能想要控制让哪一个触发器先被触发。出于这个目的，你可以设置触发器的</span></span><span style="font-size:12pt"><span style="font-family:Calibri">priority</span></span> <span style="font-size:12pt"><span style="font-family:宋体">属性。如果有</span></span><span style="font-size:12pt"><span style="font-family:宋体">N</span></span></span></span></span></p>
<p style="margin-left:10px; margin-right:10px"><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">个触发器将要同时被激活，然而</span></span><span style="font-size:12pt"><span style="font-family:Calibri">Quartz</span></span> <span style="font-size:12pt"><span style="font-family:宋体">只有</span></span><span style="font-size:12pt"><span style="font-family:宋体">Z<span style="font-family:宋体">个线程，那么只有前</span><span style="font-family:Calibri">Z</span><span style="font-family:宋体">个优先级最高的触发器将被激活。如果没有设置，优先级的默认值为</span><span style="font-family:Calibri">5</span><span style="font-family:宋体">。优先级的取值适用于所有整数，包括正数和负数。</span></span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">注意：仅当触发器将同时被激活时才会比较优先级。设定在</span></span><span style="font-size:12pt"><span style="font-family:Calibri">10:59</span></span><span style="font-size:12pt"><span style="font-family:宋体">的</span></span><span style="font-size:12pt"><span style="font-family:宋体">触发器永远比设定在</span></span><span style="font-size:12pt"><span style="font-family:Calibri">1</span></span><span style="font-size:12pt"><span style="font-family:宋体">1</span></span><span style="font-size:12pt"><span style="font-family:Calibri">:</span></span><span style="font-size:12pt"><span style="font-family:宋体">00</span></span><span style="font-size:12pt"><span style="font-family:宋体">的</span></span><span style="font-size:12pt"><span style="font-family:宋体">触发器先激活。</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">注意：如果检测到一个<span style="font-family:Calibri">job</span><span style="font-family:宋体">要求恢复，那么恢复后的优先级不变。</span></span></span></span></span></span></p>
<h3 style="margin-left:0px; margin-right:0px"><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:16pt"><span style="font-family:宋体">4.3 <span style="font-family:宋体">激活失败指令（</span></span></span><span style="font-size:16pt"><span style="font-family:Arial">Misfire Instructions</span></span><span style="font-size:16pt"><span style="font-family:宋体">）</span></span></span></span></h3>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">触发器的另一个重要属性是激活失败指令。当一个持久的触发器因为调度器被关闭或者线程池中没有可用的线程而错过了激活时间时，就会发生激活失败<span style="font-family:Calibri">(</span></span></span><span style="font-size:12pt"><span style="font-family:Calibri">Misfire</span></span><span style="font-size:12pt"><span style="font-family:宋体">)<span style="font-family:宋体">。不同类型的触发器具有不同的激活失败指令。默认情况下它们使用一个“聪明策略”指令，它具有基于触发器类型和配置的动态行为。当调度器启动时，它会搜索所有激活失败的持久触发器，然后根据各自已配置的激活失败指令来对它们进行更新。当你在项目中使用</span></span></span><span style="font-size:12pt"><span style="font-family:Calibri">Quartz</span></span><span style="font-size:12pt"><span style="font-family:宋体">时，你应当熟悉相应触发器的</span></span><span style="font-size:12pt"><span style="font-family:宋体">激活失败指令，它们在</span></span><span style="font-size:12pt"><span style="font-family:Calibri">JavaDoc</span></span><span style="font-size:12pt"><span style="font-family:宋体">中有解释。在本教程针对各种触发器的章节中有更详细的介绍。</span></span></span></span></span></p>
<h3 style="margin-left:0px; margin-right:0px"><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:16pt"><span style="font-family:宋体">4.4 </span></span><span style="font-size:16pt"><span style="font-family:宋体">日历</span></span></span></span></h3>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:Calibri">Quartz</span></span><span style="font-size:12pt"><span style="font-family:Calibri"> Calendar </span></span><span style="font-size:12pt"><span style="font-family:宋体">对象（不是</span></span><span style="font-size:12pt"><span style="font-family:Calibri">java.util.Calendar</span></span><span style="font-size:12pt"><span style="font-family:宋体">对象）可以在触发器被定义时被关联并存储到调度器。在从触发器的激活策略中排除时间块时</span></span><span style="font-size:12pt"><span style="font-family:Calibri">Calendar </span></span><span style="font-size:12pt"><span style="font-family:宋体">非常有用。比如说，你可以添加一个触发器，它在每天早上的</span></span><span style="font-size:12pt"><span style="font-family:宋体">9:30<span style="font-family:宋体">激活，然后添加一个</span></span></span><span style="font-size:12pt"><span style="font-family:Calibri">Calendar </span></span><span style="font-size:12pt"><span style="font-family:宋体">来排除掉所有的商业假日。</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:Calibri">Calendar</span></span><span style="font-size:12pt"><span style="font-family:宋体"> 可以是任何实现了</span></span><span style="font-size:12pt"><span style="font-family:Calibri">Calendar</span></span> <span style="font-size:12pt"><span style="font-family:宋体">接口的可序列化对象。</span></span><span style="font-size:12pt"><span style="font-family:Calibri">Calendar</span></span> <span style="font-size:12pt"><span style="font-family:宋体">接口如下所示：</span></span></span></span></span></p>
<div class="cnblogs_code" style="border:1px solid #cccccc; margin-bottom:5px; margin-left:0px; margin-right:0px; margin-top:5px; padding:5px">
<pre>
<span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"><span style="font-size:12px !important"><span style="font-family:"Courier New" !important">package</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> org.quartz;
</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important">public</span></span> <span style="font-size:12px !important"><span style="font-family:"Courier New" !important">interface</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> Calendar {
</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important">public</span></span> <span style="font-size:12px !important"><span style="font-family:"Courier New" !important">boolean</span></span> isTimeIncluded(<span style="font-size:12px !important"><span style="font-family:"Courier New" !important">long</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> timeStamp);
</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important">public</span></span> <span style="font-size:12px !important"><span style="font-family:"Courier New" !important">long</span></span> getNextIncludedTime(<span style="font-size:12px !important"><span style="font-family:"Courier New" !important">long</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> timeStamp);
}</span></span></span></span></span></span></span></span>
</pre>
</div>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">注意上述方法的参数类型是<span style="font-family:Calibri">long</span><span style="font-family:宋体">，就像你猜想的那样，它们是毫秒单位的时间戳。这意味着</span></span></span><span style="font-size:12pt"><span style="font-family:宋体">Calendar <span style="font-family:宋体">能够以</span></span></span><span style="font-size:12pt"><span style="font-family:宋体">毫秒的精度来排除时间块。你很可能会对排除整日感兴趣，为了方便起见，</span></span><span style="font-size:12pt"><span style="font-family:Calibri">Quartz</span></span> <span style="font-size:12pt"><span style="font-family:宋体">包含了</span></span><span style="font-size:12pt"><span style="font-family:Calibri">org.quartz.impl.HolidayCalendar</span></span><span style="font-size:12pt"><span style="font-family:宋体">，它可以实现这个。</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:Calibri">Calendars</span></span> <span style="font-size:12pt"><span style="font-family:宋体">必须被实例化并使用调度器的</span></span><span style="font-size:12pt"><span style="font-family:Calibri">addCalendar(..)</span></span> <span style="font-size:12pt"><span style="font-family:宋体">进行注册。如果你使用</span></span><span style="font-size:12pt"><span style="font-family:Calibri">HolidayCalendar</span></span><span style="font-size:12pt"><span style="font-family:宋体">，在初始化以后你必须使用</span></span> <span style="font-size:12pt"><span style="font-family:Calibri">addExcludedDate(Date date) </span></span><span style="font-size:12pt"><span style="font-family:宋体">来生成你想要排除的日期。同一个</span></span><span style="font-size:12pt"><span style="font-family:Calibri">Calendar</span></span><span style="font-size:12pt"><span style="font-family:宋体">实例可以被不同的触发器使用，就像下面这样：</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:Calibri">Calendar Example</span></span></span></span></span></p>
<div class="cnblogs_code" style="border:1px solid #cccccc; margin-bottom:5px; margin-left:0px; margin-right:0px; margin-top:5px; padding:5px">
<pre>
<span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"><span style="font-size:12px !important"><span style="font-family:"Courier New" !important">HolidayCalendar cal = <span style="font-size:12px !important"><span style="font-family:"Courier New" !important">new</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> HolidayCalendar();
cal.addExcludedDate( someDate );
cal.addExcludedDate( someOtherDate );
sched.addCalendar(</span></span>"myHolidays", cal, <span style="font-size:12px !important"><span style="font-family:"Courier New" !important">false</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important">);
Trigger t </span></span>=<span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> newTrigger()
.withIdentity(</span></span>"myTrigger"<span style="font-size:12px !important"><span style="font-family:"Courier New" !important">)
.forJob(</span></span>"myJob"<span style="font-size:12px !important"><span style="font-family:"Courier New" !important">)
.withSchedule(dailyAtHourAndMinute(</span></span>9, 30)) <span style="font-size:12px !important"><span style="font-family:"Courier New" !important">//</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> execute job daily at 9:30</span></span>
.modifiedByCalendar("myHolidays") <span style="font-size:12px !important"><span style="font-family:"Courier New" !important">//</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> but not on holidays</span></span>
<span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> .build();
</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important">//</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> .. schedule job with trigger</span></span>
<span style="font-size:12px !important"><span style="font-family:"Courier New" !important">
Trigger t2 </span></span>=<span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> newTrigger()
.withIdentity(</span></span>"myTrigger2"<span style="font-size:12px !important"><span style="font-family:"Courier New" !important">)
.forJob(</span></span>"myJob2"<span style="font-size:12px !important"><span style="font-family:"Courier New" !important">)
.withSchedule(dailyAtHourAndMinute(</span></span>11, 30)) <span style="font-size:12px !important"><span style="font-family:"Courier New" !important">//</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> execute job daily at 11:30</span></span>
.modifiedByCalendar("myHolidays") <span style="font-size:12px !important"><span style="font-family:"Courier New" !important">//</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> but not on holidays</span></span>
<span style="font-size:12px !important"><span style="font-family:"Courier New" !important">
.build();
</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important">//</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> .. schedule job with trigger2</span></span></span></span></span></span></span></span>
</pre>
</div>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">触发器的创建</span></span><span style="font-size:12pt"><span style="font-family:宋体">/<span style="font-family:宋体">构造将在后面的章节中介绍，这里你只需要记住上面的代码生成了</span><span style="font-family:Calibri">2</span><span style="font-family:宋体">个</span></span></span><span style="font-size:12pt"><span style="font-family:宋体">触发器，均在每天激活。然而，排除日期中的激活都会被跳过。</span></span></span></span></span></p>
<h2 style="margin-left:0pt; margin-right:0px"><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:28px"><strong><span style="font-size:22pt"><span style="font-family:宋体">五、</span></span><span style="font-size:22pt"><span style="font-family:宋体">SimpleTrigger</span></span></strong></span></span></span></h2>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:Calibri">SimpleTrigger</span></span> <span style="font-size:12pt"><span style="font-family:宋体">能够满足你这样的需求：你希望</span></span><span style="font-size:12pt"><span style="font-family:宋体">job<span style="font-family:宋体">在某一个特定的时间执行，或者在某刻执行后以一个指定的周期进行重复。比如说，你希望某个任务在</span><span style="font-family:Calibri">2015</span><span style="font-family:宋体">年</span><span style="font-family:Calibri">1</span><span style="font-family:宋体">月</span><span style="font-family:Calibri">13</span><span style="font-family:宋体">日早上</span><span style="font-family:Calibri">11:23:54</span><span style="font-family:宋体">执行，或者在该时间执行后每隔</span><span style="font-family:Calibri">10</span><span style="font-family:宋体">秒又重复执行</span><span style="font-family:Calibri">5</span><span style="font-family:宋体">次。</span></span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">通过上面的描述，你不难发现</span></span><span style="font-size:12pt"><span style="font-family:Calibri">SimpleTrigger</span></span> <span style="font-size:12pt"><span style="font-family:宋体">的属性应当包含：</span></span><span style="font-size:12pt"><span style="font-family:Calibri">start-time</span></span><span style="font-size:12pt"><span style="font-family:宋体">，</span></span><span style="font-size:12pt"><span style="font-family:Calibri">end-time, repeat count, repeat interval</span></span><span style="font-size:12pt"><span style="font-family:宋体">。</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:Calibri">repeat count</span></span><span style="font-size:12pt"><span style="font-family:宋体">可以是</span></span><span style="font-size:12pt"><span style="font-family:宋体">0<span style="font-family:宋体">或者</span></span></span><span style="font-size:12pt"><span style="font-family:宋体">一个正整数，或者</span></span><span style="font-size:12pt"><span style="font-family:Calibri">SimpleTrigger.REPEAT_INDEFINITELY</span></span><span style="font-size:12pt"><span style="font-family:宋体">值。</span></span><span style="font-size:12pt"><span style="font-family:Calibri">repeat interval</span></span><span style="font-size:12pt"><span style="font-family:宋体">必须是</span></span><span style="font-size:12pt"><span style="font-family:宋体">0<span style="font-family:宋体">或者</span></span></span><span style="font-size:12pt"><span style="font-family:宋体">一个正的长整型数，代表毫秒数。注意，</span></span><span style="font-size:12pt"><span style="font-family:宋体">0<span style="font-family:宋体">表示任务的重复将并行（或以调度器的管理能力近似并行）执行。</span></span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">如果你对</span></span><span style="font-size:12pt"><span style="font-family:Calibri">Quartz</span></span><span style="font-size:12pt"><span style="font-family:宋体">的</span></span><span style="font-size:12pt"><span style="font-family:Calibri">DateBuilder</span></span><span style="font-size:12pt"><span style="font-family:宋体">类还不熟悉，你会发现它对于根据</span></span><span style="font-size:12pt"><span style="font-family:Calibri">startTime</span></span><span style="font-size:12pt"><span style="font-family:Calibri"> (</span></span><span style="font-size:12pt"><span style="font-family:宋体">或</span></span><span style="font-size:12pt"><span style="font-family:Calibri"> endTime)</span></span><span style="font-size:12pt"><span style="font-family:宋体">计算触发器的激活时间非常有用。</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:Calibri">endTime</span></span><span style="font-size:12pt"><span style="font-family:宋体">属性（如果被设置）将会覆盖</span></span><span style="font-size:12pt"><span style="font-family:Calibri">repeat count</span></span><span style="font-size:12pt"><span style="font-family:宋体">属性。这很有用，如果你想让触发器每隔</span></span><span style="font-size:12pt"><span style="font-family:宋体">10<span style="font-family:宋体">秒触发一次直到给定的时间</span><span style="font-family:Calibri">--</span><span style="font-family:宋体">相对于你自己根据</span></span></span><span style="font-size:12pt"><span style="font-family:Calibri">startTime</span></span> <span style="font-size:12pt"><span style="font-family:宋体">和</span></span><span style="font-size:12pt"><span style="font-family:Calibri">endTime</span></span><span style="font-size:12pt"><span style="font-family:宋体">来计算</span></span><span style="font-size:12pt"><span style="font-family:Calibri">repeat count</span></span><span style="font-size:12pt"><span style="font-family:宋体">，你可以直接设置</span></span><span style="font-size:12pt"><span style="font-family:Calibri">endTime</span></span><span style="font-size:12pt"><span style="font-family:宋体">，然后将</span></span><span style="font-size:12pt"><span style="font-family:Calibri"> repeat count</span></span><span style="font-size:12pt"><span style="font-family:宋体">设置为</span></span><span style="font-size:12pt"><span style="font-family:Calibri">REPEAT_INDEFINITELY </span></span><span style="font-size:12pt"><span style="font-family:宋体">。</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:Calibri">SimpleTrigger</span></span> <span style="font-size:12pt"><span style="font-family:宋体">的实例通过</span></span><span style="font-size:12pt"><span style="font-family:Calibri">TriggerBuilder</span></span><span style="font-size:12pt"><span style="font-family:宋体">（包括</span></span><span style="font-size:12pt"><span style="font-family:Calibri">SimpleTrigger</span></span><span style="font-size:12pt"><span style="font-family:宋体">的主要属性）</span></span> <span style="font-size:12pt"><span style="font-family:宋体">和</span></span><span style="font-size:12pt"><span style="font-family:Calibri">SimpleScheduleBuilder</span></span> <span style="font-size:12pt"><span style="font-family:宋体">（包括</span></span><span style="font-size:12pt"><span style="font-family:Calibri">SimpleTrigger</span></span><span style="font-size:12pt"><span style="font-family:宋体">特有属性）来构建，为了以</span></span><span style="font-size:12pt"><span style="font-family:宋体">DSL<span style="font-family:宋体">风格引用以上类，使用如下的静态引用：</span></span></span></span></span></span></p>
<div class="cnblogs_code" style="border:1px solid #cccccc; margin-bottom:5px; margin-left:0px; margin-right:0px; margin-top:5px; padding:5px">
<pre>
<span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"><span style="font-size:12px !important"><span style="font-family:"Courier New" !important">import</span></span> <span style="font-size:12px !important"><span style="font-family:"Courier New" !important">static</span></span> org.quartz.TriggerBuilder.*<span style="font-size:12px !important"><span style="font-family:"Courier New" !important">;
</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important">import</span></span> <span style="font-size:12px !important"><span style="font-family:"Courier New" !important">static</span></span> org.quartz.SimpleScheduleBuilder.*<span style="font-size:12px !important"><span style="font-family:"Courier New" !important">;
</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important">import</span></span> <span style="font-size:12px !important"><span style="font-family:"Courier New" !important">static</span></span> org.quartz.DateBuilder.*:</span></span></span></span></span></span></pre>
</div>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"> </span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">下面是各种使用简单构造器来定义触发器的例子，把它们阅读完，因为每个都展示了不同的方面。</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">构造一个构造器，在指定时刻激活，没有重复：</span></span></span></span></span></p>
<div class="cnblogs_code" style="border:1px solid #cccccc; margin-bottom:5px; margin-left:0px; margin-right:0px; margin-top:5px; padding:5px">
<pre>
<span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> SimpleTrigger trigger =<span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> (SimpleTrigger) newTrigger() 
.withIdentity(</span></span>"trigger1", "group1"<span style="font-size:12px !important"><span style="font-family:"Courier New" !important">)
.startAt(myStartTime) </span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important">//</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> some Date </span></span>
.forJob("job1", "group1") <span style="font-size:12px !important"><span style="font-family:"Courier New" !important">//</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> identify job with name, group strings</span></span>
.build();</span></span></span></span></span></span></pre>
</div>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"> </span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">构造一个构造器，在指定时刻激活，并以<span style="font-family:Calibri">10</span><span style="font-family:宋体">秒为周期重复</span><span style="font-family:Calibri">10</span><span style="font-family:宋体">次：</span></span></span></span></span></span></p>
<div class="cnblogs_code" style="border:1px solid #cccccc; margin-bottom:5px; margin-left:0px; margin-right:0px; margin-top:5px; padding:5px">
<pre>
<span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> trigger =<span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> newTrigger()
.withIdentity(</span></span>"trigger3", "group1"<span style="font-size:12px !important"><span style="font-family:"Courier New" !important">)
.startAt(myTimeToStartFiring) </span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important">//</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> if a start time is not given (if this line were omitted), "now" is implied</span></span>
<span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> .withSchedule(simpleSchedule()
.withIntervalInSeconds(</span></span>10<span style="font-size:12px !important"><span style="font-family:"Courier New" !important">)
.withRepeatCount(</span></span>10)) <span style="font-size:12px !important"><span style="font-family:"Courier New" !important">//</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> note that 10 repeats will give a total of 11 firings</span></span>
.forJob(myJob) <span style="font-size:12px !important"><span style="font-family:"Courier New" !important">//</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> identify job with handle to its JobDetail itself </span></span>
.build();</span></span></span></span></span></span>
</pre>
</div>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">构造一个构造器，在<span style="font-family:Calibri">5</span><span style="font-family:宋体">分钟后激活</span><span style="font-family:Calibri">1</span><span style="font-family:宋体">次：</span></span></span></span></span></span></p>
<div class="cnblogs_code" style="border:1px solid #cccccc; margin-bottom:5px; margin-left:0px; margin-right:0px; margin-top:5px; padding:5px">
<pre>
<span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> trigger =<span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> (SimpleTrigger) newTrigger() 
.withIdentity(</span></span>"trigger5", "group1"<span style="font-size:12px !important"><span style="font-family:"Courier New" !important">)
.startAt(futureDate(</span></span>5, IntervalUnit.MINUTE)) <span style="font-size:12px !important"><span style="font-family:"Courier New" !important">//</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> use DateBuilder to create a date in the future</span></span>
.forJob(myJobKey) <span style="font-size:12px !important"><span style="font-family:"Courier New" !important">//</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> identify job with its JobKey</span></span>
.build();</span></span></span></span></span></span></pre>
</div>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"> </span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">构造一个构造器，立刻激活，并以<span style="font-family:Calibri">5</span><span style="font-family:宋体">分钟为周期重复，直到</span><span style="font-family:Calibri">22:00</span><span style="font-family:宋体">停止：</span></span></span></span></span></span></p>
<div class="cnblogs_code" style="border:1px solid #cccccc; margin-bottom:5px; margin-left:0px; margin-right:0px; margin-top:5px; padding:5px">
<pre>
<span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"><span style="font-size:12px !important"><span style="font-family:"Courier New" !important">trigger =<span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> newTrigger()
.withIdentity(</span></span>"trigger7", "group1"<span style="font-size:12px !important"><span style="font-family:"Courier New" !important">)
.withSchedule(simpleSchedule()
.withIntervalInMinutes(</span></span>5<span style="font-size:12px !important"><span style="font-family:"Courier New" !important">)
.repeatForever())
.endAt(dateOf(</span></span>22, 0, 0<span style="font-size:12px !important"><span style="font-family:"Courier New" !important">))
.build();</span></span></span></span></span></span></span></span>
</pre>
</div>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">构造一个构造器，在下一个整点激活，并以<span style="font-family:Calibri">2</span><span style="font-family:宋体">小时为周期无限重复：</span></span></span></span></span></span></p>
<div class="cnblogs_code" style="border:1px solid #cccccc; margin-bottom:5px; margin-left:0px; margin-right:0px; margin-top:5px; padding:5px">
<pre>
<span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> trigger =<span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> newTrigger()
.withIdentity(</span></span>"trigger8") <span style="font-size:12px !important"><span style="font-family:"Courier New" !important">//</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> because group is not specified, "trigger8" will be in the default group</span></span>
.startAt(evenHourDate(<span style="font-size:12px !important"><span style="font-family:"Courier New" !important">null</span></span>)) <span style="font-size:12px !important"><span style="font-family:"Courier New" !important">//</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> get the next even-hour (minutes and seconds zero ("00:00"))</span></span>
<span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> .withSchedule(simpleSchedule()
.withIntervalInHours(</span></span>2<span style="font-size:12px !important"><span style="font-family:"Courier New" !important">)
.repeatForever())
</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important">//</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> note that in this example, 'forJob(..)' is not called 
</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important">//</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> - which is valid if the trigger is passed to the scheduler along with the job </span></span>
<span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> .build();
scheduler.scheduleJob(trigger, job);</span></span></span></span></span></span></span></span></pre>
</div>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"> </span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">花点时间看看</span></span><span style="font-size:12pt"><span style="font-family:Calibri">TriggerBuilder</span></span><span style="font-size:12pt"><span style="font-family:宋体">和</span></span><span style="font-size:12pt"><span style="font-family:Calibri">SimpleScheduleBuilder</span></span><span style="font-size:12pt"><span style="font-family:宋体">所有可以函数，这样能够熟悉以上例子没有介绍到的可能会对你由于的选项。</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">注意，</span></span><span style="font-size:12pt"><span style="font-family:Calibri">TriggerBuilder</span></span><span style="font-size:12pt"><span style="font-family:宋体">（以及</span></span><span style="font-size:12pt"><span style="font-family:Calibri">Quartz</span></span><span style="font-size:12pt"><span style="font-family:宋体">的其它</span></span><span style="font-size:12pt"><span style="font-family:Calibri">builder</span></span><span style="font-size:12pt"><span style="font-family:宋体">）通常会为你没有明确指定的属性选择一个合理的值。比如：如果你没有调用</span></span><span style="font-size:12pt"><span style="font-family:Calibri">*withIdentity(..)*</span></span><span style="font-size:12pt"><span style="font-family:宋体">方法，那么</span></span><span style="font-size:12pt"><span style="font-family:Calibri">TriggerBuilder </span></span><span style="font-size:12pt"><span style="font-family:宋体">将为你的触发器生成一个随机的名字；如果你没有调用</span></span><span style="font-size:12pt"><span style="font-family:Calibri"> *startAt(..)*</span></span><span style="font-size:12pt"><span style="font-family:宋体">方法，那么当前时间（立刻激活）将被赋值。</span></span></span></span></span></p>
<h3 style="margin-left:0px; margin-right:0px"><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:16pt"><span style="font-family:宋体">5.1 </span></span><span style="font-size:16pt"><span style="font-family:Arial">SimpleTrigger </span></span><span style="font-size:16pt"><span style="font-family:宋体">激活失败指令</span></span></span></span></h3>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:Calibri">SimpleTrigger </span></span><span style="font-size:12pt"><span style="font-family:宋体">有很多指令可用于通知</span></span><span style="font-size:12pt"><span style="font-family:Calibri">Quartz</span></span> <span style="font-size:12pt"><span style="font-family:宋体">当发生激活失败时应如何处理（激活失败已经在第</span></span><span style="font-size:12pt"><span style="font-family:宋体">4<span style="font-family:宋体">节中介绍</span></span></span><span style="font-size:12pt"><span style="font-family:宋体">）。这些指令被定义为</span></span><span style="font-size:12pt"><span style="font-family:Calibri">SimpleTrigger</span></span><span style="font-size:12pt"><span style="font-family:宋体">类的常数（</span></span><span style="font-size:12pt"><span style="font-family:宋体">JavaDoc<span style="font-family:宋体">描述了它们的行为</span></span></span><span style="font-size:12pt"><span style="font-family:宋体">）。这些指令包括：</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">MISFIRE_INSTRUCTION_IGNORE_MISFIRE_POLICY</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">MISFIRE_INSTRUCTION_FIRE_NOW</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">MISFIRE_INSTRUCTION_RESCHEDULE_NOW_WITH_EXISTING_REPEAT_COUNT</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">MISFIRE_INSTRUCTION_RESCHEDULE_NOW_WITH_REMAINING_REPEAT_COUNT</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">MISFIRE_INSTRUCTION_RESCHEDULE_NEXT_WITH_REMAINING_COUNT</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">MISFIRE_INSTRUCTION_RESCHEDULE_NEXT_WITH_EXISTING_COUNT</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">前面提到过所有触发器都有一个</span></span><span style="font-size:12pt"><span style="font-family:Calibri">Trigger.MISFIRE_INSTRUCTION_SMART_POLICY</span></span><span style="font-size:12pt"><span style="font-family:宋体">指令，这是所有类型的触发器的默认指令。</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">如果使用了“聪明策略”，</span></span><span style="font-size:12pt"><span style="font-family:Calibri">SimpleTrigger</span></span> <span style="font-size:12pt"><span style="font-family:宋体">将根据配置和触发器实例的状态从它的指令中动态选择。</span></span><span style="font-size:12pt"><span style="font-family:宋体">JavaDoc<span style="font-family:宋体">关于</span></span></span><a href="http://www.cnblogs.com/C:/Users/lenovo/Desktop/quartz-2.2.2-distribution/quartz-2.2.2/javadoc/org/quartz/impl/triggers/SimpleTriggerImpl.html" style="color:#1a8bc8; text-decoration:none" title="class in org.quartz.impl.triggers"><span style="font-size:12pt"><span style="font-family:Calibri">SimpleTriggerImpl</span></span></a> <span style="font-size:12pt"><span style="font-family:Calibri">.updateAfterMisfire() </span></span><span style="font-size:12pt"><span style="font-family:宋体">方法的介绍解释了这一动态行为的细节，具体如下。</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:Calibri">Repeat Count</span></span><span style="font-size:12pt"><span style="font-family:宋体">=0<span style="font-family:宋体">：</span></span></span><span style="font-size:12pt"><span style="font-family:Calibri">instruction</span></span> <span style="font-size:12pt"><span style="font-family:宋体">selected = </span></span><span style="font-size:12pt"><span style="font-family:Calibri">MISFIRE_INSTRUCTION_FIRE_NOW</span></span><span style="font-size:12pt"><span style="font-family:宋体">;</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:Calibri">Repeat Count</span></span><span style="font-size:12pt"><span style="font-family:宋体">=</span></span><span style="font-size:12pt"><span style="font-family:Calibri">REPEAT_INDEFINITELY</span></span><span style="font-size:12pt"><span style="font-family:宋体">：</span></span><span style="font-size:12pt"><span style="font-family:Calibri">instruction</span></span> <span style="font-size:12pt"><span style="font-family:宋体">selected = </span></span><span style="font-size:12pt"><span style="font-family:Calibri">MISFIRE_INSTRUCTION_RESCHEDULE_NEXT_WITH_REMAINING_COUNT</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:Calibri">Repeat Count</span></span><span style="font-size:12pt"><span style="font-family:宋体">>0<span style="font-family:宋体">：</span></span></span><span style="font-size:12pt"><span style="font-family:Calibri">instruction</span></span> <span style="font-size:12pt"><span style="font-family:宋体">selected = </span></span><span style="font-size:12pt"><span style="font-family:Calibri">MISFIRE_INSTRUCTION_RESCHEDULE_NOW_WITH_EXISTING_REPEAT_COUNT</span></span></span></span></span></p>
<h2 style="margin-left:0pt; margin-right:0px"><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:28px"><strong><span style="font-size:22pt"><span style="font-family:宋体">六、</span></span><span style="font-size:22pt"><span style="font-family:宋体">CronTriggers</span></span></strong></span></span></span></h2>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">如果你需要的调度器的任务循环是基于类似于日历那种，而不是以一个明确的周期为依据，那么<span style="font-family:Calibri">CronTriggers</span><span style="font-family:宋体">往往比</span><span style="font-family:Calibri">SimpleTrigger</span><span style="font-family:宋体">更有用。</span></span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">有了</span></span><span style="font-size:12pt"><span style="font-family:Calibri">CronTrigger</span></span><span style="font-size:12pt"><span style="font-family:宋体">，你可以指定“每个周五下午”或者“每个工作日早上</span></span><span style="font-size:12pt"><span style="font-family:Calibri">9:30</span></span><span style="font-size:12pt"><span style="font-family:宋体">”，甚至是“一月的每个周一，周二和周五早上</span></span><span style="font-size:12pt"><span style="font-family:宋体">9:00--10:00<span style="font-family:宋体">之间每隔</span><span style="font-family:Calibri">5</span><span style="font-family:宋体">分钟</span><span style="font-family:Calibri">1</span><span style="font-family:宋体">次</span></span></span><span style="font-size:12pt"><span style="font-family:宋体">”这样的调度器。即使如此，与</span></span><span style="font-size:12pt"><span style="font-family:Calibri">SimpleTrigger</span></span><span style="font-size:12pt"><span style="font-family:宋体">一样，</span></span><span style="font-size:12pt"><span style="font-family:Calibri">CronTrigger</span></span><span style="font-size:12pt"><span style="font-family:宋体">也有一个</span></span><span style="font-size:12pt"><span style="font-family:宋体">startTime<span style="font-family:宋体">和一个（可选的）</span><span style="font-family:Calibri">endTime</span><span style="font-family:宋体">，指定了调度器在应该在何时启动和停止。</span></span></span></span></span></span></p>
<h3 style="margin-left:0px; margin-right:0px"><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:16pt"><span style="font-family:宋体">6.1 </span></span><span style="font-size:16pt"><span style="font-family:Arial">Cron</span></span><span style="font-size:16pt"><span style="font-family:宋体">表达式</span></span></span></span></h3>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:Calibri">Cron</span></span><span style="font-size:12pt"><span style="font-family:宋体">表达式</span></span><span style="font-size:12pt"><span style="font-family:宋体">(</span></span><span style="font-size:12pt"><span style="font-family:Calibri">Cron Expressions</span></span><span style="font-size:12pt"><span style="font-family:宋体">)</span></span><span style="font-size:12pt"><span style="font-family:宋体">用于配置</span></span><span style="font-size:12pt"><span style="font-family:Calibri">CronTrigger</span></span><span style="font-size:12pt"><span style="font-family:宋体">实例。它是由</span></span><span style="font-size:12pt"><span style="font-family:宋体">7<span style="font-family:宋体">个子表达式组成的字符串，指定了调度器的每一个细节。这些子表达式由空格分隔，分别代表以下内容：</span></span></span></span></span></span></p>
<p style="margin-left:10px; margin-right:10px"><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:Wingdings">l </span></span><span style="font-size:12pt"><span style="font-family:宋体">秒</span></span></span></span></span></p>
<p style="margin-left:10px; margin-right:10px"><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:Wingdings">l </span></span><span style="font-size:12pt"><span style="font-family:宋体">分</span></span></span></span></span></p>
<p style="margin-left:10px; margin-right:10px"><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:Wingdings">l </span></span><span style="font-size:12pt"><span style="font-family:宋体">时</span></span></span></span></span></p>
<p style="margin-left:10px; margin-right:10px"><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:Wingdings">l </span></span><span style="font-size:12pt"><span style="font-family:宋体">日</span></span></span></span></span></p>
<p style="margin-left:10px; margin-right:10px"><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:Wingdings">l </span></span><span style="font-size:12pt"><span style="font-family:宋体">月</span></span></span></span></span></p>
<p style="margin-left:10px; margin-right:10px"><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:Wingdings">l </span></span><span style="font-size:12pt"><span style="font-family:宋体">星期</span></span></span></span></span></p>
<p style="margin-left:10px; margin-right:10px"><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:Wingdings">l </span></span><span style="font-size:12pt"><span style="font-family:宋体">年（可选）</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">以</span></span> <span style="font-size:12pt"><span style="font-family:Calibri">"0 0 12 ? * WED"</span></span><span style="font-size:12pt"><span style="font-family:宋体">为例，它表示每月每个周二的</span></span><span style="font-size:12pt"><span style="font-family:宋体">12<span style="font-family:宋体">点。每个子表达式都可以包含范围与</span><span style="font-family:Calibri">/</span><span style="font-family:宋体">或列表。比如，前例中的</span></span></span><span style="font-size:12pt"><span style="font-family:Calibri">”</span></span><span style="font-size:12pt"><span style="font-family:Calibri">WED</span></span><span style="font-size:12pt"><span style="font-family:Calibri">”</span></span><span style="font-size:12pt"><span style="font-family:宋体">部分可以替换为</span></span> <span style="font-size:12pt"><span style="font-family:Calibri">"MON-FRI", "MON,WED,FRI", </span></span><span style="font-size:12pt"><span style="font-family:宋体">甚至</span></span><span style="font-size:12pt"><span style="font-family:Calibri">"MON-WED,SAT"</span></span><span style="font-size:12pt"><span style="font-family:宋体">。</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">掩码<span style="font-family:Calibri">(</span></span></span><span style="font-size:12pt"><span style="font-family:Calibri">“</span></span><span style="font-size:12pt"><span style="font-family:宋体">*</span></span><span style="font-size:12pt"><span style="font-family:Calibri">”</span></span><span style="font-size:12pt"><span style="font-family:宋体">)<span style="font-family:宋体">代表任何允许的值。因此，“月”区域的</span></span></span><span style="font-size:12pt"><span style="font-family:Calibri">“</span></span><span style="font-size:12pt"><span style="font-family:宋体">*</span></span><span style="font-size:12pt"><span style="font-family:Calibri">”</span></span><span style="font-size:12pt"><span style="font-family:宋体">表示每个月；“星期”区域的</span></span><span style="font-size:12pt"><span style="font-family:Calibri">“</span></span><span style="font-size:12pt"><span style="font-family:宋体">*</span></span><span style="font-size:12pt"><span style="font-family:Calibri">”</span></span><span style="font-size:12pt"><span style="font-family:宋体">表示一周的每一天。</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">所有区域都有一些可分配的有效值，这些值都是非常显而易见的。</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"> <span style="font-size:12pt"><span style="font-family:宋体">斜杠</span></span><span style="font-size:12pt"><span style="font-family:宋体">(</span></span><span style="font-size:12pt"><span style="font-family:Calibri">'/'</span></span><span style="font-size:12pt"><span style="font-family:宋体">)<span style="font-family:宋体">表示值的增加。比如说，如果在“分钟”区域填写</span></span></span><span style="font-size:12pt"><span style="font-family:Calibri">'0/15'</span></span><span style="font-size:12pt"><span style="font-family:宋体">，它表示从</span></span><span style="font-size:12pt"><span style="font-family:宋体">0<span style="font-family:宋体">分开始并每隔</span><span style="font-family:Calibri">15</span><span style="font-family:宋体">分钟。</span></span></span> <span style="font-size:12pt"><span style="font-family:Calibri">'3/20'</span></span><span style="font-size:12pt"><span style="font-family:宋体">表示从</span></span><span style="font-size:12pt"><span style="font-family:宋体">3<span style="font-family:宋体">分开始并</span></span></span> <span style="font-size:12pt"><span style="font-family:宋体">每隔<span style="font-family:Calibri">20</span><span style="font-family:宋体">分钟，即</span><span style="font-family:Calibri">03</span><span style="font-family:宋体">，</span><span style="font-family:Calibri">23,43</span><span style="font-family:宋体">分。 "/35"等同于"0/35"。注意，原文档说，“</span></span></span> <span style="font-size:12pt"><span style="font-family:Calibri">"/35"</span></span><span style="font-size:12pt"><span style="font-family:宋体">不代表每隔</span></span><span style="font-size:12pt"><span style="font-family:宋体">35<span style="font-family:宋体">分钟，而是每个小时的第</span><span style="font-family:Calibri">35</span><span style="font-family:宋体">分，及等同于</span></span></span><span style="font-size:12pt"><span style="font-family:Calibri">'0,35'</span></span><span style="font-size:12pt"><span style="font-family:宋体">。”经测试发现，该说法不正确。应等同于"0/35"。</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">问号</span></span> <span style="font-size:12pt"><span style="font-family:Calibri">'?' </span></span><span style="font-size:12pt"><span style="font-family:宋体">可被“日”和“星期”域使用。它表示没有指定值。当你指定了这俩域的其中一个时，另一个域就可以使用问号。</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"> <span style="font-size:12pt"><span style="font-family:宋体">字母</span></span><span style="font-size:12pt"><span style="font-family:Calibri">'L' </span></span><span style="font-size:12pt"><span style="font-family:宋体">可被“日”和“星期”域使用。它是</span></span><span style="font-size:12pt"><span style="font-family:Calibri">”</span></span><span style="font-size:12pt"><span style="font-family:宋体">last</span></span><span style="font-size:12pt"><span style="font-family:Calibri">”</span></span><span style="font-size:12pt"><span style="font-family:宋体">的缩写，但是在这两个域中有着不同的含义。比如，</span></span><span style="font-size:12pt"><span style="font-family:宋体">“日”区域中的</span></span><span style="font-size:12pt"><span style="font-family:Calibri">"L"</span></span><span style="font-size:12pt"><span style="font-family:宋体">表示本月的最后一天，比如</span></span><span style="font-size:12pt"><span style="font-family:宋体">1<span style="font-family:宋体">月的</span><span style="font-family:Calibri">31</span><span style="font-family:宋体">日或者平年</span><span style="font-family:Calibri">2</span><span style="font-family:宋体">月的</span><span style="font-family:Calibri">28</span><span style="font-family:宋体">日。如果只有它自己用在</span></span></span><span style="font-size:12pt"><span style="font-family:宋体">“星期”域中，它表示</span></span><span style="font-size:12pt"><span style="font-family:宋体">7<span style="font-family:宋体">或者星期六。如果在</span></span></span><span style="font-size:12pt"><span style="font-family:宋体">“星期”域跟在某个星期的后面，那它表示</span></span><span style="font-size:12pt"><span style="font-family:宋体">本月的上一个<span style="font-family:Calibri">xx</span><span style="font-family:宋体">日。比如，</span></span></span><span style="font-size:12pt"><span style="font-family:Calibri">"6L" </span></span><span style="font-size:12pt"><span style="font-family:宋体">或者</span></span><span style="font-size:12pt"><span style="font-family:Calibri"> "FRIL"</span></span><span style="font-size:12pt"><span style="font-family:宋体">都表示本月上一个星期五。你也可以为本月的最后一天指定个偏移量，比如</span></span> <span style="font-size:12pt"><span style="font-family:Calibri">"L-3"</span></span><span style="font-size:12pt"><span style="font-family:宋体">表示本月的倒数第</span></span><span style="font-size:12pt"><span style="font-family:宋体">3<span style="font-family:宋体">天。当使用</span><span style="font-family:Calibri">L</span><span style="font-family:宋体">选项时，非常重要的一点是不要同时指定列表或范围，否则你会得到混乱的结果。</span></span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">字母</span></span><span style="font-size:12pt"><span style="font-family:Calibri">'W'</span></span><span style="font-size:12pt"><span style="font-family:宋体">用于指定距离某天最近的工作日（周一到周五）。比如，你在“日”区域使用了</span></span><span style="font-size:12pt"><span style="font-family:Calibri">"15W"</span></span><span style="font-size:12pt"><span style="font-family:宋体">，那它表示距离本月</span></span><span style="font-size:12pt"><span style="font-family:宋体">15<span style="font-family:宋体">号最近的工作日。</span></span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">井号</span></span> <span style="font-size:12pt"><span style="font-family:Calibri">'#' </span></span><span style="font-size:12pt"><span style="font-family:宋体">用于本月第</span></span><span style="font-size:12pt"><span style="font-family:宋体">xx<span style="font-family:宋体">个</span></span></span><span style="font-size:12pt"><span style="font-family:宋体">工作日。比如，“星期”域的</span></span><span style="font-size:12pt"><span style="font-family:Calibri">"6#3" or "FRI#3"</span></span><span style="font-size:12pt"><span style="font-family:宋体">表示本月第</span></span><span style="font-size:12pt"><span style="font-family:宋体">3<span style="font-family:宋体">个星期五。</span></span></span></span></span></span></p>
<h3 style="margin-left:0px; margin-right:0px"><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:16pt"><span style="font-family:宋体">6.2 </span></span><span style="font-size:16pt"><span style="font-family:Arial">Cron</span></span><span style="font-size:16pt"><span style="font-family:宋体">表达式实例</span></span></span></span></h3>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">下面是一些表达式实例及其含义。你可以在</span></span><span style="font-size:12pt"><span style="font-family:Calibri">JavaDoc</span></span><span style="font-size:12pt"><span style="font-family:宋体">中</span></span><span style="font-size:12pt"><span style="font-family:Calibri">org.quartz.CronExpression</span></span><span style="font-size:12pt"><span style="font-family:宋体">部分找到更多内容。</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:Calibri">CronTrigger Example 1</span></span><span style="font-size:12pt"><span style="font-family:宋体">：</span></span><span style="font-size:12pt"><span style="font-family:Calibri">"0 0/5 * * * ?"</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">每天，从<span style="font-family:Calibri">00</span><span style="font-family:宋体">分开始每隔</span><span style="font-family:Calibri">5</span><span style="font-family:宋体">分钟；</span></span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">CronTrigger Example 2<span style="font-family:宋体">：</span></span></span><span style="font-size:12pt"><span style="font-family:Calibri">"10 0/5 * * * ?"</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">每天，从<span style="font-family:Calibri">00</span><span style="font-family:宋体">分开始每隔</span><span style="font-family:Calibri">5</span><span style="font-family:宋体">分钟，在该分钟的</span><span style="font-family:Calibri">10</span><span style="font-family:宋体">秒；</span></span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">CronTrigger Example 3<span style="font-family:宋体">：</span></span></span><span style="font-size:12pt"><span style="font-family:Calibri">"0 30 10-13 ? * WED,FRI"</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">每月星期二和星期五上午，<span style="font-family:Calibri">10</span><span style="font-family:宋体">点至</span><span style="font-family:Calibri">13</span><span style="font-family:宋体">点，期间的每个半点；</span></span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">CronTrigger Example 4<span style="font-family:宋体">：</span></span></span><span style="font-size:12pt"><span style="font-family:Calibri">"0 0/30 8-9 5,20 * ?"</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">每月<span style="font-family:Calibri">5</span><span style="font-family:宋体">号和</span><span style="font-family:Calibri">20</span><span style="font-family:宋体">号，早上</span><span style="font-family:Calibri">8</span><span style="font-family:宋体">点至</span><span style="font-family:Calibri">9</span><span style="font-family:宋体">点，期间的每个半点；注意不包含</span><span style="font-family:Calibri">10:00</span><span style="font-family:宋体">。</span></span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">注意，有一些调度要求用一个触发器来表达可能过于复杂，比如“早上<span style="font-family:Calibri">9</span><span style="font-family:宋体">点至</span><span style="font-family:Calibri">10</span><span style="font-family:宋体">点每隔</span><span style="font-family:Calibri">5</span><span style="font-family:宋体">分钟，以及早上</span><span style="font-family:Calibri">10</span><span style="font-family:宋体">点至</span><span style="font-family:Calibri">13</span><span style="font-family:宋体">点每隔</span><span style="font-family:Calibri">20</span><span style="font-family:宋体">分钟”。这时你可以构造</span><span style="font-family:Calibri">2</span><span style="font-family:宋体">个触发器，然后绑定到同一个任务上。</span></span></span></span></span></span></p>
<h3 style="margin-left:0px; margin-right:0px"><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:16pt"><span style="font-family:宋体">6.3 <span style="font-family:宋体">构造</span></span></span><span style="font-size:16pt"><span style="font-family:Arial">CronTrigger</span></span></span></span></h3>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:Calibri">CronTrigger</span></span> <span style="font-size:12pt"><span style="font-family:宋体">的实例通过</span></span><span style="font-size:12pt"><span style="font-family:Calibri">TriggerBuilder</span></span><span style="font-size:12pt"><span style="font-family:宋体">（包括</span></span><span style="font-size:12pt"><span style="font-family:Calibri">CronTrigger</span></span> <span style="font-size:12pt"><span style="font-family:宋体">的主要属性）</span></span> <span style="font-size:12pt"><span style="font-family:宋体">和</span></span><span style="font-size:12pt"><span style="font-family:宋体">Cron</span></span><span style="font-size:12pt"><span style="font-family:Calibri">ScheduleBuilder</span></span> <span style="font-size:12pt"><span style="font-family:宋体">（包括</span></span><span style="font-size:12pt"><span style="font-family:Calibri">CronTrigger</span></span> <span style="font-size:12pt"><span style="font-family:宋体">特有属性）来构建，为了以</span></span><span style="font-size:12pt"><span style="font-family:宋体">DSL<span style="font-family:宋体">风格引用以上类，使用如下的静态引用：</span></span></span></span></span></span></p>
<div class="cnblogs_code" style="border:1px solid #cccccc; margin-bottom:5px; margin-left:0px; margin-right:0px; margin-top:5px; padding:5px">
<pre>
<span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"><span style="font-size:12px !important"><span style="font-family:"Courier New" !important">import</span></span> <span style="font-size:12px !important"><span style="font-family:"Courier New" !important">static</span></span> org.quartz.TriggerBuilder.*<span style="font-size:12px !important"><span style="font-family:"Courier New" !important">;
</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important">import</span></span> <span style="font-size:12px !important"><span style="font-family:"Courier New" !important">static</span></span> org.quartz.CronScheduleBuilder.*<span style="font-size:12px !important"><span style="font-family:"Courier New" !important">;
</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important">import</span></span> <span style="font-size:12px !important"><span style="font-family:"Courier New" !important">static</span></span> org.quartz.DateBuilder.*:</span></span></span></span></span></span>
</pre>
</div>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">构造一个每天上午<span style="font-family:Calibri">8</span><span style="font-family:宋体">点到下午五点之间每隔</span><span style="font-family:Calibri">2</span><span style="font-family:宋体">分钟的</span></span></span><span style="font-size:12pt"><span style="font-family:Calibri">CronTrigger</span></span> <span style="font-size:12pt"><span style="font-family:宋体">：</span></span></span></span></span></p>
<div class="cnblogs_code" style="border:1px solid #cccccc; margin-bottom:5px; margin-left:0px; margin-right:0px; margin-top:5px; padding:5px">
<pre>
<span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"><span style="font-size:12px !important"><span style="font-family:"Courier New" !important">trigger =<span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> newTrigger()
.withIdentity(</span></span>"trigger3", "group1"<span style="font-size:12px !important"><span style="font-family:"Courier New" !important">)
.withSchedule(cronSchedule(</span></span>"0 0/2 8-17 * * ?"<span style="font-size:12px !important"><span style="font-family:"Courier New" !important">))
.forJob(</span></span>"myJob", "group1"<span style="font-size:12px !important"><span style="font-family:"Courier New" !important">)
.build();</span></span></span></span></span></span></span></span>
</pre>
</div>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">构造一个每天上午</span></span><span style="font-size:12pt"><span style="font-family:Calibri">10:42</span></span><span style="font-size:12pt"><span style="font-family:宋体">触发</span></span><span style="font-size:12pt"><span style="font-family:宋体">的</span></span><span style="font-size:12pt"><span style="font-family:Calibri">CronTrigger</span></span> <span style="font-size:12pt"><span style="font-family:宋体">：</span></span></span></span></span></p>
<div class="cnblogs_code" style="border:1px solid #cccccc; margin-bottom:5px; margin-left:0px; margin-right:0px; margin-top:5px; padding:5px">
<pre>
<span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> trigger =<span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> newTrigger()
.withIdentity(</span></span>"trigger3", "group1"<span style="font-size:12px !important"><span style="font-family:"Courier New" !important">)
.withSchedule(dailyAtHourAndMinute(</span></span>10, 42<span style="font-size:12px !important"><span style="font-family:"Courier New" !important">))
.forJob(myJobKey)
.build();</span></span></span></span></span></span></span></span>
</pre>
</div>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体"> 或者</span></span></span></span></span></p>
<div class="cnblogs_code" style="border:1px solid #cccccc; margin-bottom:5px; margin-left:0px; margin-right:0px; margin-top:5px; padding:5px">
<pre>
<span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> trigger =<span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> newTrigger()
.withIdentity(</span></span>"trigger3", "group1"<span style="font-size:12px !important"><span style="font-family:"Courier New" !important">)
.withSchedule(cronSchedule(</span></span>"0 42 10 * * ?"<span style="font-size:12px !important"><span style="font-family:"Courier New" !important">))
.forJob(myJobKey)
.build();</span></span></span></span></span></span></span></span>
</pre>
</div>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">构造一个非系统默认时区内每周二上午</span></span><span style="font-size:12pt"><span style="font-family:Calibri">10:42</span></span><span style="font-size:12pt"><span style="font-family:宋体">触发</span></span><span style="font-size:12pt"><span style="font-family:宋体">的</span></span><span style="font-size:12pt"><span style="font-family:Calibri">CronTrigger</span></span> <span style="font-size:12pt"><span style="font-family:宋体">：</span></span></span></span></span></p>
<div class="cnblogs_code" style="border:1px solid #cccccc; margin-bottom:5px; margin-left:0px; margin-right:0px; margin-top:5px; padding:5px">
<pre>
<span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"><span style="font-size:12px !important"><span style="font-family:"Courier New" !important">trigger =<span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> newTrigger()
.withIdentity(</span></span>"trigger3", "group1"<span style="font-size:12px !important"><span style="font-family:"Courier New" !important">)
.withSchedule(weeklyOnDayAndHourAndMinute(DateBuilder.WEDNESDAY, </span></span>10, 42<span style="font-size:12px !important"><span style="font-family:"Courier New" !important">))
.forJob(myJobKey)
.inTimeZone(TimeZone.getTimeZone(</span></span>"America/Los_Angeles"<span style="font-size:12px !important"><span style="font-family:"Courier New" !important">))
.build();</span></span></span></span></span></span></span></span>
</pre>
</div>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">或者</span></span></span></span></span></p>
<div class="cnblogs_code" style="border:1px solid #cccccc; margin-bottom:5px; margin-left:0px; margin-right:0px; margin-top:5px; padding:5px">
<pre>
<span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> trigger =<span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> newTrigger()
.withIdentity(</span></span>"trigger3", "group1"<span style="font-size:12px !important"><span style="font-family:"Courier New" !important">)
.withSchedule(cronSchedule(</span></span>"0 42 10 ? * WED"<span style="font-size:12px !important"><span style="font-family:"Courier New" !important">))
.inTimeZone(TimeZone.getTimeZone(</span></span>"America/Los_Angeles"<span style="font-size:12px !important"><span style="font-family:"Courier New" !important">))
.forJob(myJobKey)
.build();</span></span></span></span></span></span></span></span>
</pre>
</div>
<h3 style="margin-left:0px; margin-right:0px"><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:16pt"><span style="font-family:宋体">6.4 </span></span><span style="font-size:16pt"><span style="font-family:Arial">CronTrigger</span></span><span style="font-size:16pt"><span style="font-family:宋体">激活失败指令</span></span></span></span></h3>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">下列实例用于</span></span><span style="font-size:12pt"><span style="font-family:Calibri">CronTrigger</span></span><span style="font-size:12pt"><span style="font-family:宋体">发生激活失败</span></span><span style="font-size:12pt"><span style="font-family:宋体">(</span></span><span style="font-size:12pt"><span style="font-family:Calibri">misfire</span></span><span style="font-size:12pt"><span style="font-family:宋体">)<span style="font-family:宋体">时通知</span></span></span><span style="font-size:12pt"><span style="font-family:Calibri">Quartz</span></span> <span style="font-size:12pt"><span style="font-family:宋体">如何处理。这些指令被定义为</span></span><span style="font-size:12pt"><span style="font-family:Calibri">CronTrigger</span></span><span style="font-size:12pt"><span style="font-family:宋体">类内部的常量，包括：</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">MISFIRE_INSTRUCTION_IGNORE_MISFIRE_POLICY</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">MISFIRE_INSTRUCTION_DO_NOTHING</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">MISFIRE_INSTRUCTION_FIRE_NOW</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">如前所述，</span></span><span style="font-size:12pt"><span style="font-family:Calibri">Trigger.MISFIRE_INSTRUCTION_SMART_POLICY</span></span><span style="font-size:12pt"><span style="font-family:宋体">依然是</span></span><span style="font-size:12pt"><span style="font-family:Calibri">CronTrigger</span></span><span style="font-size:12pt"><span style="font-family:宋体">的默认指令，然而它默认选择</span></span><span style="font-size:12pt"><span style="font-family:Calibri">MISFIRE_INSTRUCTION_FIRE_NOW</span></span><span style="font-size:12pt"><span style="font-family:宋体">作为执行策略。更详细的解释请查看</span></span><span style="font-size:12pt"><span style="font-family:宋体">CronTriggerImpl</span></span><span style="font-size:12pt"><span style="font-family:宋体">类的</span></span><span style="font-size:12pt"><span style="font-family:Calibri">updateAfterMisfire</span></span><span style="font-size:12pt"><span style="font-family:宋体">函数。</span></span></span></span></span></p>
<p style="margin-left:10px; margin-right:10px"><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:Calibri">CronTrigger</span></span><span style="font-size:12pt"><span style="font-family:宋体">激活失败指令在构造</span></span><span style="font-size:12pt"><span style="font-family:Calibri">CronTrigger</span></span><span style="font-size:12pt"><span style="font-family:宋体">实例时指定。</span></span></span></span></span></p>
<h2 style="margin-left:0pt; margin-right:0px"><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:28px"><strong><span style="font-size:22pt"><span style="font-family:宋体">七、</span></span><span style="font-size:22pt"><span style="font-family:宋体">触发器监听器与任务监听器</span></span></strong></span></span></span></h2>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">触发器监听器<span style="font-family:Calibri">(</span></span></span><span style="font-size:12pt"><span style="font-family:Calibri">TriggerListeners</span></span><span style="font-size:12pt"><span style="font-family:宋体">)</span></span><span style="font-size:12pt"><span style="font-family:宋体">和</span></span><span style="font-size:12pt"><span style="font-family:宋体">任务监听器<span style="font-family:Calibri">(</span></span></span><span style="font-size:12pt"><span style="font-family:Calibri">JobListeners </span></span><span style="font-size:12pt"><span style="font-family:宋体">)</span></span><span style="font-size:12pt"><span style="font-family:宋体">分别接收关于</span></span><span style="font-size:12pt"><span style="font-family:宋体">Trigger<span style="font-family:宋体">和</span><span style="font-family:Calibri">Job</span><span style="font-family:宋体">的事件。触发器相关的事件包括：触发器激活、激活失败以及激活完成（执行的任务运行完毕）。</span></span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:Calibri">TriggerListener</span></span> <span style="font-size:12pt"><span style="font-family:宋体">接口形式如下：</span></span></span></span></span></p>
<div class="cnblogs_code" style="border:1px solid #cccccc; margin-bottom:5px; margin-left:0px; margin-right:0px; margin-top:5px; padding:5px">
<pre>
<span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"><span style="font-size:12px !important"><span style="font-family:"Courier New" !important">public</span></span> <span style="font-size:12px !important"><span style="font-family:"Courier New" !important">interface</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> TriggerListener {
</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important">public</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> String getName();
</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important">public</span></span> <span style="font-size:12px !important"><span style="font-family:"Courier New" !important">void</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> triggerFired(Trigger trigger, JobExecutionContext context);
</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important">public</span></span> <span style="font-size:12px !important"><span style="font-family:"Courier New" !important">boolean</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> vetoJobExecution(Trigger trigger, JobExecutionContext context);
</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important">public</span></span> <span style="font-size:12px !important"><span style="font-family:"Courier New" !important">void</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> triggerMisfired(Trigger trigger);
</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important">public</span></span> <span style="font-size:12px !important"><span style="font-family:"Courier New" !important">void</span></span> triggerComplete(Trigger trigger, JobExecutionContext context,<span style="font-size:12px !important"><span style="font-family:"Courier New" !important">int</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> triggerInstructionCode);
}</span></span></span></span></span></span></span></span>
</pre>
</div>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">任务相关的事件包括：任务即将被执行的通知、任务执行完毕的通知。</span></span><span style="font-size:12pt"><span style="font-family:Calibri">JobListener</span></span> <span style="font-size:12pt"><span style="font-family:宋体">接口形式如下：</span></span></span></span></span></p>
<div class="cnblogs_code" style="border:1px solid #cccccc; margin-bottom:5px; margin-left:0px; margin-right:0px; margin-top:5px; padding:5px">
<pre>
<span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"><span style="font-size:12px !important"><span style="font-family:"Courier New" !important">public</span></span> <span style="font-size:12px !important"><span style="font-family:"Courier New" !important">interface</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> JobListener {
</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important">public</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> String getName();
</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important">public</span></span> <span style="font-size:12px !important"><span style="font-family:"Courier New" !important">void</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> jobToBeExecuted(JobExecutionContext context);
</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important">public</span></span> <span style="font-size:12px !important"><span style="font-family:"Courier New" !important">void</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> jobExecutionVetoed(JobExecutionContext context);
</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important">public</span></span> <span style="font-size:12px !important"><span style="font-family:"Courier New" !important">void</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> jobWasExecuted(JobExecutionContext context,
JobExecutionException jobException);
}</span></span></span></span></span></span></span></span>
</pre>
</div>
<h3 style="margin-left:0px; margin-right:0px"><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:16pt"><span style="font-family:宋体">7.1 <span style="font-family:宋体">使用你自己的监听器</span></span></span></span></span></h3>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">实现</span></span><span style="font-size:12pt"><span style="font-family:Calibri">TriggerListener</span></span><span style="font-size:12pt"><span style="font-family:宋体">和</span></span><span style="font-size:12pt"><span style="font-family:宋体">/<span style="font-family:宋体">或</span><span style="font-family:Calibri">JobListener</span><span style="font-family:宋体">即可实现你自己的监听器。监听器需要注册到调度器，且必须给他一个名称（或者说它们必须能够通过其</span></span></span><span style="font-size:12pt"><span style="font-family:Calibri">getName</span></span><span style="font-size:12pt"><span style="font-family:宋体">方法来获取其名称</span></span><span style="font-size:12pt"><span style="font-family:宋体">）。</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">为了方便起见，你可以继承</span></span><span style="font-size:12pt"><span style="font-family:Calibri">JobListenerSupport</span></span> <span style="font-size:12pt"><span style="font-family:宋体">类或者</span></span><span style="font-size:12pt"><span style="font-family:Calibri">TriggerListenerSupport</span></span> <span style="font-size:12pt"><span style="font-family:宋体">，然后重载你感兴趣的方法即可。</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">监听器需要与一个匹配器一起注册到调度器，该匹配器用于指定监听器想要接收哪个触发器</span></span><span style="font-size:12pt"><span style="font-family:宋体">/<span style="font-family:宋体">任务的事件。</span></span></span><span style="font-size:12pt"><span style="font-family:宋体">监听器在运行期间注册到调度器，且并没有与触发器和</span></span><span style="font-size:12pt"><span style="font-family:宋体">任务一起存储到</span></span><span style="font-size:12pt"><span style="font-family:Calibri">JobStore </span></span><span style="font-size:12pt"><span style="font-family:宋体">中。这是因为监听器通常是你应用的一个结合点，因此每次应用运行时它都需要重新注册到调度器。</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">在指定任务中添加感兴趣的任务监听器方法如下：</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">scheduler.getListenerManager().addJobListener(myJobListener, KeyMatcher.jobKeyEquals(new JobKey("myJobName", "myJobGroup")));</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">通过以下对匹配器和<span style="font-family:Calibri">Key</span><span style="font-family:宋体">的静态引用，可以使代码更整洁：</span></span></span></span></span></span></p>
<div class="cnblogs_code" style="border:1px solid #cccccc; margin-bottom:5px; margin-left:0px; margin-right:0px; margin-top:5px; padding:5px">
<pre>
<span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"><span style="font-size:12px !important"><span style="font-family:"Courier New" !important">import</span></span> <span style="font-size:12px !important"><span style="font-family:"Courier New" !important">static</span></span> org.quartz.JobKey.*<span style="font-size:12px !important"><span style="font-family:"Courier New" !important">;
</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important">import</span></span> <span style="font-size:12px !important"><span style="font-family:"Courier New" !important">static</span></span> org.quartz.impl.matchers.KeyMatcher.*<span style="font-size:12px !important"><span style="font-family:"Courier New" !important">;
</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important">import</span></span> <span style="font-size:12px !important"><span style="font-family:"Courier New" !important">static</span></span> org.quartz.impl.matchers.GroupMatcher.*<span style="font-size:12px !important"><span style="font-family:"Courier New" !important">;
</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important">import</span></span> <span style="font-size:12px !important"><span style="font-family:"Courier New" !important">static</span></span> org.quartz.impl.matchers.AndMatcher.*<span style="font-size:12px !important"><span style="font-family:"Courier New" !important">;
</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important">import</span></span> <span style="font-size:12px !important"><span style="font-family:"Courier New" !important">static</span></span> org.quartz.impl.matchers.OrMatcher.*<span style="font-size:12px !important"><span style="font-family:"Courier New" !important">;
</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important">import</span></span> <span style="font-size:12px !important"><span style="font-family:"Courier New" !important">static</span></span> org.quartz.impl.matchers.EverythingMatcher.*<span style="font-size:12px !important"><span style="font-family:"Courier New" !important">;
...etc.</span></span></span></span></span></span></span></span></pre>
</div>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"> </span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">它使代码变成这样：</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">scheduler.getListenerManager().addJobListener(myJobListener, jobKeyEquals(jobKey("myJobName", "myJobGroup")));</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">在组中为所有任务添加感兴趣的任务监听器方法如下：</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">scheduler.getListenerManager().addJobListener(myJobListener, jobGroupEquals("myJobGroup"));</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">在两个指定组中为所有任务添加感兴趣的任务监听器方法如下：</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">scheduler.getListenerManager().addJobListener(myJobListener, or(jobGroupEquals("myJobGroup"), jobGroupEquals("yourGroup")));</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">为所有任务添加感兴趣的任务监听器方法如下：</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">scheduler.getListenerManager().addJobListener(myJobListener, allJobs());</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">注册</span></span><span style="font-size:12pt"><span style="font-family:Calibri">TriggerListeners</span></span> <span style="font-size:12pt"><span style="font-family:宋体">的方法与以上相同。大多数</span></span><span style="font-size:12pt"><span style="font-family:Calibri">Quartz</span></span><span style="font-size:12pt"><span style="font-family:宋体">用户并不会用到监听器，然而应用程序需要得到事件通知的话它们是非常易用的，而且不需要任务本身显式地通知应用程序。</span></span></span></span></span></p>
<h2 style="margin-left:0pt; margin-right:0px"><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:28px"><strong><span style="font-size:22pt"><span style="font-family:宋体">八、</span></span><span style="font-size:22pt"><span style="font-family:宋体">调度器监听器</span></span></strong></span></span></span></h2>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">调度器监听器</span></span><span style="font-size:12pt"><span style="font-family:宋体">(</span></span><span style="font-size:12pt"><span style="font-family:Calibri">SchedulerListeners</span></span><span style="font-size:12pt"><span style="font-family:宋体">)</span></span><span style="font-size:12pt"><span style="font-family:宋体">与</span></span><span style="font-size:12pt"><span style="font-family:Calibri">TriggerListeners </span></span><span style="font-size:12pt"><span style="font-family:宋体">和</span></span><span style="font-size:12pt"><span style="font-family:Calibri">JobListeners</span></span><span style="font-size:12pt"><span style="font-family:宋体">非常类似，除了它是接收来自于调度器自己的事件</span></span><span style="font-size:12pt"><span style="font-family:宋体">--<span style="font-family:宋体">不一定与某个特定的</span><span style="font-family:Calibri">trigger</span><span style="font-family:宋体">或</span><span style="font-family:Calibri">job</span><span style="font-family:宋体">相关。</span></span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:Calibri">Scheduler</span></span><span style="font-size:12pt"><span style="font-family:宋体">相关的事件包括：</span></span><span style="font-size:12pt"><span style="font-family:宋体">trigger/job<span style="font-family:宋体">的添加与删除、</span></span></span><span style="font-size:12pt"><span style="font-family:Calibri">Scheduler</span></span><span style="font-size:12pt"><span style="font-family:宋体">内部的严重错误、调度器被关闭的通知，等等。</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:Calibri">SchedulerListener</span></span> <span style="font-size:12pt"><span style="font-family:宋体">接口形式如下：</span></span></span></span></span></p>
<div class="cnblogs_code" style="border:1px solid #cccccc; margin-bottom:5px; margin-left:0px; margin-right:0px; margin-top:5px; padding:5px">
<pre>
<span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"><span style="font-size:12px !important"><span style="font-family:"Courier New" !important">public</span></span> <span style="font-size:12px !important"><span style="font-family:"Courier New" !important">interface</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> SchedulerListener {
</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important">public</span></span> <span style="font-size:12px !important"><span style="font-family:"Courier New" !important">void</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> jobScheduled(Trigger trigger);
</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important">public</span></span> <span style="font-size:12px !important"><span style="font-family:"Courier New" !important">void</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> jobUnscheduled(String triggerName, String triggerGroup);
</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important">public</span></span> <span style="font-size:12px !important"><span style="font-family:"Courier New" !important">void</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> triggerFinalized(Trigger trigger);
</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important">public</span></span> <span style="font-size:12px !important"><span style="font-family:"Courier New" !important">void</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> triggersPaused(String triggerName, String triggerGroup);
</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important">public</span></span> <span style="font-size:12px !important"><span style="font-family:"Courier New" !important">void</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> triggersResumed(String triggerName, String triggerGroup);
</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important">public</span></span> <span style="font-size:12px !important"><span style="font-family:"Courier New" !important">void</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> jobsPaused(String jobName, String jobGroup);
</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important">public</span></span> <span style="font-size:12px !important"><span style="font-family:"Courier New" !important">void</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> jobsResumed(String jobName, String jobGroup);
</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important">public</span></span> <span style="font-size:12px !important"><span style="font-family:"Courier New" !important">void</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> schedulerError(String msg, SchedulerException cause);
</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important">public</span></span> <span style="font-size:12px !important"><span style="font-family:"Courier New" !important">void</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> schedulerStarted();
</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important">public</span></span> <span style="font-size:12px !important"><span style="font-family:"Courier New" !important">void</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> schedulerInStandbyMode();
</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important">public</span></span> <span style="font-size:12px !important"><span style="font-family:"Courier New" !important">void</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> schedulerShutdown();
</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important">public</span></span> <span style="font-size:12px !important"><span style="font-family:"Courier New" !important">void</span></span><span style="font-size:12px !important"><span style="font-family:"Courier New" !important"> schedulingDataCleared();
}</span></span></span></span></span></span></span></span></pre>
</div>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"> </span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:Calibri">SchedulerListeners</span></span> <span style="font-size:12pt"><span style="font-family:宋体">注册到调度器的</span></span><span style="font-size:12pt"><span style="font-family:Calibri">ListenerManager</span></span><span style="font-size:12pt"><span style="font-family:宋体">。基本上任何实现了</span></span><span style="font-size:12pt"><span style="font-family:Calibri">SchedulerListener</span></span> <span style="font-size:12pt"><span style="font-family:宋体">的类都可以作为调度器监听器。</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">添加</span></span><span style="font-size:12pt"><span style="font-family:Calibri">SchedulerListener</span></span><span style="font-size:12pt"><span style="font-family:宋体">的方法如下：</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">scheduler.getListenerManager().addSchedulerListener(mySchedListener);</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">删除</span></span><span style="font-size:12pt"><span style="font-family:Calibri">SchedulerListener</span></span><span style="font-size:12pt"><span style="font-family:宋体">的方法如下：</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">scheduler.getListenerManager().removeSchedulerListener(mySchedListener);</span></span></span></span></span></p>
<h2 style="margin-left:0pt; margin-right:0px"><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:28px"><strong><span style="font-size:22pt"><span style="font-family:宋体">九、</span></span><span style="font-size:22pt"><span style="font-family:宋体">JobStores</span></span></strong></span></span></span></h2>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:Calibri">JobStore</span></span><span style="font-size:12pt"><span style="font-family:宋体">的职责是记录所有你提供给调度器的“工作数据”：任务、触发器、日历等等。为你的调度器实例选择合适的</span></span><span style="font-size:12pt"><span style="font-family:Calibri">JobStore</span></span><span style="font-size:12pt"><span style="font-family:宋体">的一个非常重要的步骤。幸运的是，一旦你理解了它们之间的不同，选择起来是非常容易的。你在配置文件中声明将要选择哪个</span></span><span style="font-size:12pt"><span style="font-family:Calibri">JobStore</span></span><span style="font-size:12pt"><span style="font-family:宋体">，以此将它提供给</span></span><span style="font-size:12pt"><span style="font-family:Calibri">SchedulerFactory</span></span><span style="font-size:12pt"><span style="font-family:宋体">，因为你的调度器实例是由它生成的。</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">永远不要在代码中直接使用</span></span><span style="font-size:12pt"><span style="font-family:Calibri">JobStore</span></span><span style="font-size:12pt"><span style="font-family:宋体">实例。有的人因为某些原因想要这样做。</span></span><span style="font-size:12pt"><span style="font-family:Calibri">JobStore</span></span><span style="font-size:12pt"><span style="font-family:宋体">是给</span></span><span style="font-size:12pt"><span style="font-family:Calibri">Quartz</span></span> <span style="font-size:12pt"><span style="font-family:宋体">在后台使用的。你需要（通过配置）告诉</span></span><span style="font-size:12pt"><span style="font-family:Calibri">Quartz</span></span> <span style="font-size:12pt"><span style="font-family:宋体">使用哪一个</span></span><span style="font-size:12pt"><span style="font-family:Calibri">JobStore</span></span><span style="font-size:12pt"><span style="font-family:宋体">，然后你只应将代码集中在调度器接口上。</span></span></span></span></span></p>
<h3 style="margin-left:0px; margin-right:0px"><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:16pt"><span style="font-family:宋体">9.1 </span></span><span style="font-size:16pt"><span style="font-family:Arial">RAMJobStore</span></span></span></span></h3>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:Calibri">RAMJobStore</span></span> <span style="font-size:12pt"><span style="font-family:宋体">是最易于使用的</span></span><span style="font-size:12pt"><span style="font-family:Calibri">obStore</span></span><span style="font-size:12pt"><span style="font-family:宋体">，也是性能最好的（从</span></span><span style="font-size:12pt"><span style="font-family:宋体">CPU<span style="font-family:宋体">时间的角度</span></span></span><span style="font-size:12pt"><span style="font-family:宋体">）。</span></span><span style="font-size:12pt"><span style="font-family:Calibri">RAMJobStore</span></span> <span style="font-size:12pt"><span style="font-family:宋体">的名字就很说明问题：它将数据保存在内存中。这就是它为何快如闪电且已易于配置。它的缺点在于如果你的应用程序结束了或崩溃了，那么所有数据都将丢失，这说明</span></span><span style="font-size:12pt"><span style="font-family:Calibri">RAMJobStore</span></span><span style="font-size:12pt"><span style="font-family:宋体">与触发器和任务设置中的</span></span><span style="font-size:12pt"><span style="font-family:Calibri">”</span></span><span style="font-size:12pt"><span style="font-family:Calibri">non-volatility</span></span><span style="font-size:12pt"><span style="font-family:Calibri">”</span></span><span style="font-size:12pt"><span style="font-family:宋体">并不匹配。在某些应用中这是可以接受的甚至是要求的行为，但对于另一些来说这可能是灾难性的。</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">要使用</span></span><span style="font-size:12pt"><span style="font-family:Calibri">RAMJobStore</span></span> <span style="font-size:12pt"><span style="font-family:宋体">（假设你使用的是</span></span><span style="font-size:12pt"><span style="font-family:Calibri">StdSchedulerFactory</span></span><span style="font-size:12pt"><span style="font-family:宋体">）只需要在配置文件中将</span></span><span style="font-size:12pt"><span style="font-family:Calibri">JobStore class</span></span><span style="font-size:12pt"><span style="font-family:宋体">属性值设置为</span></span><span style="font-size:12pt"><span style="font-family:Calibri">org.quartz.simpl.RAMJobStore</span></span><span style="font-size:12pt"><span style="font-family:宋体">即可。配置</span></span><span style="font-size:12pt"><span style="font-family:Calibri">Quartz</span></span><span style="font-size:12pt"><span style="font-family:宋体">使用</span></span><span style="font-size:12pt"><span style="font-family:Calibri">RAMJobStore</span></span><span style="font-size:12pt"><span style="font-family:宋体">的方法如下：</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">org.quartz.jobStore.class = org.quartz.simpl.RAMJobStore</span></span></span></span></span></p>
<h3 style="margin-left:0px; margin-right:0px"><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:16pt"><span style="font-family:宋体">9.2 </span></span><span style="font-size:16pt"><span style="font-family:Arial">JDBCJobStore</span></span></span></span></h3>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:Calibri">JDBCJobStore</span></span> <span style="font-size:12pt"><span style="font-family:宋体">的作用也是显而易见的</span></span><span style="font-size:12pt"><span style="font-family:宋体">--<span style="font-family:宋体">它将所有数据通过</span><span style="font-family:Calibri">JDBC</span><span style="font-family:宋体">保存在数据库中。正是如此它的配置要比</span></span></span><span style="font-size:12pt"><span style="font-family:Calibri">RAMJobStore</span></span><span style="font-size:12pt"><span style="font-family:宋体">更困难一些，也没有它快。然而性能的缺陷也不是特别的糟糕，尤其是你的数据表使用主键作为索引。在相当现代且网络环境相当好（在调度器与数据库之间）的机器上，获取并更新一个激活的触发器所需要的时间通常小于</span></span><span style="font-size:12pt"><span style="font-family:宋体"> 10<span style="font-family:宋体">毫秒。</span></span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:Calibri">JDBCJobStore</span></span> <span style="font-size:12pt"><span style="font-family:宋体">几乎兼容所有数据区，它被广泛使用到</span></span><span style="font-size:12pt"><span style="font-family:Calibri">Oracle, PostgreSQL, MySQL, MS SQLServer, HSQLDB, </span></span><span style="font-size:12pt"><span style="font-family:宋体">以及</span></span><span style="font-size:12pt"><span style="font-family:Calibri">DB2</span></span><span style="font-size:12pt"><span style="font-family:宋体">上。使用</span></span><span style="font-size:12pt"><span style="font-family:Calibri">JDBCJobStore</span></span><span style="font-size:12pt"><span style="font-family:宋体">时，你必须首先为</span></span><span style="font-size:12pt"><span style="font-family:宋体">quartz<span style="font-family:宋体">创建一个表格，你在</span></span></span><span style="font-size:12pt"><span style="font-family:Calibri">Quartz</span></span> <span style="font-size:12pt"><span style="font-family:宋体">分发包的</span></span> <span style="font-size:12pt"><span style="font-family:Calibri">"docs/dbTables" </span></span><span style="font-size:12pt"><span style="font-family:宋体">目录下能够找到创建表格的</span></span><span style="font-size:12pt"><span style="font-family:宋体">SQL<span style="font-family:宋体">脚本。如果还没有针对你的数据库的脚本，那就随便看一个，并以任何方式进行修改。有一件事情要注意，在这些脚本中所有表格都是以</span><span style="font-family:Calibri">QRTZ</span><span style="font-family:宋体">开头（比如</span></span></span><span style="font-size:12pt"><span style="font-family:Calibri">"QRTZ_TRIGGERS"</span></span><span style="font-size:12pt"><span style="font-family:宋体">和</span></span><span style="font-size:12pt"><span style="font-family:Calibri"> "QRTZ_JOB_DETAIL"</span></span><span style="font-size:12pt"><span style="font-family:宋体">）。这个前缀可以是任何值，你只需要告诉</span></span><span style="font-size:12pt"><span style="font-family:Calibri">JDBCJobStore</span></span> <span style="font-size:12pt"><span style="font-family:宋体">即可（在配置文件中）。在同一个数据库中为不同的调度器实例使用不同的数据表时，使用不同的前缀是有用处的。</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">一旦建立了数据表，在配置和使用</span></span><span style="font-size:12pt"><span style="font-family:Calibri">JDBCJobStore</span></span> <span style="font-size:12pt"><span style="font-family:宋体">之前你还需要做一个重要的决定。你需要决定你的应用使用什么类型的事务</span></span><span style="font-size:12pt"><span style="font-family:宋体">(</span></span><span style="font-size:12pt"><span style="font-family:Calibri">transaction</span></span><span style="font-size:12pt"><span style="font-family:宋体">)<span style="font-family:宋体">。如果你不需要将你的调度指令（例如增加或删除触发器）绑定到其他的事务，那你可以使用</span></span></span><span style="font-size:12pt"><span style="font-family:Calibri">JobStoreTX</span></span> <span style="font-size:12pt"><span style="font-family:宋体">（这是最常用的选项）让</span></span><span style="font-size:12pt"><span style="font-family:Calibri">Quartz</span></span> <span style="font-size:12pt"><span style="font-family:宋体">来管理事务。</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">如果你要让</span></span><span style="font-size:12pt"><span style="font-family:Calibri">Quartz</span></span> <span style="font-size:12pt"><span style="font-family:宋体">与其它事务（比如与一个</span></span><span style="font-size:12pt"><span style="font-family:Calibri">J2EE</span></span><span style="font-size:12pt"><span style="font-family:宋体">应用服务器）一起工作，那你应当使用</span></span><span style="font-size:12pt"><span style="font-family:Calibri">JobStoreCMT</span></span> <span style="font-size:12pt"><span style="font-family:宋体">，</span></span><span style="font-size:12pt"><span style="font-family:Calibri">Quartz</span></span> <span style="font-size:12pt"><span style="font-family:宋体">将使用</span></span><span style="font-size:12pt"><span style="font-family:宋体">APP<span style="font-family:宋体">服务器容器来管理这些事务。</span></span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">最后一部分是设置</span></span><span style="font-size:12pt"><span style="font-family:Calibri">DataSource</span></span> <span style="font-size:12pt"><span style="font-family:宋体">，</span></span><span style="font-size:12pt"><span style="font-family:Calibri">JDBCJobStore</span></span> <span style="font-size:12pt"><span style="font-family:宋体">要从它这里获取到你数据库的连接。</span></span><span style="font-size:12pt"><span style="font-family:Calibri">DataSources</span></span> <span style="font-size:12pt"><span style="font-family:宋体">在属性文件中定义，且有一些不同的定义方式。一种是让</span></span><span style="font-size:12pt"><span style="font-family:Calibri">Quartz</span></span> <span style="font-size:12pt"><span style="font-family:宋体">自己来创建和管理</span></span><span style="font-size:12pt"><span style="font-family:Calibri">DataSource</span></span> <span style="font-size:12pt"><span style="font-family:宋体">，提供所有到数据库的连接信息。还有一种是让</span></span><span style="font-size:12pt"><span style="font-family:Calibri">Quartz</span></span> <span style="font-size:12pt"><span style="font-family:宋体">使用自身所在的应用服务器提供的</span></span><span style="font-size:12pt"><span style="font-family:Calibri">DataSource</span></span> <span style="font-size:12pt"><span style="font-family:宋体">，向</span></span><span style="font-size:12pt"><span style="font-family:宋体">JDBC<span style="font-family:宋体">提供</span></span></span><span style="font-size:12pt"><span style="font-family:Calibri">DataSource</span></span><span style="font-size:12pt"><span style="font-family:宋体">的</span></span><span style="font-size:12pt"><span style="font-family:Calibri">JNDI</span></span> <span style="font-size:12pt"><span style="font-family:宋体">名称。具体的配置请参阅</span></span> <span style="font-size:12pt"><span style="font-family:Calibri">"docs/config"</span></span><span style="font-size:12pt"><span style="font-family:宋体">文件夹中的配置文件。</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">要使用</span></span><span style="font-size:12pt"><span style="font-family:Calibri">JDBCJobStore</span></span> <span style="font-size:12pt"><span style="font-family:宋体">（假设你使用的是</span></span><span style="font-size:12pt"><span style="font-family:Calibri">StdSchedulerFactory</span></span><span style="font-size:12pt"><span style="font-family:宋体">）你首先要将配置文件中的</span></span><span style="font-size:12pt"><span style="font-family:Calibri">JobStore class</span></span> <span style="font-size:12pt"><span style="font-family:宋体">设置为</span></span><span style="font-size:12pt"><span style="font-family:Calibri">org.quartz.impl.jdbcjobstore.JobStoreTX</span></span> <span style="font-size:12pt"><span style="font-family:宋体">或者</span></span><span style="font-size:12pt"><span style="font-family:Calibri">org.quartz.impl.jdbcjobstore.JobStoreCMT</span></span><span style="font-size:12pt"><span style="font-family:宋体">二者其一，取决于你对以上选项的选择。</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">配置</span></span><span style="font-size:12pt"><span style="font-family:Calibri">Quartz</span></span><span style="font-size:12pt"><span style="font-family:宋体">使用</span></span><span style="font-size:12pt"><span style="font-family:Calibri">JobStoreTx</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">org.quartz.jobStore.class = org.quartz.impl.jdbcjobstore.JobStoreTX</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">接下来你需要选择供</span></span><span style="font-size:12pt"><span style="font-family:Calibri">JobStore</span></span><span style="font-size:12pt"><span style="font-family:宋体">使用的</span></span><span style="font-size:12pt"><span style="font-family:Calibri">DriverDelegate</span></span><span style="font-size:12pt"><span style="font-family:宋体">。</span></span><span style="font-size:12pt"><span style="font-family:Calibri">DriverDelegate</span></span> <span style="font-size:12pt"><span style="font-family:宋体">的职责是处理你的数据库所需要的</span></span><span style="font-size:12pt"><span style="font-family:宋体">JDBC<span style="font-family:宋体">相关的工作。</span></span></span><span style="font-size:12pt"><span style="font-family:Calibri">StdJDBCDelegate</span></span> <span style="font-size:12pt"><span style="font-family:宋体">使用了</span></span><span style="font-size:12pt"><span style="font-family:Calibri">"vanilla" JDBC</span></span><span style="font-size:12pt"><span style="font-family:宋体">代码（以及</span></span><span style="font-size:12pt"><span style="font-family:宋体">SQL<span style="font-family:宋体">语句</span></span></span><span style="font-size:12pt"><span style="font-family:宋体">）来做这些工作。如果没有为你的数据库指定其它的</span></span><span style="font-size:12pt"><span style="font-family:Calibri">Delegate</span></span><span style="font-size:12pt"><span style="font-family:宋体">你可以尝试这个</span></span><span style="font-size:12pt"><span style="font-family:宋体">--<span style="font-family:宋体">我们仅为看起来使用</span></span></span><span style="font-size:12pt"><span style="font-family:Calibri">StdJDBCDelegate</span></span> <span style="font-size:12pt"><span style="font-family:宋体">会有问题的数据库提供了特定的</span></span><span style="font-size:12pt"><span style="font-family:Calibri">Delegate</span></span><span style="font-size:12pt"><span style="font-family:宋体">。其它的</span></span><span style="font-size:12pt"><span style="font-family:Calibri">Delegate</span></span><span style="font-size:12pt"><span style="font-family:宋体">位于</span></span> <span style="font-size:12pt"><span style="font-family:Calibri">"org.quartz.impl.jdbcjobstore"</span></span><span style="font-size:12pt"><span style="font-family:宋体">包或其子包内，包括：</span></span> <span style="font-size:12pt"><span style="font-family:Calibri">DB2v6Delegate (for DB2 version 6 </span></span><span style="font-size:12pt"><span style="font-family:宋体">及以前</span></span><span style="font-size:12pt"><span style="font-family:Calibri">)</span></span><span style="font-size:12pt"><span style="font-family:宋体">，</span></span> <span style="font-size:12pt"><span style="font-family:Calibri">HSQLDBDelegate (for HSQLDB)</span></span><span style="font-size:12pt"><span style="font-family:宋体">，</span></span><span style="font-size:12pt"><span style="font-family:Calibri">MSSQLDelegate (for Microsoft SQLServer), PostgreSQLDelegate (for PostgreSQL), WeblogicDelegate (for using JDBC drivers made by Weblogic), OracleDelegate (for using Oracle),</span></span><span style="font-size:12pt"><span style="font-family:宋体">等等。</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">当选择了</span></span><span style="font-size:12pt"><span style="font-family:Calibri">Delegate</span></span><span style="font-size:12pt"><span style="font-family:宋体">以后，你需要在配置文件中设置它的名称。</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">配置</span></span><span style="font-size:12pt"><span style="font-family:Calibri">JDBCJobStore </span></span><span style="font-size:12pt"><span style="font-family:宋体">使用</span></span><span style="font-size:12pt"><span style="font-family:Calibri">DriverDelegate</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">org.quartz.jobStore.driverDelegateClass = org.quartz.impl.jdbcjobstore.StdJDBCDelegate</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">接下来你需要通知</span></span><span style="font-size:12pt"><span style="font-family:宋体">JobStore </span></span><span style="font-size:12pt"><span style="font-family:宋体">你使用的数据表前缀是什么。</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">配置</span></span><span style="font-size:12pt"><span style="font-family:宋体">JDBCJobStore </span></span><span style="font-size:12pt"><span style="font-family:宋体">使用的数据表前缀：</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">org.quartz.jobStore.tablePrefix = QRTZ_</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">最后，你需要设置</span></span><span style="font-size:12pt"><span style="font-family:宋体">JobStore</span></span><span style="font-size:12pt"><span style="font-family:宋体">使用的</span></span><span style="font-size:12pt"><span style="font-family:宋体">DataSource </span></span><span style="font-size:12pt"><span style="font-family:宋体">。你填写的</span></span><span style="font-size:12pt"><span style="font-family:宋体">DataSource </span></span><span style="font-size:12pt"><span style="font-family:宋体">必须在配置文件中有定义，因此我们指定</span></span><span style="font-size:12pt"><span style="font-family:宋体">Quartz </span></span><span style="font-size:12pt"><span style="font-family:宋体">使用</span></span><span style="font-size:12pt"><span style="font-family:宋体">"myDS"</span></span><span style="font-size:12pt"><span style="font-family:宋体">（已经在配置文件的某处定义）。</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">配置</span></span><span style="font-size:12pt"><span style="font-family:宋体">JDBCJobStore </span></span><span style="font-size:12pt"><span style="font-family:宋体">使用的</span></span><span style="font-size:12pt"><span style="font-family:宋体">DataSource </span></span><span style="font-size:12pt"><span style="font-family:宋体">名称：</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">org.quartz.jobStore.dataSource = myDS</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">如果你的调度器很繁忙（比如在运行任务数量几乎总是等于线程池的容量）那么你可能需要将</span></span><span style="font-size:12pt"><span style="font-family:Calibri">DataSource </span></span><span style="font-size:12pt"><span style="font-family:宋体">的</span></span><span style="font-size:12pt"><span style="font-family:宋体">连接数设置为线程池的容量<span style="font-family:Calibri">+2</span><span style="font-family:宋体">。</span></span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:Calibri">"org.quartz.jobStore.useProperties"</span></span><span style="font-size:12pt"><span style="font-family:宋体">配置参数默认为</span></span><span style="font-size:12pt"><span style="font-family:宋体">false<span style="font-family:宋体">，为了使</span></span></span><span style="font-size:12pt"><span style="font-family:Calibri">JDBCJobStore </span></span><span style="font-size:12pt"><span style="font-family:宋体">的</span></span><span style="font-size:12pt"><span style="font-family:Calibri">JobDataMaps</span></span><span style="font-size:12pt"><span style="font-family:宋体">的所有值均为</span></span><span style="font-size:12pt"><span style="font-family:宋体">String<span style="font-family:宋体">类型，而不是存储为更复杂的可序列化对象，该值可以设置为</span><span style="font-family:Calibri">true</span><span style="font-family:宋体">。长远来看这样更加安全，因为你避免了将非字符串类序列化为</span></span></span><span style="font-size:12pt"><span style="font-family:Calibri">BLOB</span></span><span style="font-size:12pt"><span style="font-family:宋体">类是的类版本问题。</span></span></span></span></span></p>
<h3 style="margin-left:0px; margin-right:0px"><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:16pt"><span style="font-family:宋体">9.3 </span></span><span style="font-size:16pt"><span style="font-family:Arial">TerracottaJobStore</span></span></span></span></h3>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:Calibri">TerracottaJobStore </span></span><span style="font-size:12pt"><span style="font-family:宋体">提供了一种不使用数据库情况下的量化和鲁棒性手段。这意味着你的数据库可以与</span></span><span style="font-size:12pt"><span style="font-family:Calibri">Quartz</span></span><span style="font-size:12pt"><span style="font-family:宋体">的负载无关，并将其节省下来的资源用于你的其它应用。</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:Calibri">TerracottaJobStore </span></span><span style="font-size:12pt"><span style="font-family:宋体">可被集群化或非集群化使用，在这些场景下都会为你的任务数据提供一个存储介质，它在你的应用重启期间也具有持久性，因为数据存储在</span></span><span style="font-size:12pt"><span style="font-family:Calibri">Terracotta </span></span><span style="font-size:12pt"><span style="font-family:宋体">服务器。它的性能比使用基于</span></span><span style="font-size:12pt"><span style="font-family:Calibri">JDBCJobStore </span></span><span style="font-size:12pt"><span style="font-family:宋体">的数据库要好得多（大约一个数量级），但仍比</span></span><span style="font-size:12pt"><span style="font-family:Calibri">RAMJobStore</span></span><span style="font-size:12pt"><span style="font-family:宋体">慢得多。</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">要使用</span></span><span style="font-size:12pt"><span style="font-family:Calibri">TerracottaJobStore </span></span><span style="font-size:12pt"><span style="font-family:宋体">（假设你使用的是</span></span><span style="font-size:12pt"><span style="font-family:Calibri">StdSchedulerFactory</span></span><span style="font-size:12pt"><span style="font-family:宋体">），只需要将配置文件中的</span></span><span style="font-size:12pt"><span style="font-family:Calibri">JobStore class</span></span> <span style="font-size:12pt"><span style="font-family:宋体">设置为</span></span><span style="font-size:12pt"><span style="font-family:Calibri">org.terracotta.quartz.TerracottaJobStore</span></span><span style="font-size:12pt"><span style="font-family:宋体">，并额外添加一行配置指定</span></span><span style="font-size:12pt"><span style="font-family:Calibri">Terracotta</span></span> <span style="font-size:12pt"><span style="font-family:宋体">服务器的位置。</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">配置</span></span><span style="font-size:12pt"><span style="font-family:Calibri">Quartz</span></span> <span style="font-size:12pt"><span style="font-family:宋体">使用</span></span><span style="font-size:12pt"><span style="font-family:Calibri">TerracottaJobStore</span></span><span style="font-size:12pt"><span style="font-family:宋体">的方法：</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:Calibri">org.quartz.jobStore.class = org.terracotta.quartz.TerracottaJobStore</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:Calibri">org.quartz.jobStore.tcConfigUrl = localhost:9510</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">关于</span></span><span style="font-size:12pt"><span style="font-family:Calibri">JobStore</span></span><span style="font-size:12pt"><span style="font-family:宋体">和</span></span><span style="font-size:12pt"><span style="font-family:Calibri">Terracotta</span></span><span style="font-size:12pt"><span style="font-family:宋体">的详细信息请参阅</span></span><a href="http://www.terracotta.org/quartz" style="color:#1a8bc8; text-decoration:none"><span style="font-family:"Times New Roman"">http://www.terracotta.org/quartz</span></a><span style="font-size:12pt"><span style="font-family:宋体">。</span></span></span></span></span></p>
<h2 style="margin-left:0pt; margin-right:0px"><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:28px"><strong><span style="font-size:22pt"><span style="font-family:宋体">十、</span></span><span style="font-size:22pt"><span style="font-family:宋体">配置，资源使用及调度器工厂</span></span></strong></span></span></span></h2>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:Calibri">Quartz</span></span> <span style="font-size:12pt"><span style="font-family:宋体">的结构是模块化的，因此要让它运行起来的话各个组件之间必须很好地结合起来。在运行</span></span><span style="font-size:12pt"><span style="font-family:Calibri">Quartz</span></span> <span style="font-size:12pt"><span style="font-family:宋体">之前必须先进行配置的主要组件有：</span></span></span></span></span></p>
<p style="margin-left:10px; margin-right:10px"><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:Wingdings">l </span></span><span style="font-size:12pt"><span style="font-family:宋体">线程池</span></span></span></span></span></p>
<p style="margin-left:10px; margin-right:10px"><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:Wingdings">l </span></span><span style="font-size:12pt"><span style="font-family:Calibri">JobStore</span></span></span></span></span></p>
<p style="margin-left:10px; margin-right:10px"><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:Wingdings">l </span></span><span style="font-size:12pt"><span style="font-family:Calibri">DataSources </span></span><span style="font-size:12pt"><span style="font-family:宋体">（如果需要的话）</span></span></span></span></span></p>
<p style="margin-left:10px; margin-right:10px"><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:Wingdings">l </span></span><span style="font-size:12pt"><span style="font-family:宋体">调度器自身</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">线程池为</span></span><span style="font-size:12pt"><span style="font-family:Calibri">Quartz </span></span><span style="font-size:12pt"><span style="font-family:宋体">提供了一个线程集以便在执行任务时使用。线程池中线程越多，可以并发执行的任务数越多。然而，过多的线程可能会是你的系统变慢。许多</span></span><span style="font-size:12pt"><span style="font-family:Calibri">Quartz </span></span><span style="font-size:12pt"><span style="font-family:宋体">用户发现</span></span><span style="font-size:12pt"><span style="font-family:宋体">5<span style="font-family:宋体">个左右的线程就足够了</span><span style="font-family:Calibri">--</span><span style="font-family:宋体">因为在任意时刻的任务数都不会超过</span><span style="font-family:Calibri">100</span><span style="font-family:宋体">，而且通常它们都不会要求要同时执行，而且这些任务的生命期都很短（很快就结束）。另一些用户发现他们需要</span><span style="font-family:Calibri">10,15,50</span><span style="font-family:宋体">或者甚至</span><span style="font-family:Calibri">100</span><span style="font-family:宋体">个线程，因为他们在任意时刻都有</span></span></span><span style="font-size:12pt"><span style="font-family:Calibri">成千上万的</span></span><span style="font-size:12pt"><span style="font-family:宋体">触发器和大量的调度器</span></span><span style="font-size:12pt"><span style="font-family:宋体">--</span></span><span style="font-size:12pt"><span style="font-family:宋体">它们都平均至少有</span></span><span style="font-size:12pt"><span style="font-family:宋体">10-100<span style="font-family:宋体">个任务需要在任一时刻运行。为你的调度器池找到合适容量完全取决于你如何使用它。并没有严格的规律，除了保持线程数量尽可能的少（为了节约你机器的资源）</span><span style="font-family:Calibri">--</span><span style="font-family:宋体">然而你要确保足以按时激活你的任务。注意，如果一个触发器达到了激活时间而没有可用线程，</span></span></span><span style="font-size:12pt"><span style="font-family:Calibri">Quartz </span></span><span style="font-size:12pt"><span style="font-family:宋体">将阻塞（暂停）直到有一个可用的线程，然后任务将被执行</span></span><span style="font-size:12pt"><span style="font-family:宋体">--<span style="font-family:宋体">在约定时间的数个毫秒之后。这甚至会导致线程的激活失败</span><span style="font-family:Calibri">--</span><span style="font-family:宋体">如果在配置的</span></span></span><span style="font-size:12pt"><span style="font-family:Calibri">"misfire threshold"</span></span><span style="font-size:12pt"><span style="font-family:宋体">期间都没有可用的线程。</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">在</span></span><span style="font-size:12pt"><span style="font-family:Calibri">org.quartz.spi </span></span><span style="font-size:12pt"><span style="font-family:宋体">包中定义了一个</span></span><span style="font-size:12pt"><span style="font-family:宋体">线程池接口，你可以根据你的洗好创建一个线程池应用。</span></span><span style="font-size:12pt"><span style="font-family:Calibri">Quartz </span></span><span style="font-size:12pt"><span style="font-family:宋体">包含一个简单（但非常</span></span><span style="font-size:12pt"><span style="font-family:Calibri">令人满意的</span></span><span style="font-size:12pt"><span style="font-family:宋体">）线程池叫做</span></span><span style="font-size:12pt"><span style="font-family:Calibri">org.quartz.simpl.SimpleThreadPool</span></span><span style="font-size:12pt"><span style="font-family:宋体">。这个线程池只是维护一个固定的线程集合</span></span><span style="font-size:12pt"><span style="font-family:宋体">--<span style="font-family:宋体">从不会增多也不会减少。但它非常健壮并且得到了非常好的测试</span><span style="font-family:Calibri">--</span><span style="font-family:宋体">几乎所有使用</span></span></span><span style="font-size:12pt"><span style="font-family:Calibri">Quartz </span></span><span style="font-size:12pt"><span style="font-family:宋体">的</span></span><span style="font-size:12pt"><span style="font-family:宋体">用户都会使用它。</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:Calibri">JobStores</span></span> <span style="font-size:12pt"><span style="font-family:宋体">和</span></span><span style="font-size:12pt"><span style="font-family:Calibri">DataSources </span></span><span style="font-size:12pt"><span style="font-family:宋体">在第</span></span><span style="font-size:12pt"><span style="font-family:宋体">9<span style="font-family:宋体">章已经讨论过。这里需要提醒的是一个事实，所有的</span></span></span><span style="font-size:12pt"><span style="font-family:Calibri">JobStores </span></span><span style="font-size:12pt"><span style="font-family:宋体">都</span></span><span style="font-size:12pt"><span style="font-family:宋体">实现了</span></span><span style="font-size:12pt"><span style="font-family:Calibri">org.quartz.spi.JobStore</span></span><span style="font-size:12pt"><span style="font-family:宋体">接口</span></span><span style="font-size:12pt"><span style="font-family:宋体">--<span style="font-family:宋体">如果某个打包好的</span></span></span><span style="font-size:12pt"><span style="font-family:Calibri">JobStores </span></span><span style="font-size:12pt"><span style="font-family:宋体">不满足你的需要，你可以自己创建一个。</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">最后，你需要创建你自己的调度器实例。调度器自身需要一个名称，告知它的</span></span><span style="font-size:12pt"><span style="font-family:宋体">RMI<span style="font-family:宋体">参数并把</span></span></span><span style="font-size:12pt"><span style="font-family:Calibri">JobStore </span></span><span style="font-size:12pt"><span style="font-family:宋体">和线程池的实例</span></span><span style="font-size:12pt"><span style="font-family:宋体">传递给它。</span></span><span style="font-size:12pt"><span style="font-family:Calibri">RMI </span></span><span style="font-size:12pt"><span style="font-family:宋体">参数包含了调度器是否应该将自己创建为一个</span></span><span style="font-size:12pt"><span style="font-family:宋体">RMI<span style="font-family:宋体">的</span></span></span><span style="font-size:12pt"><span style="font-family:宋体">服务对象（使它对远程连接可用），使用哪个主机和端口等等。</span></span><span style="font-size:12pt"><span style="font-family:Calibri">StdSchedulerFactory </span></span><span style="font-size:12pt"><span style="font-family:宋体">也可以生产调度器实例，它实际上是到远端进程创建的调度器的代理。</span></span></span></span></span></p>
<h3 style="margin-left:0px; margin-right:0px"><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:16pt"><span style="font-family:宋体">10.1 </span></span><span style="font-size:16pt"><span style="font-family:Arial">StdSchedulerFactory</span></span></span></span></h3>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:Calibri">StdSchedulerFactory</span></span><span style="font-size:12pt"><span style="font-family:宋体">是一个</span></span><span style="font-size:12pt"><span style="font-family:Calibri">org.quartz.SchedulerFactory</span></span><span style="font-size:12pt"><span style="font-family:宋体">接口的实现。它使用一系列的属性</span></span><span style="font-size:12pt"><span style="font-family:Calibri"> (java.util.Properties)</span></span><span style="font-size:12pt"><span style="font-family:宋体">来创建和初始化</span></span><span style="font-size:12pt"><span style="font-family:Calibri">Quartz </span></span><span style="font-size:12pt"><span style="font-family:宋体">调度器。属性通常存储在文件中并从它加载，也可以由你的应用程序产生并直接传递到</span></span><span style="font-size:12pt"><span style="font-family:Calibri">factory</span></span><span style="font-size:12pt"><span style="font-family:宋体">。直接调用</span></span><span style="font-size:12pt"><span style="font-family:Calibri">factory </span></span><span style="font-size:12pt"><span style="font-family:宋体">的</span></span><span style="font-size:12pt"><span style="font-family:Calibri">getScheduler() </span></span><span style="font-size:12pt"><span style="font-family:宋体">方法将产生调度器，初始化它（以及它的线程池、</span></span><span style="font-size:12pt"><span style="font-family:Calibri">JobStore </span></span><span style="font-size:12pt"><span style="font-family:宋体">和</span></span><span style="font-size:12pt"><span style="font-family:Calibri">DataSources</span></span><span style="font-size:12pt"><span style="font-family:宋体">），然后返回它的公共接口的</span></span><span style="font-size:12pt"><span style="font-family:宋体">句柄。</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">在</span></span><span style="font-size:12pt"><span style="font-family:Calibri">Quartz </span></span><span style="font-size:12pt"><span style="font-family:宋体">分发包的</span></span><span style="font-size:12pt"><span style="font-family:Calibri">"docs/config"</span></span><span style="font-size:12pt"><span style="font-family:宋体">目录下有一些示例配置（包含属性的描述）。你可以</span></span><span style="font-size:12pt"><span style="font-family:Calibri">Quartz </span></span><span style="font-size:12pt"><span style="font-family:宋体">文档的</span></span><span style="font-size:12pt"><span style="font-family:Calibri">"Reference"</span></span><span style="font-size:12pt"><span style="font-family:宋体">章节的配置手册中寻找完整的文档。</span></span></span></span></span></p>
<h3 style="margin-left:0px; margin-right:0px"><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:16pt"><span style="font-family:宋体">10.2 </span></span><span style="font-size:16pt"><span style="font-family:Arial">DirectSchedulerFactory</span></span></span></span></h3>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:Calibri">DirectSchedulerFactory</span></span><span style="font-size:12pt"><span style="font-family:宋体">是另一个</span></span><span style="font-size:12pt"><span style="font-family:Calibri">SchedulerFactory </span></span><span style="font-size:12pt"><span style="font-family:宋体">实现。它对于那些想要以更程序化的方式来创建调度器实例的人来说是有用的。它一般不建议使用，因为：（</span></span><span style="font-size:12pt"><span style="font-family:宋体">1</span></span><span style="font-size:12pt"><span style="font-family:宋体">）它要求用户非常明白他在做什么（</span></span><span style="font-size:12pt"><span style="font-family:宋体">2</span></span><span style="font-size:12pt"><span style="font-family:宋体">）它不允许声明式的配置</span></span><span style="font-size:12pt"><span style="font-family:宋体">--<span style="font-family:宋体">换句话说，你需要对调度器的设置进行硬编码。</span></span></span></span></span></span></p>
<h3 style="margin-left:0px; margin-right:0px"><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:16pt"><span style="font-family:宋体">10.3 </span></span><span style="font-size:16pt"><span style="font-family:宋体">日志</span></span></span></span></h3>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:Calibri">Quartz </span></span><span style="font-size:12pt"><span style="font-family:宋体">使用</span></span><span style="font-size:12pt"><span style="font-family:Calibri">SLF4J </span></span><span style="font-size:12pt"><span style="font-family:宋体">框架来满足所有的日志需要。为了调整日志设置（比如输出量，以及输出路径），你需要理解</span></span><span style="font-size:12pt"><span style="font-family:Calibri">SLF4J </span></span><span style="font-size:12pt"><span style="font-family:宋体">框架，这超出了本文的范围。如果你想要获取关于触发器激活和任务执行的额外信息，你可能会对如何启用</span></span><span style="font-size:12pt"><span style="font-family:Calibri">org.quartz.plugins.history.LoggingJobHistoryPlugin</span></span><span style="font-size:12pt"><span style="font-family:宋体">和</span></span><span style="font-size:12pt"><span style="font-family:宋体">/<span style="font-family:宋体">或</span></span></span><span style="font-size:12pt"><span style="font-family:Calibri">rg.quartz.plugins.history.LoggingTriggerHistoryPlugin</span></span><span style="font-size:12pt"><span style="font-family:宋体">感兴趣。</span></span></span></span></span></p>
<h2 style="margin-left:0pt; margin-right:0px"><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:28px"><strong><span style="font-size:22pt"><span style="font-family:宋体">十一、</span></span><span style="font-size:22pt"><span style="font-family:宋体">高级<span style="font-family:Calibri">(</span><span style="font-family:宋体">商业</span><span style="font-family:Calibri">) </span><span style="font-family:宋体">特性</span></span></span></strong></span></span></span></h2>
<h3 style="margin-left:0px; margin-right:0px"><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:16pt"><span style="font-family:宋体">11.1 <span style="font-family:宋体">集群</span></span></span></span></span></h3>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">集群目前与</span></span><span style="font-size:12pt"><span style="font-family:Calibri">JDBC-Jobstore (JobStoreTX </span></span><span style="font-size:12pt"><span style="font-family:宋体">或</span></span><span style="font-size:12pt"><span style="font-family:Calibri"> JobStoreCMT) </span></span><span style="font-size:12pt"><span style="font-family:宋体">以及</span></span><span style="font-size:12pt"><span style="font-family:Calibri">TerracottaJobStore</span></span><span style="font-size:12pt"><span style="font-family:宋体">一同工作。这些特性包括负载均衡和任务容错（如果</span></span><span style="font-size:12pt"><span style="font-family:Calibri">JobDetail</span></span><span style="font-size:12pt"><span style="font-family:宋体">的</span></span><span style="font-size:12pt"><span style="font-family:Calibri">"request recovery"</span></span> <span style="font-size:12pt"><span style="font-family:宋体">设置为</span></span><span style="font-size:12pt"><span style="font-family:宋体">true</span></span><span style="font-size:12pt"><span style="font-family:宋体">）。</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体"><strong>使用</strong></span></span><span style="font-size:12pt"><span style="font-family:Calibri"><strong>JobStoreTX </strong></span></span><span style="font-size:12pt"><span style="font-family:宋体"><strong>或</strong></span></span><span style="font-size:12pt"><span style="font-family:Calibri"><strong> JobStoreCMT</strong></span></span><span style="font-size:12pt"><span style="font-family:宋体"><strong>的集群</strong></span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">通过将</span></span><span style="font-size:12pt"><span style="font-family:Calibri">"org.quartz.jobStore.isClustered"</span></span><span style="font-size:12pt"><span style="font-family:宋体">属性值设置为</span></span><span style="font-size:12pt"><span style="font-family:宋体">true<span style="font-family:宋体">来启用集群。集群中的每个实例都应使用</span></span></span><span style="font-size:12pt"><span style="font-family:Calibri">quartz.properties</span></span><span style="font-size:12pt"><span style="font-family:宋体">文件的同一份拷贝。使用唯一配置文件的例外情况包含以下可允许的例外：线程池容量不同，以及</span></span> <span style="font-size:12pt"><span style="font-family:Calibri">"org.quartz.scheduler.instanceId" </span></span><span style="font-size:12pt"><span style="font-family:宋体">属性值不同。集群中的每个节点都必须有一个唯一的实例</span></span><span style="font-size:12pt"><span style="font-family:宋体">ID<span style="font-family:宋体">，将该值设为</span></span></span><span style="font-size:12pt"><span style="font-family:Calibri">"AUTO"</span></span><span style="font-size:12pt"><span style="font-family:宋体">即可轻易实现（不需要不同的配置文件）。</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">用于不要在不同的机器上使用集群，除非它们使用了某种时钟同步服务实现了时钟同步，且运行的非常规律（每个机器的时钟必须在同一秒内）。如果你还不太熟悉怎么实现可以看这里</span></span><a href="http://www.boulder.nist.gov/timefreq/service/its.htm" style="color:#1a8bc8; text-decoration:none"><span style="font-size:12pt"><span style="font-family:Calibri">http://www.boulder.nist.gov/timefreq/service/its.htm</span></span></a><span style="font-size:12pt"><span style="font-family:宋体">。</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">如果已经有集群实例使用了一组数据表，永远不要激活一个同样使用该组数据表的非集群实例，可能发生严重的数据冲突，并且运行状态一定是不稳定的。</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">每个任务每次只会被一个节点激活。我的意思是，如果某任务有一个触发器，它每隔</span></span><span style="font-size:12pt"><span style="font-family:宋体">10<span style="font-family:宋体">秒钟激活一次，那么在</span></span></span><span style="font-size:12pt"><span style="font-family:Calibri">12:00:00</span></span><span style="font-size:12pt"><span style="font-family:宋体">只有一个节点执行该任务，</span></span><span style="font-size:12pt"><span style="font-family:宋体">在</span></span><span style="font-size:12pt"><span style="font-family:Calibri">12:00:</span></span><span style="font-size:12pt"><span style="font-family:宋体">1</span></span><span style="font-size:12pt"><span style="font-family:Calibri">0</span></span><span style="font-size:12pt"><span style="font-family:宋体">也有一个节点执行该任务，以此类推。并不需要每次都是同一个节点</span></span><span style="font-size:12pt"><span style="font-family:宋体">--<span style="font-family:宋体">具体是哪个多少有一些随机性。对于繁忙调度器（有大量触发器）的负载均衡机制是近似随机的，但对于非繁忙调度器（只有一两个触发器）每次都是相同的活跃节点。</span></span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体"><strong>使用</strong></span></span><span style="font-size:12pt"><span style="font-family:Calibri"><strong>TerracottaJobStore</strong></span></span><span style="font-size:12pt"><span style="font-family:宋体"><strong>的集群</strong></span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">只需要将调度器配置为使用</span></span><span style="font-size:12pt"><span style="font-family:Calibri">TerracottaJobStore </span></span><span style="font-size:12pt"><span style="font-family:宋体">（第</span></span><span style="font-size:12pt"><span style="font-family:宋体">9<span style="font-family:宋体">章已经介绍</span></span></span><span style="font-size:12pt"><span style="font-family:宋体">），你的调度器就会全部配置为集群。</span></span><span style="font-size:12pt"><span style="font-family:宋体">也许你还想考虑如何设置你的</span></span><span style="font-size:12pt"><span style="font-family:Calibri">Terracotta </span></span><span style="font-size:12pt"><span style="font-family:宋体">服务器，尤其是如何开启持久性之类选项的配置，并且为了高可用而运行一批</span></span><span style="font-size:12pt"><span style="font-family:Calibri">Terracotta </span></span><span style="font-size:12pt"><span style="font-family:宋体">服务器。商业版的</span></span><span style="font-size:12pt"><span style="font-family:Calibri">TerracottaJobStore </span></span><span style="font-size:12pt"><span style="font-family:宋体">提供了</span></span><span style="font-size:12pt"><span style="font-family:Calibri">Quartz </span></span><span style="font-size:12pt"><span style="font-family:宋体">的高级特性，允许智能地将任务定位到合适的集群节点。关于</span></span><span style="font-size:12pt"><span style="font-family:Calibri">JobStore </span></span><span style="font-size:12pt"><span style="font-family:宋体">和</span></span><span style="font-size:12pt"><span style="font-family:Calibri">Terracotta </span></span><span style="font-size:12pt"><span style="font-family:宋体">的更多信息请查看</span></span> <a href="http://www.terracotta.org/quartz" style="color:#1a8bc8; text-decoration:none"><span style="font-size:12pt"><span style="font-family:Calibri">http://www.terracotta.org/quartz</span></span></a><span style="font-size:12pt"><span style="font-family:宋体">。</span></span></span></span></span></p>
<h3 style="margin-left:0px; margin-right:0px"><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:16pt"><span style="font-family:宋体">11.2 </span></span><span style="font-size:16pt"><span style="font-family:Arial">JTA </span></span><span style="font-size:16pt"><span style="font-family:宋体">事务</span></span></span></span></h3>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">在第</span></span><span style="font-size:12pt"><span style="font-family:宋体">9<span style="font-family:宋体">章已经解释过，</span></span></span><span style="font-size:12pt"><span style="font-family:Calibri">JobStoreCMT </span></span><span style="font-size:12pt"><span style="font-family:宋体">允许</span></span><span style="font-size:12pt"><span style="font-family:Calibri">Quartz </span></span><span style="font-size:12pt"><span style="font-family:宋体">的调度器在</span></span><span style="font-size:12pt"><span style="font-family:Calibri">JTA </span></span><span style="font-size:12pt"><span style="font-family:宋体">事务中运行。通过将</span></span><span style="font-size:12pt"><span style="font-family:Calibri">"org.quartz.scheduler.wrapJobExecutionInUserTransaction"</span></span><span style="font-size:12pt"><span style="font-family:宋体">属性设置为</span></span><span style="font-size:12pt"><span style="font-family:宋体">true<span style="font-family:宋体">，</span></span></span><span style="font-size:12pt"><span style="font-family:宋体">任务也可以在</span></span><span style="font-size:12pt"><span style="font-family:Calibri">JTA </span></span><span style="font-size:12pt"><span style="font-family:宋体">事务中运行（</span></span><span style="font-size:12pt"><span style="font-family:Calibri">UserTransaction</span></span><span style="font-size:12pt"><span style="font-family:宋体">）。设置该值后，一个</span></span><span style="font-size:12pt"><span style="font-family:Calibri">JTA </span></span><span style="font-size:12pt"><span style="font-family:宋体">事务的</span></span><span style="font-size:12pt"><span style="font-family:Calibri">begin()</span></span><span style="font-size:12pt"><span style="font-family:宋体">将在任务的</span></span><span style="font-size:12pt"><span style="font-family:Calibri">execute </span></span><span style="font-size:12pt"><span style="font-family:宋体">方法执行前被调用，并且在</span></span><span style="font-size:12pt"><span style="font-family:Calibri">commit() </span></span><span style="font-size:12pt"><span style="font-family:宋体">结束时</span></span><span style="font-size:12pt"><span style="font-family:Calibri">commit() </span></span><span style="font-size:12pt"><span style="font-family:宋体">被调用。这适用于所有任务。</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">如果你想为每个任务指定是否要由</span></span><span style="font-size:12pt"><span style="font-family:Calibri">JTA </span></span><span style="font-size:12pt"><span style="font-family:宋体">事务来包装它的执行，那你应当在该任务的类中使用</span></span><span style="font-size:12pt"><span style="font-family:Calibri">@ExecuteInJTATransaction</span></span><span style="font-size:12pt"><span style="font-family:宋体">标注。</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">当使用</span></span><span style="font-size:12pt"><span style="font-family:Calibri">JobStoreCMT</span></span><span style="font-size:12pt"><span style="font-family:宋体">时，</span></span><span style="font-size:12pt"><span style="font-family:宋体">除了</span></span><span style="font-size:12pt"><span style="font-family:Calibri">JTA </span></span><span style="font-size:12pt"><span style="font-family:宋体">事务自动包装任务执行之外，你在调度器接口上所进行的调用也会参与到事务中。你只需要确认在调度器上调用方法前已经启动了一个事务即可。你可以使用</span></span><span style="font-size:12pt"><span style="font-family:Calibri">UserTransaction</span></span><span style="font-size:12pt"><span style="font-family:宋体">来直接完成，或通过将你使用调度器的代码放到一个使用了容器管理事务的</span></span><span style="font-size:12pt"><span style="font-family:Calibri">SessionBean </span></span><span style="font-size:12pt"><span style="font-family:宋体">中。</span></span></span></span></span></p>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"> </span></span></span></p>
<h2 style="margin-left:0pt; margin-right:0px"><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:28px"><strong><span style="font-size:22pt"><span style="font-family:宋体">十二、</span></span><span style="font-size:22pt"><span style="font-family:宋体">其它特性</span></span></strong></span></span></span></h2>
<h3 style="margin-left:0px; margin-right:0px"><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:16pt"><span style="font-family:宋体">12.1 </span></span><span style="font-size:16pt"><span style="font-family:宋体">插件</span></span></span></span></h3>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:Calibri">Quartz </span></span><span style="font-size:12pt"><span style="font-family:宋体">为插入额外功能提供了一个接口</span></span><span style="font-size:12pt"><span style="font-family:Calibri">(org.quartz.spi.SchedulerPlugin)</span></span><span style="font-size:12pt"><span style="font-family:宋体">。</span></span><span style="font-size:12pt"><span style="font-family:Calibri">Quartz</span></span><span style="font-size:12pt"><span style="font-family:宋体">包含的插件提供了各种工具特性，你在</span></span><span style="font-size:12pt"><span style="font-family:Calibri">org.quartz.plugins</span></span><span style="font-size:12pt"><span style="font-family:宋体">包中能找到。它们提供了诸如任务自动调度、记录历史任务和触发器事件、确保在</span></span><span style="font-size:12pt"><span style="font-family:宋体">JVM<span style="font-family:宋体">存在时调度器干净的关闭等特性。</span></span></span></span></span></span></p>
<h3 style="margin-left:0px; margin-right:0px"><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:16pt"><span style="font-family:宋体">12.2 </span></span><span style="font-size:16pt"><span style="font-family:宋体">任务工厂</span></span><span style="font-size:16pt"><span style="font-family:宋体">(</span></span><span style="font-size:16pt"><span style="font-family:Arial">JobFactory</span></span><span style="font-size:16pt"><span style="font-family:宋体">)</span></span></span></span></h3>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:宋体">当触发器激活时，相关的任务将被调度器配置的</span></span><span style="font-size:12pt"><span style="font-family:Calibri">JobFactory </span></span><span style="font-size:12pt"><span style="font-family:宋体">实例化。默认的</span></span><span style="font-size:12pt"><span style="font-family:Calibri">JobFactory </span></span><span style="font-size:12pt"><span style="font-family:宋体">只是简单的调用任务类的</span></span><span style="font-size:12pt"><span style="font-family:Calibri">newInstance()</span></span><span style="font-size:12pt"><span style="font-family:宋体">方法。你可能想要创建你自己的</span></span><span style="font-size:12pt"><span style="font-family:Calibri">JobFactory </span></span><span style="font-size:12pt"><span style="font-family:宋体">实现以实现诸如让你应用程序的</span></span><span style="font-size:12pt"><span style="font-family:Calibri">IoC </span></span><span style="font-size:12pt"><span style="font-family:宋体">或</span></span><span style="font-size:12pt"><span style="font-family:Calibri">DI</span></span><span style="font-size:12pt"><span style="font-family:宋体">容器来产生或初始化任务实例。查看</span></span><span style="font-size:12pt"><span style="font-family:Calibri">org.quartz.spi.JobFactory</span></span><span style="font-size:12pt"><span style="font-family:宋体">接口，以及相关的</span></span><span style="font-size:12pt"><span style="font-family:Calibri">Scheduler.setJobFactory(fact) </span></span><span style="font-size:12pt"><span style="font-family:宋体">方法。</span></span></span></span></span></p>
<h3 style="margin-left:0px; margin-right:0px"><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:16pt"><span style="font-family:宋体">12.3 </span></span><span style="font-size:16pt"><span style="font-family:Arial">'Factory-Shipped' Jobs</span></span></span></span></h3>
<p><span style="font-size:13px"><span style="font-family:Verdana,Geneva,Arial,Helvetica,sans-serif"><span style="font-size:13px"><span style="font-size:12pt"><span style="font-family:Calibri">Quartz</span></span><span style="font-size:12pt"><span style="font-family:宋体">还提供了大量工具任务，你可以使用它们来完成诸如发送邮件和激活</span></span><span style="font-size:12pt"><span style="font-family:宋体">EJB<span style="font-family:宋体">等工作。这些开箱即用的任务在</span></span></span><span style="font-size:12pt"><span style="font-family:Calibri">org.quartz.jobs </span></span><span style="font-size:12pt"><span style="font-family:宋体">包中可以找到。</span></span></span></span></span></p>
</div>
