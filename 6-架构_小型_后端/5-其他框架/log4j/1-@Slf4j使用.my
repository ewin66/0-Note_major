<h1>JavaWeb日志管理---@Slf4j注解</h1>
<h3>@Slf4j注解的正确使用</h3>
<h2>1、添加依赖</h2>
<p>对于一个maven项目。首先要在pom.xml中加入以下依赖项：</p>
<pre>
<code> <dependency>
<groupId>org.slf4j</groupId>
<artifactId>slf4j-api</artifactId>
<version>1.7.5</version>
</dependency>
<dependency>
<groupId>org.slf4j</groupId>
<artifactId>slf4j-log4j12</artifactId>
<version>1.7.5</version>
</dependency>
<dependency>
<groupId>log4j</groupId>
<artifactId>log4j</artifactId>
<version>1.2.17</version>
</dependency>
<dependency>
<groupId>org.projectlombok</groupId>
<artifactId>lombok</artifactId>
<version>1.16.18</version>
<scope>provided</scope>
</dependency></code>slf4j就是众多接口的集合，它不负责具体的日志实现，只在编译时负责寻找合适的日志系统进行绑定。具体有哪些接口，全部都定义在slf4j-api中。</pre>
<ul>
<li>slf4j-log4j12是链接slf4j-api和log4j中间的适配器。它实现了slf4j-apiz中StaticLoggerBinder接口，从而使得在编译时绑定的是slf4j-log4j12的getSingleton()方法</li>
<li>log4j是具体的日志系统。通过slf4j-log4j12初始化Log4j，达到最终日志的输出。</li>
<li>lombok：一个插件，封装了log的get和set，可以直接使用log来输出日志信息。</li>
</ul>
<h2>2、安装lombak插件</h2>
<p>注意：如果注解@Slf4j注入后找不到变量log，那就给IDE安装lombok插件</p>
<p>下面以idea为例</p>
<p>在线方式：</p>
<p>File  → settings →  Plugins,  然后点击“Browse repositories” 如图</p>
<p>离线方式：</p>
<p>去idea官网下载插件 Lombok Plugin，导入到idea中 </p>
<p><a href="http://plugins.jetbrains.com/plugin/6317-lombok-plugin" rel="nofollow" target="_blank">http://plugins.jetbrains.com/plugin/6317-lombok-plugin</a> </p>
<h2>3、可以在代码中像如下例子一样使用@Slf4j注解：</h2>
<pre>
<code>@Slf4j
public class ValidatorAction {
public void printValidatorResult(Set<ConstraintViolation<ValidatorBean>> set1){
for(ConstraintViolation<ValidatorBean> constraintViolation:set1){
log.info("错误: "+constraintViolation.getMessage());
log.info("字段: "+constraintViolation.getPropertyPath().toString());
}
}
}</code></pre>
