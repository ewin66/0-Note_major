 #include <stdio.h>
    #include <iostream>
    int chess[23][23],step=0,m=0,n=0,count=0;
	/* chess[23][23]用来表示棋盘；
       step是步骤数；
       m和n是棋盘的规格行和列；
       count是运算次数；*/
    int f1(int x,int y),f2(int x,int y),f3(int x,int y),f4(int x,int y),f5(int x,int y),f6(int x,int y),f7(int x,int y),f8(int x,int y);
    /*申明函数，这些函数就是用来表示八种走的规则*/
    
	int h(int x,int y) /*h函数用来测试（x，y）位置处，下一步可以跳的位置数，返回值为sum */
    { int sum; /*用来记录下一步可以跳的位置数*/
    sum=0; 
    if(chess[x-1][y-2]==0)
    sum++; 
    if(chess[x-2][y+1]==0)
    sum++; 
    if(chess[x+2][y+1]==0)
    sum++; 
    if(chess[x+2][y-1]==0)
    sum++; 
    if(chess[x-2][y-1]==0)
    sum++; 
    if(chess[x-1][y+2]==0)
    sum++; 
    if(chess[x+1][y-2]==0)
    sum++; 
    if(chess[x+1][y+2]==0)
    sum++; 
    return(sum); /*每找到一个位置sum++，最后返回sum值就是在(x,y)处可走的位置数*/
    } 
    
int test(int x,int y) /*test函数测试第step步为(x,y)位置的情况下，是否可以走完棋盘，如果可以返回1,否则返回0*/
    { 
		int s[9],a[9]; 
		int min,i,j,k; 
		count++; 
		step++; 
		chess[x][y]=step;
		if(step==m*n)
			return(1); /*如果已经走到了m×n的话，表示满足结束条件，返回1 */
		s[1]=h(x-2,y+1);/*统计(x，y)处的下一步的八个位置的sum值*/
		s[2]=h(x-1,y+2); 
		s[3]=h(x+1,y+2); 
		s[4]=h(x+2,y+1); 
		s[5]=h(x+2,y-1); 
		s[6]=h(x+1,y-2); 
		s[7]=h(x-1,y-2); 
		s[8]=h(x-2,y-1); 
		for(j=1;j<=8;j++)  /*使用冒泡排序，对下一步的八个规则的sum从小到大排序*/
		{ 
			min=9; 
			a[j]=1; 
			for(i=1;i<=8;i++) 
			if(s[i]<min) 
			{ 
				min=s[i]; 
				a[j]=i; /*排序结果存放在a数组中*/
				k=i; 
			}
			s[k]=9; 
		} 
		for(i=1;i<=8;i++)  /*这个循环按sum从小到大的顺序依次调用相应的规则 */
		{ 
			if(a[i]==1) 
				if(f1(x,y)==1)
					return(1); 
			if(a[i]==2) 
				if(f2(x,y)==1) 
					return(1); 
			if(a[i]==3) 
				if(f3(x,y)==1) 
					return(1); 
			if(a[i]==4) 
				if(f4(x,y)==1) 
					return(1); 
			if(a[i]==5) 
				if(f5(x,y)==1) 
					return(1); 
			if(a[i]==6) 
				if(f6(x,y)==1) 
					return(1); 
			if(a[i]==7) 
				if(f7(x,y)==1) 
					return(1); 
			if(a[i]==8) 
				if(f8(x,y)==1) 
					return(1); 
    } 
    step--; /* 如果按任意八个规则都无法走满棋盘则回退，*/
    chess[x][y]=0;   /* 把棋盘恢复状态，并返回0*/
    return(0); 
    } 
    
	/*按规则1走步 */
    int f1(int x,int y) 
    { 
		if(chess[x-2][y+1]==0)
			if(test(x-2,y+1)==1) 
				return(1); 
		return(0); 
    } 
    /*按规则2走步 */
    int f2(int x,int y) 
    {
		if(chess[x-1][y+2]==0)
			if(test(x-1,y+2)==1) 
				return(1); 
		return(0); 
    } 
    /*按规则3走步 */
    int f3(int x,int y) 
    { 
		if(chess[x+1][y+2]==0)
			if(test(x+1,y+2)==1) 
				return(1); 
		return(0); 
    } 
    /*按规则4走步 */
    int f4(int x,int y) 
    { 
		if(chess[x+2][y+1]==0)
			if(test(x+2,y+1)==1) 
				return(1); 
		return(0); 
    } 
    /*按规则5走步 */
    int f5(int x,int y) 
    { 
		if(chess[x+2][y-1]==0)
			if(test(x+2,y-1)==1) 
				return(1); 
		return(0); 
    } 
    /*按规则6走步 */
    int f6(int x,int y) 
    { 
		if(chess[x+1][y-2]==0)
			if(test(x+1,y-2)==1) 
				return(1); 
		return(0); 
    } 
    /*按规则7走步 */
    int f7(int x,int y) 
    { 
		if(chess[x-1][y-2]==0)
			if(test(x-1,y-2)==1) 
				return(1); 
		return(0); 
    } 
    /*按规则8走步 */
    int f8(int x,int y) 
    { 
		if(chess[x-2][y-1]==0)
			if(test(x-2,y-1)==1) 
				return(1); 
		return(0); 
    }


int main() 
{ 
	int i,j,x0,y0,q=0,cou;
	while(q==0) 
	{  
		system("cls");
		printf("\n----------------------欢 迎 使 用 马 踏 棋 盘 演 示 系 统-----------------------\n");
		printf("\n\n                         按 回 车 键 进 入 演 示 系 统                          \n\n\n\n");
		getchar();
		system("cls");
		printf("\n----------------------欢 迎 使 用 马 踏 棋 盘 演 示 系 统-----------------------\n");
		for(i=0;i<23;i++)   /* 初始化棋盘大小  */
			for(j=0;j<23;j++) 
				chess[i][j]=-1;
		printf("\n输入棋盘行数:");
		scanf("%d",&m);
		printf("\n输入棋盘列数:");
		scanf("%d",&n);  /* 输入目标棋盘的大小 */
		for(i=2;i<=m+1;i++)
			for(j=2;j<=n+1;j++)
				chess[i][j]=0;
		printf("\n起始点行坐标:");
		scanf("%d",&x0); 
		printf("\n起始点列坐标:");
		scanf("%d",&y0);     /* 取得初始位置 */
		if((x0>=1&&x0<=m)&&(y0>=1&&y0<=n)) /* 判断输入是否有效*/
		{   
			if(test(x0+1,y0+1)==1)/*测试是否可以走完，如果可以则回车，动态演示；否则退出，重新输入*/
			{ 
				printf("\n可以全部走完，过程按回车键演示过程====>");
				getchar();
				for(cou=1;cou<=count;cou++)/*动态显示行走过程，每回车一次，显示下一步马的位置*/
				{
					getchar();
					system("cls");
					printf("\n----------------------欢 迎 使 用 马 踏 棋 盘 演 示 系 统-----------------------\n");
					printf("正在为您演示……\n");
					printf("第%d步：",cou);
					for(i=2;i<=m+1;i++)
					{
						printf("\n"); 
						for(j=2;j<=n+1;j++)
							if(chess[i][j]==0)
								printf("●");/*如果该点已经走过，就在这点打印"●"*/
							else if(cou==chess[i][j])
							{
								printf("马");/*如果在这一步马在该点，则在这点打印"马"*/
								chess[i][j]=0;
							}
							else
							{
								if(i==2&&j==2)
									printf("┌");
								if(i==2&&j>2&&j<n+1)
									printf("┬");
								if(i==2&&j==n+1)
									printf("┐");
								if(i>2&&i<m+1&&j==2)
									printf("├");
								if(i==m+1&&j==2)
									printf("└");
								if(i==m+1&&j>2&&j<n+1)
									printf("┴");
								if(i==m+1&&j==n+1)
									printf("┘");
								if(i>2&&i<m+1&&j==n+1)
									printf("┤");
								if(i>2&&i<m+1&&j>2&&j<n+1)
									printf("┼");/*打印棋盘*/						
							}
					}
					if(cou<m*n)
						printf("\n按回车键演示下一步");
					else
						printf("\n演示完毕!按任意键退出.\n");
				}
				q=1;
				}
			else 
			{
				printf("\n无法全部走完!按回车键重新输入!\n");
				getchar();
				getchar();
				count=0;	 
			}
		}
		else
		{
			printf("\n输入错误!超过范围!\n");
			printf("\n按回车键重新输入!\n");
			getchar();
			getchar();
		}
	}
}
